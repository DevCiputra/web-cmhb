{
  "version": 3,
  "sources": ["../../trix/src/trix/config/attachments.js", "../../trix/src/trix/config/block_attributes.js", "../../trix/src/trix/config/browser.js", "../../trix/src/trix/config/lang.js", "../../trix/src/trix/config/file_size_formatting.js", "../../trix/src/trix/constants.js", "../../trix/src/trix/core/helpers/extend.js", "../../trix/src/trix/core/helpers/dom.js", "../../trix/src/trix/config/input.js", "../../trix/src/trix/config/key_names.js", "../../trix/src/trix/config/parser.js", "../../trix/src/trix/config/text_attributes.js", "../../trix/src/trix/config/toolbar.js", "../../trix/src/trix/config/undo.js", "../../trix/src/trix/config/css.js", "../../trix/src/trix/core/basic_object.js", "../../trix/src/trix/core/utilities/utf16_string.js", "../../trix/src/trix/core/object.js", "../../trix/src/trix/core/helpers/arrays.js", "../../trix/src/trix/core/helpers/bidi.js", "../../trix/src/trix/core/helpers/config.js", "../../trix/src/trix/core/helpers/custom_elements.js", "../../trix/src/trix/core/helpers/events.js", "../../trix/src/trix/core/helpers/functions.js", "../../trix/src/trix/core/helpers/objects.js", "../../trix/src/trix/core/helpers/ranges.js", "../../trix/src/trix/observers/selection_change_observer.js", "../../trix/src/trix/core/helpers/strings.js", "../../trix/src/trix/core/collections/hash.js", "../../trix/src/trix/core/collections/object_group.js", "../../trix/src/trix/core/collections/object_map.js", "../../trix/src/trix/core/collections/element_store.js", "../../trix/src/trix/core/utilities/operation.js", "../../trix/src/trix/views/object_view.js", "../../trix/src/trix/models/html_sanitizer.js", "../../trix/src/trix/views/attachment_view.js", "../../trix/src/trix/views/previewable_attachment_view.js", "../../trix/src/trix/views/piece_view.js", "../../trix/src/trix/views/text_view.js", "../../trix/src/trix/views/block_view.js", "../../trix/src/trix/views/document_view.js", "../../trix/src/trix/models/piece.js", "../../trix/src/trix/operations/image_preload_operation.js", "../../trix/src/trix/models/attachment.js", "../../trix/src/trix/models/attachment_piece.js", "../../trix/src/trix/models/string_piece.js", "../../trix/src/trix/models/splittable_list.js", "../../trix/src/trix/models/text.js", "../../trix/src/trix/models/block.js", "../../trix/src/trix/models/document.js", "../../trix/src/trix/models/html_parser.js", "../../trix/src/trix/core/serialization.js", "../../trix/src/trix/models/managed_attachment.js", "../../trix/src/trix/models/attachment_manager.js", "../../trix/src/trix/models/line_break_insertion.js", "../../trix/src/trix/models/composition.js", "../../trix/src/trix/models/undo_manager.js", "../../trix/src/trix/filters/filter.js", "../../trix/src/trix/filters/attachment_gallery_filter.js", "../../trix/src/trix/models/editor.js", "../../trix/src/trix/models/location_mapper.js", "../../trix/src/trix/models/point_mapper.js", "../../trix/src/trix/models/selection_manager.js", "../../trix/src/trix/controllers/attachment_editor_controller.js", "../../trix/src/trix/controllers/composition_controller.js", "../../trix/src/trix/controllers/controller.js", "../../trix/src/trix/observers/mutation_observer.js", "../../trix/src/trix/operations/file_verification_operation.js", "../../trix/src/trix/models/flaky_android_keyboard_detector.js", "../../trix/src/trix/controllers/input_controller.js", "../../trix/src/trix/controllers/level_0_input_controller.js", "../../trix/src/trix/controllers/level_2_input_controller.js", "../../trix/src/trix/controllers/toolbar_controller.js", "../../trix/src/trix/controllers/editor_controller.js", "../../trix/src/trix/elements/trix_toolbar_element.js", "../../trix/src/trix/elements/trix_editor_element.js", "../../trix/src/trix/trix.js"],
  "sourcesContent": ["export const attachmentSelector = \"[data-trix-attachment]\"\n\nconst attachments = {\n  preview: {\n    presentation: \"gallery\",\n    caption: {\n      name: true,\n      size: true,\n    },\n  },\n  file: {\n    caption: {\n      size: true,\n    },\n  },\n}\nexport default attachments\n", "const attributes = {\n  default: {\n    tagName: \"div\",\n    parse: false,\n  },\n  quote: {\n    tagName: \"blockquote\",\n    nestable: true,\n  },\n  heading1: {\n    tagName: \"h1\",\n    terminal: true,\n    breakOnReturn: true,\n    group: false,\n  },\n  code: {\n    tagName: \"pre\",\n    terminal: true,\n    htmlAttributes: [ \"language\" ],\n    text: {\n      plaintext: true,\n    },\n  },\n  bulletList: {\n    tagName: \"ul\",\n    parse: false,\n  },\n  bullet: {\n    tagName: \"li\",\n    listAttribute: \"bulletList\",\n    group: false,\n    nestable: true,\n    test(element) {\n      return tagName(element.parentNode) === attributes[this.listAttribute].tagName\n    },\n  },\n  numberList: {\n    tagName: \"ol\",\n    parse: false,\n  },\n  number: {\n    tagName: \"li\",\n    listAttribute: \"numberList\",\n    group: false,\n    nestable: true,\n    test(element) {\n      return tagName(element.parentNode) === attributes[this.listAttribute].tagName\n    },\n  },\n  attachmentGallery: {\n    tagName: \"div\",\n    exclusive: true,\n    terminal: true,\n    parse: false,\n    group: false,\n  },\n}\n\nconst tagName = (element) => element?.tagName?.toLowerCase()\n\nexport default attributes\n", "const androidVersionMatch = navigator.userAgent.match(/android\\s([0-9]+.*Chrome)/i)\nconst androidVersion = androidVersionMatch && parseInt(androidVersionMatch[1])\n\nexport default {\n  // Android emits composition events when moving the cursor through existing text\n  // Introduced in Chrome 65: https://bugs.chromium.org/p/chromium/issues/detail?id=764439#c9\n  composesExistingText: /Android.*Chrome/.test(navigator.userAgent),\n\n  // Android 13, especially on Samsung keyboards, emits extra compositionend and beforeinput events\n  // that can make the input handler lose the current selection or enter an infinite input -> render -> input\n  // loop.\n  recentAndroid: androidVersion && androidVersion > 12,\n  samsungAndroid: androidVersion && navigator.userAgent.match(/Android.*SM-/),\n\n  // IE 11 activates resizing handles on editable elements that have \"layout\"\n  forcesObjectResizing: /Trident.*rv:11/.test(navigator.userAgent),\n  // https://www.w3.org/TR/input-events-1/ + https://www.w3.org/TR/input-events-2/\n  supportsInputEvents: typeof InputEvent !== \"undefined\" &&\n    [ \"data\", \"getTargetRanges\", \"inputType\" ].every(prop => prop in InputEvent.prototype),\n}\n", "export default {\n  attachFiles: \"Attach Files\",\n  bold: \"Bold\",\n  bullets: \"Bullets\",\n  byte: \"Byte\",\n  bytes: \"Bytes\",\n  captionPlaceholder: \"Add a caption…\",\n  code: \"Code\",\n  heading1: \"Heading\",\n  indent: \"Increase Level\",\n  italic: \"Italic\",\n  link: \"Link\",\n  numbers: \"Numbers\",\n  outdent: \"Decrease Level\",\n  quote: \"Quote\",\n  redo: \"Redo\",\n  remove: \"Remove\",\n  strike: \"Strikethrough\",\n  undo: \"Undo\",\n  unlink: \"Unlink\",\n  url: \"URL\",\n  urlPlaceholder: \"Enter a URL…\",\n  GB: \"GB\",\n  KB: \"KB\",\n  MB: \"MB\",\n  PB: \"PB\",\n  TB: \"TB\",\n}\n", "/* eslint-disable\n    no-case-declarations,\n*/\nimport lang from \"trix/config/lang\"\n\nconst sizes = [ lang.bytes, lang.KB, lang.MB, lang.GB, lang.TB, lang.PB ]\n\nexport default {\n  prefix: \"IEC\",\n  precision: 2,\n\n  formatter(number) {\n    switch (number) {\n      case 0:\n        return `0 ${lang.bytes}`\n      case 1:\n        return `1 ${lang.byte}`\n      default:\n        let base\n\n        if (this.prefix === \"SI\") {\n          base = 1000\n        } else if (this.prefix === \"IEC\") {\n          base = 1024\n        }\n\n        const exp = Math.floor(Math.log(number) / Math.log(base))\n        const humanSize = number / Math.pow(base, exp)\n        const string = humanSize.toFixed(this.precision)\n        const withoutInsignificantZeros = string.replace(/0*$/, \"\").replace(/\\.$/, \"\")\n        return `${withoutInsignificantZeros} ${sizes[exp]}`\n    }\n  },\n}\n", "export const ZERO_WIDTH_SPACE = \"\\uFEFF\"\nexport const NON_BREAKING_SPACE = \"\\u00A0\"\nexport const OBJECT_REPLACEMENT_CHARACTER = \"\\uFFFC\"\n", "export const extend = function(properties) {\n  for (const key in properties) {\n    const value = properties[key]\n    this[key] = value\n  }\n  return this\n}\n", "import blockAttributes from \"trix/config/block_attributes\"\nimport { ZERO_WIDTH_SPACE } from \"trix/constants\"\nimport { extend } from \"./extend\"\nimport { attachmentSelector } from \"trix/config/attachments\"\n\nconst html = document.documentElement\nconst match = html.matches\n\nexport const handleEvent = function(eventName, { onElement, matchingSelector, withCallback, inPhase, preventDefault, times } = {}) {\n  const element = onElement ? onElement : html\n  const selector = matchingSelector\n  const useCapture = inPhase === \"capturing\"\n\n  const handler = function(event) {\n    if (times != null && --times === 0) {\n      handler.destroy()\n    }\n    const target = findClosestElementFromNode(event.target, { matchingSelector: selector })\n    if (target != null) {\n      withCallback?.call(target, event, target)\n      if (preventDefault) {\n        event.preventDefault()\n      }\n    }\n  }\n\n  handler.destroy = () => element.removeEventListener(eventName, handler, useCapture)\n\n  element.addEventListener(eventName, handler, useCapture)\n  return handler\n}\n\nexport const handleEventOnce = function(eventName, options = {}) {\n  options.times = 1\n  return handleEvent(eventName, options)\n}\n\nexport const triggerEvent = function(eventName, { onElement, bubbles, cancelable, attributes } = {}) {\n  const element = onElement != null ? onElement : html\n  bubbles = bubbles !== false\n  cancelable = cancelable !== false\n\n  const event = document.createEvent(\"Events\")\n  event.initEvent(eventName, bubbles, cancelable)\n  if (attributes != null) {\n    extend.call(event, attributes)\n  }\n  return element.dispatchEvent(event)\n}\n\nexport const elementMatchesSelector = function(element, selector) {\n  if (element?.nodeType === 1) {\n    return match.call(element, selector)\n  }\n}\n\nexport const findClosestElementFromNode = function(node, { matchingSelector, untilNode } = {}) {\n  while (node && node.nodeType !== Node.ELEMENT_NODE) {\n    node = node.parentNode\n  }\n  if (node == null) {\n    return\n  }\n\n  if (matchingSelector != null) {\n    if (node.closest && untilNode == null) {\n      return node.closest(matchingSelector)\n    } else {\n      while (node && node !== untilNode) {\n        if (elementMatchesSelector(node, matchingSelector)) {\n          return node\n        }\n        node = node.parentNode\n      }\n    }\n  } else {\n    return node\n  }\n}\n\nexport const findInnerElement = function(element) {\n  while (element?.firstElementChild) {\n    element = element.firstElementChild\n  }\n  return element\n}\n\nexport const innerElementIsActive = (element) =>\n  document.activeElement !== element && elementContainsNode(element, document.activeElement)\n\nexport const elementContainsNode = function(element, node) {\n  if (!element || !node) {\n    return\n  }\n  while (node) {\n    if (node === element) {\n      return true\n    }\n    node = node.parentNode\n  }\n}\n\nexport const findNodeFromContainerAndOffset = function(container, offset) {\n  if (!container) {\n    return\n  }\n  if (container.nodeType === Node.TEXT_NODE) {\n    return container\n  } else if (offset === 0) {\n    return container.firstChild != null ? container.firstChild : container\n  } else {\n    return container.childNodes.item(offset - 1)\n  }\n}\n\nexport const findElementFromContainerAndOffset = function(container, offset) {\n  const node = findNodeFromContainerAndOffset(container, offset)\n  return findClosestElementFromNode(node)\n}\n\nexport const findChildIndexOfNode = function(node) {\n  if (!node?.parentNode) {\n    return\n  }\n  let childIndex = 0\n  node = node.previousSibling\n  while (node) {\n    childIndex++\n    node = node.previousSibling\n  }\n  return childIndex\n}\n\nexport const removeNode = (node) => node?.parentNode?.removeChild(node)\n\nexport const walkTree = function(tree, { onlyNodesOfType, usingFilter, expandEntityReferences } = {}) {\n  const whatToShow = (() => {\n    switch (onlyNodesOfType) {\n      case \"element\":\n        return NodeFilter.SHOW_ELEMENT\n      case \"text\":\n        return NodeFilter.SHOW_TEXT\n      case \"comment\":\n        return NodeFilter.SHOW_COMMENT\n      default:\n        return NodeFilter.SHOW_ALL\n    }\n  })()\n\n  return document.createTreeWalker(\n    tree,\n    whatToShow,\n    usingFilter != null ? usingFilter : null,\n    expandEntityReferences === true\n  )\n}\n\nexport const tagName = (element) => element?.tagName?.toLowerCase()\n\nexport const makeElement = function(tag, options = {}) {\n  let key, value\n  if (typeof tag === \"object\") {\n    options = tag\n    tag = options.tagName\n  } else {\n    options = { attributes: options }\n  }\n\n  const element = document.createElement(tag)\n\n  if (options.editable != null) {\n    if (options.attributes == null) {\n      options.attributes = {}\n    }\n    options.attributes.contenteditable = options.editable\n  }\n\n  if (options.attributes) {\n    for (key in options.attributes) {\n      value = options.attributes[key]\n      element.setAttribute(key, value)\n    }\n  }\n\n  if (options.style) {\n    for (key in options.style) {\n      value = options.style[key]\n      element.style[key] = value\n    }\n  }\n\n  if (options.data) {\n    for (key in options.data) {\n      value = options.data[key]\n      element.dataset[key] = value\n    }\n  }\n\n  if (options.className) {\n    options.className.split(\" \").forEach((className) => {\n      element.classList.add(className)\n    })\n  }\n\n  if (options.textContent) {\n    element.textContent = options.textContent\n  }\n\n  if (options.childNodes) {\n    [].concat(options.childNodes).forEach((childNode) => {\n      element.appendChild(childNode)\n    })\n  }\n\n  return element\n}\n\nlet blockTagNames = undefined\n\nexport const getBlockTagNames = function() {\n  if (blockTagNames != null) {\n    return blockTagNames\n  }\n\n  blockTagNames = []\n  for (const key in blockAttributes) {\n    const attributes = blockAttributes[key]\n    if (attributes.tagName) {\n      blockTagNames.push(attributes.tagName)\n    }\n  }\n\n  return blockTagNames\n}\n\nexport const nodeIsBlockContainer = (node) => nodeIsBlockStartComment(node?.firstChild)\n\nexport const nodeProbablyIsBlockContainer = function(node) {\n  return getBlockTagNames().includes(tagName(node)) && !getBlockTagNames().includes(tagName(node.firstChild))\n}\n\nexport const nodeIsBlockStart = function(node, { strict } = { strict: true }) {\n  if (strict) {\n    return nodeIsBlockStartComment(node)\n  } else {\n    return (\n      nodeIsBlockStartComment(node) || !nodeIsBlockStartComment(node.firstChild) && nodeProbablyIsBlockContainer(node)\n    )\n  }\n}\n\nexport const nodeIsBlockStartComment = (node) => nodeIsCommentNode(node) && node?.data === \"block\"\n\nexport const nodeIsCommentNode = (node) => node?.nodeType === Node.COMMENT_NODE\n\nexport const nodeIsCursorTarget = function(node, { name } = {}) {\n  if (!node) {\n    return\n  }\n  if (nodeIsTextNode(node)) {\n    if (node.data === ZERO_WIDTH_SPACE) {\n      if (name) {\n        return node.parentNode.dataset.trixCursorTarget === name\n      } else {\n        return true\n      }\n    }\n  } else {\n    return nodeIsCursorTarget(node.firstChild)\n  }\n}\n\nexport const nodeIsAttachmentElement = (node) => elementMatchesSelector(node, attachmentSelector)\n\nexport const nodeIsEmptyTextNode = (node) => nodeIsTextNode(node) && node?.data === \"\"\n\nexport const nodeIsTextNode = (node) => node?.nodeType === Node.TEXT_NODE\n", "import browser from \"trix/config/browser\"\nimport { makeElement, removeNode } from \"trix/core/helpers/dom\"\n\nconst input = {\n  level2Enabled: true,\n\n  getLevel() {\n    if (this.level2Enabled && browser.supportsInputEvents) {\n      return 2\n    } else {\n      return 0\n    }\n  },\n  pickFiles(callback) {\n    const input = makeElement(\"input\", { type: \"file\", multiple: true, hidden: true, id: this.fileInputId })\n\n    input.addEventListener(\"change\", () => {\n      callback(input.files)\n      removeNode(input)\n    })\n\n    removeNode(document.getElementById(this.fileInputId))\n    document.body.appendChild(input)\n    input.click()\n  }\n}\n\nexport default input\n", "export default {\n  8: \"backspace\",\n  9: \"tab\",\n  13: \"return\",\n  27: \"escape\",\n  37: \"left\",\n  39: \"right\",\n  46: \"delete\",\n  68: \"d\",\n  72: \"h\",\n  79: \"o\",\n}\n", "export default {\n  removeBlankTableCells: false,\n  tableCellSeparator: \" | \",\n  tableRowSeparator: \"\\n\",\n}\n", "import { attachmentSelector } from \"trix/config/attachments\"\n\nexport default {\n  bold: {\n    tagName: \"strong\",\n    inheritable: true,\n    parser(element) {\n      const style = window.getComputedStyle(element)\n      return style.fontWeight === \"bold\" || style.fontWeight >= 600\n    },\n  },\n  italic: {\n    tagName: \"em\",\n    inheritable: true,\n    parser(element) {\n      const style = window.getComputedStyle(element)\n      return style.fontStyle === \"italic\"\n    },\n  },\n  href: {\n    groupTagName: \"a\",\n    parser(element) {\n      const matchingSelector = `a:not(${attachmentSelector})`\n      const link = element.closest(matchingSelector)\n      if (link) {\n        return link.getAttribute(\"href\")\n      }\n    },\n  },\n  strike: {\n    tagName: \"del\",\n    inheritable: true,\n  },\n  frozen: {\n    style: { backgroundColor: \"highlight\" },\n  },\n}\n", "import lang from \"trix/config/lang\"\n\nexport default {\n  getDefaultHTML() {\n    return `<div class=\"trix-button-row\">\n      <span class=\"trix-button-group trix-button-group--text-tools\" data-trix-button-group=\"text-tools\">\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-bold\" data-trix-attribute=\"bold\" data-trix-key=\"b\" title=\"${lang.bold}\" tabindex=\"-1\">${lang.bold}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-italic\" data-trix-attribute=\"italic\" data-trix-key=\"i\" title=\"${lang.italic}\" tabindex=\"-1\">${lang.italic}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-strike\" data-trix-attribute=\"strike\" title=\"${lang.strike}\" tabindex=\"-1\">${lang.strike}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-link\" data-trix-attribute=\"href\" data-trix-action=\"link\" data-trix-key=\"k\" title=\"${lang.link}\" tabindex=\"-1\">${lang.link}</button>\n      </span>\n\n      <span class=\"trix-button-group trix-button-group--block-tools\" data-trix-button-group=\"block-tools\">\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-heading-1\" data-trix-attribute=\"heading1\" title=\"${lang.heading1}\" tabindex=\"-1\">${lang.heading1}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-quote\" data-trix-attribute=\"quote\" title=\"${lang.quote}\" tabindex=\"-1\">${lang.quote}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-code\" data-trix-attribute=\"code\" title=\"${lang.code}\" tabindex=\"-1\">${lang.code}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-bullet-list\" data-trix-attribute=\"bullet\" title=\"${lang.bullets}\" tabindex=\"-1\">${lang.bullets}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-number-list\" data-trix-attribute=\"number\" title=\"${lang.numbers}\" tabindex=\"-1\">${lang.numbers}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-decrease-nesting-level\" data-trix-action=\"decreaseNestingLevel\" title=\"${lang.outdent}\" tabindex=\"-1\">${lang.outdent}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-increase-nesting-level\" data-trix-action=\"increaseNestingLevel\" title=\"${lang.indent}\" tabindex=\"-1\">${lang.indent}</button>\n      </span>\n\n      <span class=\"trix-button-group trix-button-group--file-tools\" data-trix-button-group=\"file-tools\">\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-attach\" data-trix-action=\"attachFiles\" title=\"${lang.attachFiles}\" tabindex=\"-1\">${lang.attachFiles}</button>\n      </span>\n\n      <span class=\"trix-button-group-spacer\"></span>\n\n      <span class=\"trix-button-group trix-button-group--history-tools\" data-trix-button-group=\"history-tools\">\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-undo\" data-trix-action=\"undo\" data-trix-key=\"z\" title=\"${lang.undo}\" tabindex=\"-1\">${lang.undo}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-redo\" data-trix-action=\"redo\" data-trix-key=\"shift+z\" title=\"${lang.redo}\" tabindex=\"-1\">${lang.redo}</button>\n      </span>\n    </div>\n\n    <div class=\"trix-dialogs\" data-trix-dialogs>\n      <div class=\"trix-dialog trix-dialog--link\" data-trix-dialog=\"href\" data-trix-dialog-attribute=\"href\">\n        <div class=\"trix-dialog__link-fields\">\n          <input type=\"url\" name=\"href\" class=\"trix-input trix-input--dialog\" placeholder=\"${lang.urlPlaceholder}\" aria-label=\"${lang.url}\" required data-trix-input>\n          <div class=\"trix-button-group\">\n            <input type=\"button\" class=\"trix-button trix-button--dialog\" value=\"${lang.link}\" data-trix-method=\"setAttribute\">\n            <input type=\"button\" class=\"trix-button trix-button--dialog\" value=\"${lang.unlink}\" data-trix-method=\"removeAttribute\">\n          </div>\n        </div>\n      </div>\n    </div>`\n  },\n}\n", "const undo = { interval: 5000 }\nexport default undo\n", "export default {\n  attachment: \"attachment\",\n  attachmentCaption: \"attachment__caption\",\n  attachmentCaptionEditor: \"attachment__caption-editor\",\n  attachmentMetadata: \"attachment__metadata\",\n  attachmentMetadataContainer: \"attachment__metadata-container\",\n  attachmentName: \"attachment__name\",\n  attachmentProgress: \"attachment__progress\",\n  attachmentSize: \"attachment__size\",\n  attachmentToolbar: \"attachment__toolbar\",\n  attachmentGallery: \"attachment-gallery\",\n}\n", "export default class BasicObject {\n  static proxyMethod(expression) {\n    const { name, toMethod, toProperty, optional } = parseProxyMethodExpression(expression)\n\n    this.prototype[name] = function() {\n      let subject\n      let object\n\n      if (toMethod) {\n        if (optional) {\n          object = this[toMethod]?.()\n        } else {\n          object = this[toMethod]()\n        }\n      } else if (toProperty) {\n        object = this[toProperty]\n      }\n\n      if (optional) {\n        subject = object?.[name]\n        if (subject) {\n          return apply.call(subject, object, arguments)\n        }\n      } else {\n        subject = object[name]\n        return apply.call(subject, object, arguments)\n      }\n    }\n  }\n}\n\nconst parseProxyMethodExpression = function(expression) {\n  const match = expression.match(proxyMethodExpressionPattern)\n  if (!match) {\n    throw new Error(`can't parse @proxyMethod expression: ${expression}`)\n  }\n\n  const args = { name: match[4] }\n\n  if (match[2] != null) {\n    args.toMethod = match[1]\n  } else {\n    args.toProperty = match[1]\n  }\n\n  if (match[3] != null) {\n    args.optional = true\n  }\n\n  return args\n}\n\nconst { apply } = Function.prototype\n\nconst proxyMethodExpressionPattern = new RegExp(\"\\\n^\\\n(.+?)\\\n(\\\\(\\\\))?\\\n(\\\\?)?\\\n\\\\.\\\n(.+?)\\\n$\\\n\")\n", "import BasicObject from \"trix/core/basic_object\"\n\nexport default class UTF16String extends BasicObject {\n  static box(value = \"\") {\n    if (value instanceof this) {\n      return value\n    } else {\n      return this.fromUCS2String(value?.toString())\n    }\n  }\n\n  static fromUCS2String(ucs2String) {\n    return new this(ucs2String, ucs2decode(ucs2String))\n  }\n\n  static fromCodepoints(codepoints) {\n    return new this(ucs2encode(codepoints), codepoints)\n  }\n\n  constructor(ucs2String, codepoints) {\n    super(...arguments)\n    this.ucs2String = ucs2String\n    this.codepoints = codepoints\n    this.length = this.codepoints.length\n    this.ucs2Length = this.ucs2String.length\n  }\n\n  offsetToUCS2Offset(offset) {\n    return ucs2encode(this.codepoints.slice(0, Math.max(0, offset))).length\n  }\n\n  offsetFromUCS2Offset(ucs2Offset) {\n    return ucs2decode(this.ucs2String.slice(0, Math.max(0, ucs2Offset))).length\n  }\n\n  slice() {\n    return this.constructor.fromCodepoints(this.codepoints.slice(...arguments))\n  }\n\n  charAt(offset) {\n    return this.slice(offset, offset + 1)\n  }\n\n  isEqualTo(value) {\n    return this.constructor.box(value).ucs2String === this.ucs2String\n  }\n\n  toJSON() {\n    return this.ucs2String\n  }\n\n  getCacheKey() {\n    return this.ucs2String\n  }\n\n  toString() {\n    return this.ucs2String\n  }\n}\n\nconst hasArrayFrom = Array.from?.(\"\\ud83d\\udc7c\").length === 1\nconst hasStringCodePointAt = \" \".codePointAt?.(0) != null\nconst hasStringFromCodePoint = String.fromCodePoint?.(32, 128124) === \" \\ud83d\\udc7c\"\n\n// UCS-2 conversion helpers ported from Mathias Bynens' Punycode.js:\n// https://github.com/bestiejs/punycode.js#punycodeucs2\n\nlet ucs2decode, ucs2encode\n\n// Creates an array containing the numeric code points of each Unicode\n// character in the string. While JavaScript uses UCS-2 internally,\n// this function will convert a pair of surrogate halves (each of which\n// UCS-2 exposes as separate characters) into a single code point,\n// matching UTF-16.\nif (hasArrayFrom && hasStringCodePointAt) {\n  ucs2decode = (string) => Array.from(string).map((char) => char.codePointAt(0))\n} else {\n  ucs2decode = function(string) {\n    const output = []\n    let counter = 0\n    const { length } = string\n\n    while (counter < length) {\n      let value = string.charCodeAt(counter++)\n      if (0xd800 <= value && value <= 0xdbff && counter < length) {\n        // high surrogate, and there is a next character\n        const extra = string.charCodeAt(counter++)\n        if ((extra & 0xfc00) === 0xdc00) {\n          // low surrogate\n          value = ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000\n        } else {\n          // unmatched surrogate; only append this code unit, in case the\n          // next code unit is the high surrogate of a surrogate pair\n          counter--\n        }\n      }\n      output.push(value)\n    }\n\n    return output\n  }\n}\n\n// Creates a string based on an array of numeric code points.\nif (hasStringFromCodePoint) {\n  ucs2encode = (array) => String.fromCodePoint(...Array.from(array || []))\n} else {\n  ucs2encode = function(array) {\n    const characters = (() => {\n      const result = []\n\n      Array.from(array).forEach((value) => {\n        let output = \"\"\n        if (value > 0xffff) {\n          value -= 0x10000\n          output += String.fromCharCode(value >>> 10 & 0x3ff | 0xd800)\n          value = 0xdc00 | value & 0x3ff\n        }\n        result.push(output + String.fromCharCode(value))\n      })\n\n      return result\n    })()\n\n    return characters.join(\"\")\n  }\n}\n", "import BasicObject from \"trix/core/basic_object\"\nimport UTF16String from \"trix/core/utilities/utf16_string\"\n\nlet id = 0\n\nexport default class TrixObject extends BasicObject {\n  static fromJSONString(jsonString) {\n    return this.fromJSON(JSON.parse(jsonString))\n  }\n\n  constructor() {\n    super(...arguments)\n    this.id = ++id\n  }\n\n  hasSameConstructorAs(object) {\n    return this.constructor === object?.constructor\n  }\n\n  isEqualTo(object) {\n    return this === object\n  }\n\n  inspect() {\n    const parts = []\n    const contents = this.contentsForInspection() || {}\n\n    for (const key in contents) {\n      const value = contents[key]\n      parts.push(`${key}=${value}`)\n    }\n\n    return `#<${this.constructor.name}:${this.id}${parts.length ? ` ${parts.join(\", \")}` : \"\"}>`\n  }\n\n  contentsForInspection() {}\n\n  toJSONString() {\n    return JSON.stringify(this)\n  }\n\n  toUTF16String() {\n    return UTF16String.box(this)\n  }\n\n  getCacheKey() {\n    return this.id.toString()\n  }\n}\n", "/* eslint-disable\n    id-length,\n*/\nexport const arraysAreEqual = function(a = [], b = []) {\n  if (a.length !== b.length) {\n    return false\n  }\n  for (let index = 0; index < a.length; index++) {\n    const value = a[index]\n    if (value !== b[index]) {\n      return false\n    }\n  }\n  return true\n}\n\nexport const arrayStartsWith = (a = [], b = []) => arraysAreEqual(a.slice(0, b.length), b)\n\nexport const spliceArray = function(array, ...args) {\n  const result = array.slice(0)\n  result.splice(...args)\n  return result\n}\n\nexport const summarizeArrayChange = function(oldArray = [], newArray = []) {\n  const added = []\n  const removed = []\n\n  const existingValues = new Set()\n\n  oldArray.forEach((value) => {\n    existingValues.add(value)\n  })\n\n  const currentValues = new Set()\n\n  newArray.forEach((value) => {\n    currentValues.add(value)\n    if (!existingValues.has(value)) {\n      added.push(value)\n    }\n  })\n\n  oldArray.forEach((value) => {\n    if (!currentValues.has(value)) {\n      removed.push(value)\n    }\n  })\n\n  return { added, removed }\n}\n", "import { makeElement } from \"trix/core/helpers/dom\"\n\n// https://github.com/mathiasbynens/unicode-2.1.8/blob/master/Bidi_Class/Right_To_Left/regex.js\nconst RTL_PATTERN =\n  /[\\u05BE\\u05C0\\u05C3\\u05D0-\\u05EA\\u05F0-\\u05F4\\u061B\\u061F\\u0621-\\u063A\\u0640-\\u064A\\u066D\\u0671-\\u06B7\\u06BA-\\u06BE\\u06C0-\\u06CE\\u06D0-\\u06D5\\u06E5\\u06E6\\u200F\\u202B\\u202E\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE72\\uFE74\\uFE76-\\uFEFC]/\n\nexport const getDirection = (function() {\n  const input = makeElement(\"input\", { dir: \"auto\", name: \"x\", dirName: \"x.dir\" })\n  const textArea = makeElement(\"textarea\", { dir: \"auto\", name: \"y\", dirName: \"y.dir\" })\n  const form = makeElement(\"form\")\n  form.appendChild(input)\n  form.appendChild(textArea)\n\n  const supportsDirName = (function() {\n    try {\n      return new FormData(form).has(textArea.dirName)\n    } catch (error) {\n      return false\n    }\n  })()\n\n  const supportsDirSelector = (function() {\n    try {\n      return input.matches(\":dir(ltr),:dir(rtl)\")\n    } catch (error) {\n      return false\n    }\n  })()\n\n  if (supportsDirName) {\n    return function(string) {\n      textArea.value = string\n      return new FormData(form).get(textArea.dirName)\n    }\n  } else if (supportsDirSelector) {\n    return function(string) {\n      input.value = string\n      if (input.matches(\":dir(rtl)\")) {\n        return \"rtl\"\n      } else {\n        return \"ltr\"\n      }\n    }\n  } else {\n    return function(string) {\n      const char = string.trim().charAt(0)\n      if (RTL_PATTERN.test(char)) {\n        return \"rtl\"\n      } else {\n        return \"ltr\"\n      }\n    }\n  }\n})()\n", "import * as config from \"trix/config\"\n\nlet allAttributeNames = null\nlet blockAttributeNames = null\nlet textAttributeNames = null\nlet listAttributeNames = null\n\nexport const getAllAttributeNames = () => {\n  if (!allAttributeNames) {\n    allAttributeNames = getTextAttributeNames().concat(getBlockAttributeNames())\n  }\n  return allAttributeNames\n}\n\nexport const getBlockConfig = (attributeName) => config.blockAttributes[attributeName]\n\nexport const getBlockAttributeNames = () => {\n  if (!blockAttributeNames) {\n    blockAttributeNames = Object.keys(config.blockAttributes)\n  }\n  return blockAttributeNames\n}\n\nexport const getTextConfig = (attributeName) => config.textAttributes[attributeName]\n\nexport const getTextAttributeNames = () => {\n  if (!textAttributeNames) {\n    textAttributeNames = Object.keys(config.textAttributes)\n  }\n  return textAttributeNames\n}\n\nexport const getListAttributeNames = () => {\n  if (!listAttributeNames) {\n    listAttributeNames = []\n    for (const key in config.blockAttributes) {\n      const { listAttribute } = config.blockAttributes[key]\n      if (listAttribute != null) {\n        listAttributeNames.push(listAttribute)\n      }\n    }\n  }\n  return listAttributeNames\n}\n", "/* eslint-disable\n*/\nexport const installDefaultCSSForTagName = function(tagName, defaultCSS) {\n  const styleElement = insertStyleElementForTagName(tagName)\n  styleElement.textContent = defaultCSS.replace(/%t/g, tagName)\n}\n\nconst insertStyleElementForTagName = function(tagName) {\n  const element = document.createElement(\"style\")\n  element.setAttribute(\"type\", \"text/css\")\n  element.setAttribute(\"data-tag-name\", tagName.toLowerCase())\n  const nonce = getCSPNonce()\n  if (nonce) {\n    element.setAttribute(\"nonce\", nonce)\n  }\n  document.head.insertBefore(element, document.head.firstChild)\n  return element\n}\n\nconst getCSPNonce = function() {\n  const element = getMetaElement(\"trix-csp-nonce\") || getMetaElement(\"csp-nonce\")\n  if (element) {\n    return element.getAttribute(\"content\")\n  }\n}\n\nconst getMetaElement = (name) => document.head.querySelector(`meta[name=${name}]`)\n", "const testTransferData = { \"application/x-trix-feature-detection\": \"test\" }\n\nexport const dataTransferIsPlainText = function(dataTransfer) {\n  const text = dataTransfer.getData(\"text/plain\")\n  const html = dataTransfer.getData(\"text/html\")\n\n  if (text && html) {\n    const { body } = new DOMParser().parseFromString(html, \"text/html\")\n    if (body.textContent === text) {\n      return !body.querySelector(\"*\")\n    }\n  } else {\n    return text?.length\n  }\n}\n\nexport const dataTransferIsMsOfficePaste = ({ dataTransfer }) => {\n  return dataTransfer.types.includes(\"Files\") &&\n    dataTransfer.types.includes(\"text/html\") &&\n    dataTransfer.getData(\"text/html\").includes(\"urn:schemas-microsoft-com:office:office\")\n}\n\nexport const dataTransferIsWritable = function(dataTransfer) {\n  if (!dataTransfer?.setData) return false\n\n  for (const key in testTransferData) {\n    const value = testTransferData[key]\n\n    try {\n      dataTransfer.setData(key, value)\n      if (!dataTransfer.getData(key) === value) return false\n    } catch (error) {\n      return false\n    }\n  }\n  return true\n}\n\nexport const keyEventIsKeyboardCommand = (function() {\n  if (/Mac|^iP/.test(navigator.platform)) {\n    return (event) => event.metaKey\n  } else {\n    return (event) => event.ctrlKey\n  }\n})()\n", "export const defer = (fn) => setTimeout(fn, 1)\n", "/* eslint-disable\n    id-length,\n*/\nexport const copyObject = function(object = {}) {\n  const result = {}\n  for (const key in object) {\n    const value = object[key]\n    result[key] = value\n  }\n  return result\n}\n\nexport const objectsAreEqual = function(a = {}, b = {}) {\n  if (Object.keys(a).length !== Object.keys(b).length) {\n    return false\n  }\n  for (const key in a) {\n    const value = a[key]\n    if (value !== b[key]) {\n      return false\n    }\n  }\n  return true\n}\n", "import { copyObject, objectsAreEqual } from \"trix/core/helpers/objects\"\n\nexport const normalizeRange = function(range) {\n  if (range == null) return\n\n  if (!Array.isArray(range)) {\n    range = [ range, range ]\n  }\n  return [ copyValue(range[0]), copyValue(range[1] != null ? range[1] : range[0]) ]\n}\n\nexport const rangeIsCollapsed = function(range) {\n  if (range == null) return\n\n  const [ start, end ] = normalizeRange(range)\n  return rangeValuesAreEqual(start, end)\n}\n\nexport const rangesAreEqual = function(leftRange, rightRange) {\n  if (leftRange == null || rightRange == null) return\n\n  const [ leftStart, leftEnd ] = normalizeRange(leftRange)\n  const [ rightStart, rightEnd ] = normalizeRange(rightRange)\n  return rangeValuesAreEqual(leftStart, rightStart) && rangeValuesAreEqual(leftEnd, rightEnd)\n}\n\nconst copyValue = function(value) {\n  if (typeof value === \"number\") {\n    return value\n  } else {\n    return copyObject(value)\n  }\n}\n\nconst rangeValuesAreEqual = function(left, right) {\n  if (typeof left === \"number\") {\n    return left === right\n  } else {\n    return objectsAreEqual(left, right)\n  }\n}\n", "import BasicObject from \"trix/core/basic_object\"\n\nexport default class SelectionChangeObserver extends BasicObject {\n  constructor() {\n    super(...arguments)\n    this.update = this.update.bind(this)\n    this.selectionManagers = []\n  }\n\n  start() {\n    if (!this.started) {\n      this.started = true\n      document.addEventListener(\"selectionchange\", this.update, true)\n    }\n  }\n\n  stop() {\n    if (this.started) {\n      this.started = false\n      return document.removeEventListener(\"selectionchange\", this.update, true)\n    }\n  }\n\n  registerSelectionManager(selectionManager) {\n    if (!this.selectionManagers.includes(selectionManager)) {\n      this.selectionManagers.push(selectionManager)\n      return this.start()\n    }\n  }\n\n  unregisterSelectionManager(selectionManager) {\n    this.selectionManagers = this.selectionManagers.filter((sm) => sm !== selectionManager)\n    if (this.selectionManagers.length === 0) {\n      return this.stop()\n    }\n  }\n\n  notifySelectionManagersOfSelectionChange() {\n    return this.selectionManagers.map((selectionManager) => selectionManager.selectionDidChange())\n  }\n\n  update() {\n    this.notifySelectionManagersOfSelectionChange()\n  }\n\n  reset() {\n    this.update()\n  }\n}\n\nexport const selectionChangeObserver = new SelectionChangeObserver()\n\nexport const getDOMSelection = function() {\n  const selection = window.getSelection()\n  if (selection.rangeCount > 0) {\n    return selection\n  }\n}\n\nexport const getDOMRange = function() {\n  const domRange = getDOMSelection()?.getRangeAt(0)\n  if (domRange) {\n    if (!domRangeIsPrivate(domRange)) {\n      return domRange\n    }\n  }\n}\n\nexport const setDOMRange = function(domRange) {\n  const selection = window.getSelection()\n  selection.removeAllRanges()\n  selection.addRange(domRange)\n  return selectionChangeObserver.update()\n}\n\n// In Firefox, clicking certain <input> elements changes the selection to a\n// private element used to draw its UI. Attempting to access properties of those\n// elements throws an error.\n// https://bugzilla.mozilla.org/show_bug.cgi?id=208427\nconst domRangeIsPrivate = (domRange) => nodeIsPrivate(domRange.startContainer) || nodeIsPrivate(domRange.endContainer)\n\nconst nodeIsPrivate = (node) => !Object.getPrototypeOf(node)\n", "/* eslint-disable\n    id-length,\n    no-useless-escape,\n*/\nimport { NON_BREAKING_SPACE, ZERO_WIDTH_SPACE } from \"trix/constants\"\nimport UTF16String from \"trix/core/utilities/utf16_string\"\n\nexport const normalizeSpaces = (string) =>\n  string.replace(new RegExp(`${ZERO_WIDTH_SPACE}`, \"g\"), \"\").replace(new RegExp(`${NON_BREAKING_SPACE}`, \"g\"), \" \")\n\nexport const normalizeNewlines = (string) => string.replace(/\\r\\n?/g, \"\\n\")\n\nexport const breakableWhitespacePattern = new RegExp(`[^\\\\S${NON_BREAKING_SPACE}]`)\n\nexport const squishBreakableWhitespace = (string) =>\n  string\n    // Replace all breakable whitespace characters with a space\n    .replace(new RegExp(`${breakableWhitespacePattern.source}`, \"g\"), \" \")\n    // Replace two or more spaces with a single space\n    .replace(/\\ {2,}/g, \" \")\n\nexport const summarizeStringChange = function(oldString, newString) {\n  let added, removed\n  oldString = UTF16String.box(oldString)\n  newString = UTF16String.box(newString)\n\n  if (newString.length < oldString.length) {\n    [ removed, added ] = utf16StringDifferences(oldString, newString)\n  } else {\n    [ added, removed ] = utf16StringDifferences(newString, oldString)\n  }\n\n  return { added, removed }\n}\n\nconst utf16StringDifferences = function(a, b) {\n  if (a.isEqualTo(b)) {\n    return [ \"\", \"\" ]\n  }\n\n  const diffA = utf16StringDifference(a, b)\n  const { length } = diffA.utf16String\n\n  let diffB\n\n  if (length) {\n    const { offset } = diffA\n    const codepoints = a.codepoints.slice(0, offset).concat(a.codepoints.slice(offset + length))\n    diffB = utf16StringDifference(b, UTF16String.fromCodepoints(codepoints))\n  } else {\n    diffB = utf16StringDifference(b, a)\n  }\n\n  return [ diffA.utf16String.toString(), diffB.utf16String.toString() ]\n}\n\nconst utf16StringDifference = function(a, b) {\n  let leftIndex = 0\n  let rightIndexA = a.length\n  let rightIndexB = b.length\n\n  while (leftIndex < rightIndexA && a.charAt(leftIndex).isEqualTo(b.charAt(leftIndex))) {\n    leftIndex++\n  }\n\n  while (rightIndexA > leftIndex + 1 && a.charAt(rightIndexA - 1).isEqualTo(b.charAt(rightIndexB - 1))) {\n    rightIndexA--\n    rightIndexB--\n  }\n\n  return {\n    utf16String: a.slice(leftIndex, rightIndexA),\n    offset: leftIndex,\n  }\n}\n", "import TrixObject from \"trix/core/object\" // Don't override window.Object\nimport { arraysAreEqual } from \"trix/core/helpers\"\n\nexport default class Hash extends TrixObject {\n  static fromCommonAttributesOfObjects(objects = []) {\n    if (!objects.length) {\n      return new this()\n    }\n    let hash = box(objects[0])\n    let keys = hash.getKeys()\n\n    objects.slice(1).forEach((object) => {\n      keys = hash.getKeysCommonToHash(box(object))\n      hash = hash.slice(keys)\n    })\n\n    return hash\n  }\n\n  static box(values) {\n    return box(values)\n  }\n\n  constructor(values = {}) {\n    super(...arguments)\n    this.values = copy(values)\n  }\n\n  add(key, value) {\n    return this.merge(object(key, value))\n  }\n\n  remove(key) {\n    return new Hash(copy(this.values, key))\n  }\n\n  get(key) {\n    return this.values[key]\n  }\n\n  has(key) {\n    return key in this.values\n  }\n\n  merge(values) {\n    return new Hash(merge(this.values, unbox(values)))\n  }\n\n  slice(keys) {\n    const values = {}\n\n    Array.from(keys).forEach((key) => {\n      if (this.has(key)) {\n        values[key] = this.values[key]\n      }\n    })\n\n    return new Hash(values)\n  }\n\n  getKeys() {\n    return Object.keys(this.values)\n  }\n\n  getKeysCommonToHash(hash) {\n    hash = box(hash)\n    return this.getKeys().filter((key) => this.values[key] === hash.values[key])\n  }\n\n  isEqualTo(values) {\n    return arraysAreEqual(this.toArray(), box(values).toArray())\n  }\n\n  isEmpty() {\n    return this.getKeys().length === 0\n  }\n\n  toArray() {\n    if (!this.array) {\n      const result = []\n      for (const key in this.values) {\n        const value = this.values[key]\n        result.push(result.push(key, value))\n      }\n      this.array = result.slice(0)\n    }\n\n    return this.array\n  }\n\n  toObject() {\n    return copy(this.values)\n  }\n\n  toJSON() {\n    return this.toObject()\n  }\n\n  contentsForInspection() {\n    return { values: JSON.stringify(this.values) }\n  }\n}\n\nconst object = function(key, value) {\n  const result = {}\n  result[key] = value\n  return result\n}\n\nconst merge = function(object, values) {\n  const result = copy(object)\n  for (const key in values) {\n    const value = values[key]\n    result[key] = value\n  }\n  return result\n}\n\nconst copy = function(object, keyToRemove) {\n  const result = {}\n  const sortedKeys = Object.keys(object).sort()\n\n  sortedKeys.forEach((key) => {\n    if (key !== keyToRemove) {\n      result[key] = object[key]\n    }\n  })\n\n  return result\n}\n\nconst box = function(object) {\n  if (object instanceof Hash) {\n    return object\n  } else {\n    return new Hash(object)\n  }\n}\n\nconst unbox = function(object) {\n  if (object instanceof Hash) {\n    return object.values\n  } else {\n    return object\n  }\n}\n", "export default class ObjectGroup {\n  static groupObjects(ungroupedObjects = [], { depth, asTree } = {}) {\n    let group\n    if (asTree) {\n      if (depth == null) {\n        depth = 0\n      }\n    }\n    const objects = []\n\n    Array.from(ungroupedObjects).forEach((object) => {\n      if (group) {\n        if (object.canBeGrouped?.(depth) && group[group.length - 1].canBeGroupedWith?.(object, depth)) {\n          group.push(object)\n          return\n        } else {\n          objects.push(new this(group, { depth, asTree }))\n          group = null\n        }\n      }\n\n      if (object.canBeGrouped?.(depth)) {\n        group = [ object ]\n      } else {\n        objects.push(object)\n      }\n    })\n\n    if (group) {\n      objects.push(new this(group, { depth, asTree }))\n    }\n    return objects\n  }\n\n  constructor(objects = [], { depth, asTree }) {\n    this.objects = objects\n    if (asTree) {\n      this.depth = depth\n      this.objects = this.constructor.groupObjects(this.objects, { asTree, depth: this.depth + 1 })\n    }\n  }\n\n  getObjects() {\n    return this.objects\n  }\n\n  getDepth() {\n    return this.depth\n  }\n\n  getCacheKey() {\n    const keys = [ \"objectGroup\" ]\n    Array.from(this.getObjects()).forEach((object) => {\n      keys.push(object.getCacheKey())\n    })\n    return keys.join(\"/\")\n  }\n}\n", "import BasicObject from \"trix/core/basic_object\"\n\nexport default class ObjectMap extends BasicObject {\n  constructor(objects = []) {\n    super(...arguments)\n    this.objects = {}\n\n    Array.from(objects).forEach((object) => {\n      const hash = JSON.stringify(object)\n      if (this.objects[hash] == null) {\n        this.objects[hash] = object\n      }\n    })\n  }\n\n  find(object) {\n    const hash = JSON.stringify(object)\n    return this.objects[hash]\n  }\n}\n", "export default class ElementStore {\n  constructor(elements) {\n    this.reset(elements)\n  }\n\n  add(element) {\n    const key = getKey(element)\n    this.elements[key] = element\n  }\n\n  remove(element) {\n    const key = getKey(element)\n    const value = this.elements[key]\n    if (value) {\n      delete this.elements[key]\n      return value\n    }\n  }\n\n  reset(elements = []) {\n    this.elements = {}\n    Array.from(elements).forEach((element) => {\n      this.add(element)\n    })\n    return elements\n  }\n}\n\nconst getKey = (element) => element.dataset.trixStoreKey\n", "import BasicObject from \"trix/core/basic_object\"\n\nexport default class Operation extends BasicObject {\n  isPerforming() {\n    return this.performing === true\n  }\n\n  hasPerformed() {\n    return this.performed === true\n  }\n\n  hasSucceeded() {\n    return this.performed && this.succeeded\n  }\n\n  hasFailed() {\n    return this.performed && !this.succeeded\n  }\n\n  getPromise() {\n    if (!this.promise) {\n      this.promise = new Promise((resolve, reject) => {\n        this.performing = true\n        return this.perform((succeeded, result) => {\n          this.succeeded = succeeded\n          this.performing = false\n          this.performed = true\n\n          if (this.succeeded) {\n            resolve(result)\n          } else {\n            reject(result)\n          }\n        })\n      })\n    }\n\n    return this.promise\n  }\n\n  perform(callback) {\n    return callback(false)\n  }\n\n  release() {\n    this.promise?.cancel?.()\n    this.promise = null\n    this.performing = null\n    this.performed = null\n    this.succeeded = null\n  }\n}\n\nOperation.proxyMethod(\"getPromise().then\")\nOperation.proxyMethod(\"getPromise().catch\")\n", "import BasicObject from \"trix/core/basic_object\"\nimport ObjectGroup from \"trix/core/collections/object_group\"\n\nexport default class ObjectView extends BasicObject {\n  constructor(object, options = {}) {\n    super(...arguments)\n    this.object = object\n    this.options = options\n    this.childViews = []\n    this.rootView = this\n  }\n\n  getNodes() {\n    if (!this.nodes) { this.nodes = this.createNodes() }\n    return this.nodes.map((node) => node.cloneNode(true))\n  }\n\n  invalidate() {\n    this.nodes = null\n    this.childViews = []\n    return this.parentView?.invalidate()\n  }\n\n  invalidateViewForObject(object) {\n    return this.findViewForObject(object)?.invalidate()\n  }\n\n  findOrCreateCachedChildView(viewClass, object, options) {\n    let view = this.getCachedViewForObject(object)\n    if (view) {\n      this.recordChildView(view)\n    } else {\n      view = this.createChildView(...arguments)\n      this.cacheViewForObject(view, object)\n    }\n    return view\n  }\n\n  createChildView(viewClass, object, options = {}) {\n    if (object instanceof ObjectGroup) {\n      options.viewClass = viewClass\n      viewClass = ObjectGroupView\n    }\n\n    const view = new viewClass(object, options)\n    return this.recordChildView(view)\n  }\n\n  recordChildView(view) {\n    view.parentView = this\n    view.rootView = this.rootView\n    this.childViews.push(view)\n    return view\n  }\n\n  getAllChildViews() {\n    let views = []\n\n    this.childViews.forEach((childView) => {\n      views.push(childView)\n      views = views.concat(childView.getAllChildViews())\n    })\n\n    return views\n  }\n\n  findElement() {\n    return this.findElementForObject(this.object)\n  }\n\n  findElementForObject(object) {\n    const id = object?.id\n    if (id) {\n      return this.rootView.element.querySelector(`[data-trix-id='${id}']`)\n    }\n  }\n\n  findViewForObject(object) {\n    for (const view of this.getAllChildViews()) {\n      if (view.object === object) {\n        return view\n      }\n    }\n  }\n\n  getViewCache() {\n    if (this.rootView === this) {\n      if (this.isViewCachingEnabled()) {\n        if (!this.viewCache) { this.viewCache = {} }\n        return this.viewCache\n      }\n    } else {\n      return this.rootView.getViewCache()\n    }\n  }\n\n  isViewCachingEnabled() {\n    return this.shouldCacheViews !== false\n  }\n\n  enableViewCaching() {\n    this.shouldCacheViews = true\n  }\n\n  disableViewCaching() {\n    this.shouldCacheViews = false\n  }\n\n  getCachedViewForObject(object) {\n    return this.getViewCache()?.[object.getCacheKey()]\n  }\n\n  cacheViewForObject(view, object) {\n    const cache = this.getViewCache()\n    if (cache) {\n      cache[object.getCacheKey()] = view\n    }\n  }\n\n  garbageCollectCachedViews() {\n    const cache = this.getViewCache()\n    if (cache) {\n      const views = this.getAllChildViews().concat(this)\n      const objectKeys = views.map((view) => view.object.getCacheKey())\n      for (const key in cache) {\n        if (!objectKeys.includes(key)) {\n          delete cache[key]\n        }\n      }\n    }\n  }\n}\n\nexport class ObjectGroupView extends ObjectView {\n  constructor() {\n    super(...arguments)\n    this.objectGroup = this.object\n    this.viewClass = this.options.viewClass\n    delete this.options.viewClass\n  }\n\n  getChildViews() {\n    if (!this.childViews.length) {\n      Array.from(this.objectGroup.getObjects()).forEach((object) => {\n        this.findOrCreateCachedChildView(this.viewClass, object, this.options)\n      })\n    }\n    return this.childViews\n  }\n\n  createNodes() {\n    const element = this.createContainerElement()\n\n    this.getChildViews().forEach((view) => {\n      Array.from(view.getNodes()).forEach((node) => {\n        element.appendChild(node)\n      })\n    })\n\n    return [ element ]\n  }\n\n  createContainerElement(depth = this.objectGroup.getDepth()) {\n    return this.getChildViews()[0].createContainerElement(depth)\n  }\n}\n", "import BasicObject from \"trix/core/basic_object\"\n\nimport { nodeIsAttachmentElement, removeNode, tagName, walkTree } from \"trix/core/helpers\"\n\nconst DEFAULT_ALLOWED_ATTRIBUTES = \"style href src width height language class\".split(\" \")\nconst DEFAULT_FORBIDDEN_PROTOCOLS = \"javascript:\".split(\" \")\nconst DEFAULT_FORBIDDEN_ELEMENTS = \"script iframe form noscript\".split(\" \")\n\nexport default class HTMLSanitizer extends BasicObject {\n  static setHTML(element, html) {\n    const sanitizedElement = new this(html).sanitize()\n    const sanitizedHtml = sanitizedElement.getHTML ? sanitizedElement.getHTML() : sanitizedElement.outerHTML\n    element.innerHTML = sanitizedHtml\n  }\n\n  static sanitize(html, options) {\n    const sanitizer = new this(html, options)\n    sanitizer.sanitize()\n    return sanitizer\n  }\n\n  constructor(html, { allowedAttributes, forbiddenProtocols, forbiddenElements } = {}) {\n    super(...arguments)\n    this.allowedAttributes = allowedAttributes || DEFAULT_ALLOWED_ATTRIBUTES\n    this.forbiddenProtocols = forbiddenProtocols || DEFAULT_FORBIDDEN_PROTOCOLS\n    this.forbiddenElements = forbiddenElements || DEFAULT_FORBIDDEN_ELEMENTS\n    this.body = createBodyElementForHTML(html)\n  }\n\n  sanitize() {\n    this.sanitizeElements()\n    return this.normalizeListElementNesting()\n  }\n\n  getHTML() {\n    return this.body.innerHTML\n  }\n\n  getBody() {\n    return this.body\n  }\n\n  // Private\n\n  sanitizeElements() {\n    const walker = walkTree(this.body)\n    const nodesToRemove = []\n\n    while (walker.nextNode()) {\n      const node = walker.currentNode\n      switch (node.nodeType) {\n        case Node.ELEMENT_NODE:\n          if (this.elementIsRemovable(node)) {\n            nodesToRemove.push(node)\n          } else {\n            this.sanitizeElement(node)\n          }\n          break\n        case Node.COMMENT_NODE:\n          nodesToRemove.push(node)\n          break\n      }\n    }\n\n    nodesToRemove.forEach((node) => removeNode(node))\n\n    return this.body\n  }\n\n  sanitizeElement(element) {\n    if (element.hasAttribute(\"href\")) {\n      if (this.forbiddenProtocols.includes(element.protocol)) {\n        element.removeAttribute(\"href\")\n      }\n    }\n\n    Array.from(element.attributes).forEach(({ name }) => {\n      if (!this.allowedAttributes.includes(name) && name.indexOf(\"data-trix\") !== 0) {\n        element.removeAttribute(name)\n      }\n    })\n\n    return element\n  }\n\n  normalizeListElementNesting() {\n    Array.from(this.body.querySelectorAll(\"ul,ol\")).forEach((listElement) => {\n      const previousElement = listElement.previousElementSibling\n      if (previousElement) {\n        if (tagName(previousElement) === \"li\") {\n          previousElement.appendChild(listElement)\n        }\n      }\n    })\n\n    return this.body\n  }\n\n  elementIsRemovable(element) {\n    if (element?.nodeType !== Node.ELEMENT_NODE) return\n    return this.elementIsForbidden(element) || this.elementIsntSerializable(element)\n  }\n\n  elementIsForbidden(element) {\n    return this.forbiddenElements.includes(tagName(element))\n  }\n\n  elementIsntSerializable(element) {\n    return element.getAttribute(\"data-trix-serialize\") === \"false\" && !nodeIsAttachmentElement(element)\n  }\n}\n\nconst createBodyElementForHTML = function(html = \"\") {\n  // Remove everything after </html>\n  html = html.replace(/<\\/html[^>]*>[^]*$/i, \"</html>\")\n  const doc = document.implementation.createHTMLDocument(\"\")\n  doc.documentElement.innerHTML = html\n\n  Array.from(doc.head.querySelectorAll(\"style\")).forEach((element) => {\n    doc.body.appendChild(element)\n  })\n\n  return doc.body\n}\n", "import * as config from \"trix/config\"\nimport { ZERO_WIDTH_SPACE } from \"trix/constants\"\nimport { copyObject, makeElement } from \"trix/core/helpers\"\nimport ObjectView from \"trix/views/object_view\"\nimport HTMLSanitizer from \"trix/models/html_sanitizer\"\n\nconst { css } = config\n\nexport default class AttachmentView extends ObjectView {\n  constructor() {\n    super(...arguments)\n    this.attachment = this.object\n    this.attachment.uploadProgressDelegate = this\n    this.attachmentPiece = this.options.piece\n  }\n\n  createContentNodes() {\n    return []\n  }\n\n  createNodes() {\n    let innerElement\n    const figure = innerElement = makeElement({\n      tagName: \"figure\",\n      className: this.getClassName(),\n      data: this.getData(),\n      editable: false,\n    })\n\n    const href = this.getHref()\n    if (href) {\n      innerElement = makeElement({ tagName: \"a\", editable: false, attributes: { href, tabindex: -1 } })\n      figure.appendChild(innerElement)\n    }\n\n    if (this.attachment.hasContent()) {\n      HTMLSanitizer.setHTML(innerElement, this.attachment.getContent())\n    } else {\n      this.createContentNodes().forEach((node) => {\n        innerElement.appendChild(node)\n      })\n    }\n\n    innerElement.appendChild(this.createCaptionElement())\n\n    if (this.attachment.isPending()) {\n      this.progressElement = makeElement({\n        tagName: \"progress\",\n        attributes: {\n          class: css.attachmentProgress,\n          value: this.attachment.getUploadProgress(),\n          max: 100,\n        },\n        data: {\n          trixMutable: true,\n          trixStoreKey: [ \"progressElement\", this.attachment.id ].join(\"/\"),\n        },\n      })\n\n      figure.appendChild(this.progressElement)\n    }\n\n    return [ createCursorTarget(\"left\"), figure, createCursorTarget(\"right\") ]\n  }\n\n  createCaptionElement() {\n    const figcaption = makeElement({ tagName: \"figcaption\", className: css.attachmentCaption })\n    const caption = this.attachmentPiece.getCaption()\n    if (caption) {\n      figcaption.classList.add(`${css.attachmentCaption}--edited`)\n      figcaption.textContent = caption\n    } else {\n      let name, size\n      const captionConfig = this.getCaptionConfig()\n      if (captionConfig.name) {\n        name = this.attachment.getFilename()\n      }\n      if (captionConfig.size) {\n        size = this.attachment.getFormattedFilesize()\n      }\n\n      if (name) {\n        const nameElement = makeElement({ tagName: \"span\", className: css.attachmentName, textContent: name })\n        figcaption.appendChild(nameElement)\n      }\n\n      if (size) {\n        if (name) {\n          figcaption.appendChild(document.createTextNode(\" \"))\n        }\n        const sizeElement = makeElement({ tagName: \"span\", className: css.attachmentSize, textContent: size })\n        figcaption.appendChild(sizeElement)\n      }\n    }\n\n    return figcaption\n  }\n\n  getClassName() {\n    const names = [ css.attachment, `${css.attachment}--${this.attachment.getType()}` ]\n    const extension = this.attachment.getExtension()\n    if (extension) {\n      names.push(`${css.attachment}--${extension}`)\n    }\n    return names.join(\" \")\n  }\n\n  getData() {\n    const data = {\n      trixAttachment: JSON.stringify(this.attachment),\n      trixContentType: this.attachment.getContentType(),\n      trixId: this.attachment.id,\n    }\n\n    const { attributes } = this.attachmentPiece\n    if (!attributes.isEmpty()) {\n      data.trixAttributes = JSON.stringify(attributes)\n    }\n\n    if (this.attachment.isPending()) {\n      data.trixSerialize = false\n    }\n\n    return data\n  }\n\n  getHref() {\n    if (!htmlContainsTagName(this.attachment.getContent(), \"a\")) {\n      return this.attachment.getHref()\n    }\n  }\n\n  getCaptionConfig() {\n    const type = this.attachment.getType()\n    const captionConfig = copyObject(config.attachments[type]?.caption)\n    if (type === \"file\") {\n      captionConfig.name = true\n    }\n    return captionConfig\n  }\n\n  findProgressElement() {\n    return this.findElement()?.querySelector(\"progress\")\n  }\n\n  // Attachment delegate\n\n  attachmentDidChangeUploadProgress() {\n    const value = this.attachment.getUploadProgress()\n    const progressElement = this.findProgressElement()\n    if (progressElement) {\n      progressElement.value = value\n    }\n  }\n}\n\nconst createCursorTarget = (name) =>\n  makeElement({\n    tagName: \"span\",\n    textContent: ZERO_WIDTH_SPACE,\n    data: {\n      trixCursorTarget: name,\n      trixSerialize: false,\n    },\n  })\n\nconst htmlContainsTagName = function(html, tagName) {\n  const div = makeElement(\"div\")\n  HTMLSanitizer.setHTML(div, html || \"\")\n  return div.querySelector(tagName)\n}\n", "import * as config from \"trix/config\"\nimport { makeElement } from \"trix/core/helpers\"\n\nimport AttachmentView from \"trix/views/attachment_view\"\n\nexport default class PreviewableAttachmentView extends AttachmentView {\n  constructor() {\n    super(...arguments)\n    this.attachment.previewDelegate = this\n  }\n\n  createContentNodes() {\n    this.image = makeElement({\n      tagName: \"img\",\n      attributes: {\n        src: \"\",\n      },\n      data: {\n        trixMutable: true,\n      },\n    })\n\n    this.refresh(this.image)\n    return [ this.image ]\n  }\n\n  createCaptionElement() {\n    const figcaption = super.createCaptionElement(...arguments)\n    if (!figcaption.textContent) {\n      figcaption.setAttribute(\"data-trix-placeholder\", config.lang.captionPlaceholder)\n    }\n    return figcaption\n  }\n\n  refresh(image) {\n    if (!image) { image = this.findElement()?.querySelector(\"img\") }\n    if (image) {\n      return this.updateAttributesForImage(image)\n    }\n  }\n\n  updateAttributesForImage(image) {\n    const url = this.attachment.getURL()\n    const previewURL = this.attachment.getPreviewURL()\n    image.src = previewURL || url\n\n    if (previewURL === url) {\n      image.removeAttribute(\"data-trix-serialized-attributes\")\n    } else {\n      const serializedAttributes = JSON.stringify({ src: url })\n      image.setAttribute(\"data-trix-serialized-attributes\", serializedAttributes)\n    }\n\n    const width = this.attachment.getWidth()\n    const height = this.attachment.getHeight()\n\n    if (width != null) {\n      image.width = width\n    }\n    if (height != null) {\n      image.height = height\n    }\n\n    const storeKey = [ \"imageElement\", this.attachment.id, image.src, image.width, image.height ].join(\"/\")\n    image.dataset.trixStoreKey = storeKey\n  }\n\n  // Attachment delegate\n\n  attachmentDidChangeAttributes() {\n    this.refresh(this.image)\n    return this.refresh()\n  }\n}\n", "/* eslint-disable\n    no-useless-escape,\n    no-var,\n*/\nimport { NON_BREAKING_SPACE } from \"trix/constants\"\n\nimport ObjectView from \"trix/views/object_view\"\nimport AttachmentView from \"trix/views/attachment_view\"\nimport PreviewableAttachmentView from \"trix/views/previewable_attachment_view\"\n\nimport { findInnerElement, getTextConfig, makeElement } from \"trix/core/helpers\"\n\nexport default class PieceView extends ObjectView {\n  constructor() {\n    super(...arguments)\n    this.piece = this.object\n    this.attributes = this.piece.getAttributes()\n    this.textConfig = this.options.textConfig\n    this.context = this.options.context\n\n    if (this.piece.attachment) {\n      this.attachment = this.piece.attachment\n    } else {\n      this.string = this.piece.toString()\n    }\n  }\n\n  createNodes() {\n    let nodes = this.attachment ? this.createAttachmentNodes() : this.createStringNodes()\n    const element = this.createElement()\n    if (element) {\n      const innerElement = findInnerElement(element)\n      Array.from(nodes).forEach((node) => {\n        innerElement.appendChild(node)\n      })\n      nodes = [ element ]\n    }\n    return nodes\n  }\n\n  createAttachmentNodes() {\n    const constructor = this.attachment.isPreviewable() ? PreviewableAttachmentView : AttachmentView\n\n    const view = this.createChildView(constructor, this.piece.attachment, { piece: this.piece })\n    return view.getNodes()\n  }\n\n  createStringNodes() {\n    if (this.textConfig?.plaintext) {\n      return [ document.createTextNode(this.string) ]\n    } else {\n      const nodes = []\n      const iterable = this.string.split(\"\\n\")\n      for (let index = 0; index < iterable.length; index++) {\n        const substring = iterable[index]\n        if (index > 0) {\n          const element = makeElement(\"br\")\n          nodes.push(element)\n        }\n\n        if (substring.length) {\n          const node = document.createTextNode(this.preserveSpaces(substring))\n          nodes.push(node)\n        }\n      }\n      return nodes\n    }\n  }\n\n  createElement() {\n    let element, key, value\n    const styles = {}\n\n    for (key in this.attributes) {\n      value = this.attributes[key]\n      const config = getTextConfig(key)\n      if (config) {\n        if (config.tagName) {\n          var innerElement\n          const pendingElement = makeElement(config.tagName)\n\n          if (innerElement) {\n            innerElement.appendChild(pendingElement)\n            innerElement = pendingElement\n          } else {\n            element = innerElement = pendingElement\n          }\n        }\n\n        if (config.styleProperty) {\n          styles[config.styleProperty] = value\n        }\n\n        if (config.style) {\n          for (key in config.style) {\n            value = config.style[key]\n            styles[key] = value\n          }\n        }\n      }\n    }\n\n    if (Object.keys(styles).length) {\n      if (!element) { element = makeElement(\"span\") }\n      for (key in styles) {\n        value = styles[key]\n        element.style[key] = value\n      }\n    }\n    return element\n  }\n\n  createContainerElement() {\n    for (const key in this.attributes) {\n      const value = this.attributes[key]\n      const config = getTextConfig(key)\n      if (config) {\n        if (config.groupTagName) {\n          const attributes = {}\n          attributes[key] = value\n          return makeElement(config.groupTagName, attributes)\n        }\n      }\n    }\n  }\n\n  preserveSpaces(string) {\n    if (this.context.isLast) {\n      string = string.replace(/\\ $/, NON_BREAKING_SPACE)\n    }\n\n    string = string\n      .replace(/(\\S)\\ {3}(\\S)/g, `$1 ${NON_BREAKING_SPACE} $2`)\n      .replace(/\\ {2}/g, `${NON_BREAKING_SPACE} `)\n      .replace(/\\ {2}/g, ` ${NON_BREAKING_SPACE}`)\n\n    if (this.context.isFirst || this.context.followsWhitespace) {\n      string = string.replace(/^\\ /, NON_BREAKING_SPACE)\n    }\n\n    return string\n  }\n}\n", "/* eslint-disable\n    no-var,\n*/\nimport ObjectView from \"trix/views/object_view\"\nimport ObjectGroup from \"trix/core/collections/object_group\"\nimport PieceView from \"trix/views/piece_view\"\n\nexport default class TextView extends ObjectView {\n  constructor() {\n    super(...arguments)\n    this.text = this.object\n    this.textConfig = this.options.textConfig\n  }\n\n  createNodes() {\n    const nodes = []\n    const pieces = ObjectGroup.groupObjects(this.getPieces())\n    const lastIndex = pieces.length - 1\n\n    for (let index = 0; index < pieces.length; index++) {\n      const piece = pieces[index]\n      const context = {}\n      if (index === 0) {\n        context.isFirst = true\n      }\n      if (index === lastIndex) {\n        context.isLast = true\n      }\n      if (endsWithWhitespace(previousPiece)) {\n        context.followsWhitespace = true\n      }\n\n      const view = this.findOrCreateCachedChildView(PieceView, piece, { textConfig: this.textConfig, context })\n      nodes.push(...Array.from(view.getNodes() || []))\n\n      var previousPiece = piece\n    }\n    return nodes\n  }\n\n  getPieces() {\n    return Array.from(this.text.getPieces()).filter((piece) => !piece.hasAttribute(\"blockBreak\"))\n  }\n}\n\nconst endsWithWhitespace = (piece) => /\\s$/.test(piece?.toString())\n", "import * as config from \"trix/config\"\nimport ObjectView from \"trix/views/object_view\"\nimport TextView from \"trix/views/text_view\"\n\nimport { getBlockConfig, makeElement } from \"trix/core/helpers\"\nconst { css } = config\n\nexport default class BlockView extends ObjectView {\n  constructor() {\n    super(...arguments)\n    this.block = this.object\n    this.attributes = this.block.getAttributes()\n  }\n\n  createNodes() {\n    const comment = document.createComment(\"block\")\n    const nodes = [ comment ]\n    if (this.block.isEmpty()) {\n      nodes.push(makeElement(\"br\"))\n    } else {\n      const textConfig = getBlockConfig(this.block.getLastAttribute())?.text\n      const textView = this.findOrCreateCachedChildView(TextView, this.block.text, { textConfig })\n      nodes.push(...Array.from(textView.getNodes() || []))\n      if (this.shouldAddExtraNewlineElement()) {\n        nodes.push(makeElement(\"br\"))\n      }\n    }\n\n    if (this.attributes.length) {\n      return nodes\n    } else {\n      let attributes\n      const { tagName } = config.blockAttributes.default\n      if (this.block.isRTL()) {\n        attributes = { dir: \"rtl\" }\n      }\n\n      const element = makeElement({ tagName, attributes })\n      nodes.forEach((node) => element.appendChild(node))\n      return [ element ]\n    }\n  }\n\n  createContainerElement(depth) {\n    const attributes = {}\n    let className\n    const attributeName = this.attributes[depth]\n\n    const { tagName, htmlAttributes = [] } = getBlockConfig(attributeName)\n\n    if (depth === 0 && this.block.isRTL()) {\n      Object.assign(attributes, { dir: \"rtl\" })\n    }\n\n    if (attributeName === \"attachmentGallery\") {\n      const size = this.block.getBlockBreakPosition()\n      className = `${css.attachmentGallery} ${css.attachmentGallery}--${size}`\n    }\n\n    Object.entries(this.block.htmlAttributes).forEach(([ name, value ]) => {\n      if (htmlAttributes.includes(name)) {\n        attributes[name] = value\n      }\n    })\n\n    return makeElement({ tagName, className, attributes })\n  }\n\n  // A single <br> at the end of a block element has no visual representation\n  // so add an extra one.\n  shouldAddExtraNewlineElement() {\n    return /\\n\\n$/.test(this.block.toString())\n  }\n}\n", "import { makeElement } from \"trix/core/helpers\"\n\nimport ElementStore from \"trix/core/collections/element_store\"\nimport ObjectGroup from \"trix/core/collections/object_group\"\nimport ObjectView from \"trix/views/object_view\"\nimport BlockView from \"trix/views/block_view\"\n\nimport { defer } from \"trix/core/helpers\"\n\nexport default class DocumentView extends ObjectView {\n  static render(document) {\n    const element = makeElement(\"div\")\n    const view = new this(document, { element })\n    view.render()\n    view.sync()\n    return element\n  }\n\n  constructor() {\n    super(...arguments)\n    this.element = this.options.element\n    this.elementStore = new ElementStore()\n    this.setDocument(this.object)\n  }\n\n  setDocument(document) {\n    if (!document.isEqualTo(this.document)) {\n      this.document = this.object = document\n    }\n  }\n\n  render() {\n    this.childViews = []\n\n    this.shadowElement = makeElement(\"div\")\n\n    if (!this.document.isEmpty()) {\n      const objects = ObjectGroup.groupObjects(this.document.getBlocks(), { asTree: true })\n\n      Array.from(objects).forEach((object) => {\n        const view = this.findOrCreateCachedChildView(BlockView, object)\n        Array.from(view.getNodes()).map((node) => this.shadowElement.appendChild(node))\n      })\n    }\n  }\n\n  isSynced() {\n    return elementsHaveEqualHTML(this.shadowElement, this.element)\n  }\n\n  sync() {\n    const fragment = this.createDocumentFragmentForSync()\n    while (this.element.lastChild) {\n      this.element.removeChild(this.element.lastChild)\n    }\n    this.element.appendChild(fragment)\n    return this.didSync()\n  }\n\n  // Private\n\n  didSync() {\n    this.elementStore.reset(findStoredElements(this.element))\n    return defer(() => this.garbageCollectCachedViews())\n  }\n\n  createDocumentFragmentForSync() {\n    const fragment = document.createDocumentFragment()\n\n    Array.from(this.shadowElement.childNodes).forEach((node) => {\n      fragment.appendChild(node.cloneNode(true))\n    })\n\n    Array.from(findStoredElements(fragment)).forEach((element) => {\n      const storedElement = this.elementStore.remove(element)\n      if (storedElement) {\n        element.parentNode.replaceChild(storedElement, element)\n      }\n    })\n\n    return fragment\n  }\n}\n\nconst findStoredElements = (element) => element.querySelectorAll(\"[data-trix-store-key]\")\n\nconst elementsHaveEqualHTML = (element, otherElement) =>\n  ignoreSpaces(element.innerHTML) === ignoreSpaces(otherElement.innerHTML)\n\nconst ignoreSpaces = (html) => html.replace(/&nbsp;/g, \" \")\n", "import TrixObject from \"trix/core/object\" // Don't override window.Object\nimport Hash from \"trix/core/collections/hash\"\n\nexport default class Piece extends TrixObject {\n  static types = {}\n\n  static registerType(type, constructor) {\n    constructor.type = type\n    this.types[type] = constructor\n  }\n\n  static fromJSON(pieceJSON) {\n    const constructor = this.types[pieceJSON.type]\n    if (constructor) {\n      return constructor.fromJSON(pieceJSON)\n    }\n  }\n\n  constructor(value, attributes = {}) {\n    super(...arguments)\n    this.attributes = Hash.box(attributes)\n  }\n\n  copyWithAttributes(attributes) {\n    return new this.constructor(this.getValue(), attributes)\n  }\n\n  copyWithAdditionalAttributes(attributes) {\n    return this.copyWithAttributes(this.attributes.merge(attributes))\n  }\n\n  copyWithoutAttribute(attribute) {\n    return this.copyWithAttributes(this.attributes.remove(attribute))\n  }\n\n  copy() {\n    return this.copyWithAttributes(this.attributes)\n  }\n\n  getAttribute(attribute) {\n    return this.attributes.get(attribute)\n  }\n\n  getAttributesHash() {\n    return this.attributes\n  }\n\n  getAttributes() {\n    return this.attributes.toObject()\n  }\n\n  hasAttribute(attribute) {\n    return this.attributes.has(attribute)\n  }\n\n  hasSameStringValueAsPiece(piece) {\n    return piece && this.toString() === piece.toString()\n  }\n\n  hasSameAttributesAsPiece(piece) {\n    return piece && (this.attributes === piece.attributes || this.attributes.isEqualTo(piece.attributes))\n  }\n\n  isBlockBreak() {\n    return false\n  }\n\n  isEqualTo(piece) {\n    return (\n      super.isEqualTo(...arguments) ||\n      this.hasSameConstructorAs(piece) &&\n        this.hasSameStringValueAsPiece(piece) &&\n        this.hasSameAttributesAsPiece(piece)\n    )\n  }\n\n  isEmpty() {\n    return this.length === 0\n  }\n\n  isSerializable() {\n    return true\n  }\n\n  toJSON() {\n    return {\n      type: this.constructor.type,\n      attributes: this.getAttributes(),\n    }\n  }\n\n  contentsForInspection() {\n    return {\n      type: this.constructor.type,\n      attributes: this.attributes.inspect(),\n    }\n  }\n\n  // Grouping\n\n  canBeGrouped() {\n    return this.hasAttribute(\"href\")\n  }\n\n  canBeGroupedWith(piece) {\n    return this.getAttribute(\"href\") === piece.getAttribute(\"href\")\n  }\n\n  // Splittable\n\n  getLength() {\n    return this.length\n  }\n\n  canBeConsolidatedWith(piece) {\n    return false\n  }\n}\n", "import Operation from \"trix/core/utilities/operation\"\n\nexport default class ImagePreloadOperation extends Operation {\n  constructor(url) {\n    super(...arguments)\n    this.url = url\n  }\n\n  perform(callback) {\n    const image = new Image()\n\n    image.onload = () => {\n      image.width = this.width = image.naturalWidth\n      image.height = this.height = image.naturalHeight\n      return callback(true, image)\n    }\n\n    image.onerror = () => callback(false)\n\n    image.src = this.url\n  }\n}\n", "import * as config from \"trix/config\"\nimport TrixObject from \"trix/core/object\" // Don't override window.Object\nimport Hash from \"trix/core/collections/hash\"\nimport ImagePreloadOperation from \"trix/operations/image_preload_operation\"\n\nexport default class Attachment extends TrixObject {\n  static previewablePattern = /^image(\\/(gif|png|webp|jpe?g)|$)/\n\n  static attachmentForFile(file) {\n    const attributes = this.attributesForFile(file)\n    const attachment = new this(attributes)\n    attachment.setFile(file)\n    return attachment\n  }\n\n  static attributesForFile(file) {\n    return new Hash({\n      filename: file.name,\n      filesize: file.size,\n      contentType: file.type,\n    })\n  }\n\n  static fromJSON(attachmentJSON) {\n    return new this(attachmentJSON)\n  }\n\n  constructor(attributes = {}) {\n    super(attributes)\n    this.releaseFile = this.releaseFile.bind(this)\n    this.attributes = Hash.box(attributes)\n    this.didChangeAttributes()\n  }\n\n  getAttribute(attribute) {\n    return this.attributes.get(attribute)\n  }\n\n  hasAttribute(attribute) {\n    return this.attributes.has(attribute)\n  }\n\n  getAttributes() {\n    return this.attributes.toObject()\n  }\n\n  setAttributes(attributes = {}) {\n    const newAttributes = this.attributes.merge(attributes)\n    if (!this.attributes.isEqualTo(newAttributes)) {\n      this.attributes = newAttributes\n      this.didChangeAttributes()\n      this.previewDelegate?.attachmentDidChangeAttributes?.(this)\n      return this.delegate?.attachmentDidChangeAttributes?.(this)\n    }\n  }\n\n  didChangeAttributes() {\n    if (this.isPreviewable()) {\n      return this.preloadURL()\n    }\n  }\n\n  isPending() {\n    return this.file != null && !(this.getURL() || this.getHref())\n  }\n\n  isPreviewable() {\n    if (this.attributes.has(\"previewable\")) {\n      return this.attributes.get(\"previewable\")\n    } else {\n      return Attachment.previewablePattern.test(this.getContentType())\n    }\n  }\n\n  getType() {\n    if (this.hasContent()) {\n      return \"content\"\n    } else if (this.isPreviewable()) {\n      return \"preview\"\n    } else {\n      return \"file\"\n    }\n  }\n\n  getURL() {\n    return this.attributes.get(\"url\")\n  }\n\n  getHref() {\n    return this.attributes.get(\"href\")\n  }\n\n  getFilename() {\n    return this.attributes.get(\"filename\") || \"\"\n  }\n\n  getFilesize() {\n    return this.attributes.get(\"filesize\")\n  }\n\n  getFormattedFilesize() {\n    const filesize = this.attributes.get(\"filesize\")\n    if (typeof filesize === \"number\") {\n      return config.fileSize.formatter(filesize)\n    } else {\n      return \"\"\n    }\n  }\n\n  getExtension() {\n    return this.getFilename()\n      .match(/\\.(\\w+)$/)?.[1]\n      .toLowerCase()\n  }\n\n  getContentType() {\n    return this.attributes.get(\"contentType\")\n  }\n\n  hasContent() {\n    return this.attributes.has(\"content\")\n  }\n\n  getContent() {\n    return this.attributes.get(\"content\")\n  }\n\n  getWidth() {\n    return this.attributes.get(\"width\")\n  }\n\n  getHeight() {\n    return this.attributes.get(\"height\")\n  }\n\n  getFile() {\n    return this.file\n  }\n\n  setFile(file) {\n    this.file = file\n    if (this.isPreviewable()) {\n      return this.preloadFile()\n    }\n  }\n\n  releaseFile() {\n    this.releasePreloadedFile()\n    this.file = null\n  }\n\n  getUploadProgress() {\n    return this.uploadProgress != null ? this.uploadProgress : 0\n  }\n\n  setUploadProgress(value) {\n    if (this.uploadProgress !== value) {\n      this.uploadProgress = value\n      return this.uploadProgressDelegate?.attachmentDidChangeUploadProgress?.(this)\n    }\n  }\n\n  toJSON() {\n    return this.getAttributes()\n  }\n\n  getCacheKey() {\n    return [ super.getCacheKey(...arguments), this.attributes.getCacheKey(), this.getPreviewURL() ].join(\"/\")\n  }\n\n  // Previewable\n\n  getPreviewURL() {\n    return this.previewURL || this.preloadingURL\n  }\n\n  setPreviewURL(url) {\n    if (url !== this.getPreviewURL()) {\n      this.previewURL = url\n      this.previewDelegate?.attachmentDidChangeAttributes?.(this)\n      return this.delegate?.attachmentDidChangePreviewURL?.(this)\n    }\n  }\n\n  preloadURL() {\n    return this.preload(this.getURL(), this.releaseFile)\n  }\n\n  preloadFile() {\n    if (this.file) {\n      this.fileObjectURL = URL.createObjectURL(this.file)\n      return this.preload(this.fileObjectURL)\n    }\n  }\n\n  releasePreloadedFile() {\n    if (this.fileObjectURL) {\n      URL.revokeObjectURL(this.fileObjectURL)\n      this.fileObjectURL = null\n    }\n  }\n\n  preload(url, callback) {\n    if (url && url !== this.getPreviewURL()) {\n      this.preloadingURL = url\n      const operation = new ImagePreloadOperation(url)\n      return operation\n        .then(({ width, height }) => {\n          if (!this.getWidth() || !this.getHeight()) {\n            this.setAttributes({ width, height })\n          }\n          this.preloadingURL = null\n          this.setPreviewURL(url)\n          return callback?.()\n        })\n        .catch(() => {\n          this.preloadingURL = null\n          return callback?.()\n        })\n    }\n  }\n}\n", "import { OBJECT_REPLACEMENT_CHARACTER } from \"trix/constants\"\n\nimport Attachment from \"trix/models/attachment\"\nimport Piece from \"trix/models/piece\"\n\nexport default class AttachmentPiece extends Piece {\n  static permittedAttributes = [ \"caption\", \"presentation\" ]\n\n  static fromJSON(pieceJSON) {\n    return new this(Attachment.fromJSON(pieceJSON.attachment), pieceJSON.attributes)\n  }\n\n  constructor(attachment) {\n    super(...arguments)\n    this.attachment = attachment\n    this.length = 1\n    this.ensureAttachmentExclusivelyHasAttribute(\"href\")\n    if (!this.attachment.hasContent()) {\n      this.removeProhibitedAttributes()\n    }\n  }\n\n  ensureAttachmentExclusivelyHasAttribute(attribute) {\n    if (this.hasAttribute(attribute)) {\n      if (!this.attachment.hasAttribute(attribute)) {\n        this.attachment.setAttributes(this.attributes.slice([ attribute ]))\n      }\n      this.attributes = this.attributes.remove(attribute)\n    }\n  }\n\n  removeProhibitedAttributes() {\n    const attributes = this.attributes.slice(AttachmentPiece.permittedAttributes)\n    if (!attributes.isEqualTo(this.attributes)) {\n      this.attributes = attributes\n    }\n  }\n\n  getValue() {\n    return this.attachment\n  }\n\n  isSerializable() {\n    return !this.attachment.isPending()\n  }\n\n  getCaption() {\n    return this.attributes.get(\"caption\") || \"\"\n  }\n\n  isEqualTo(piece) {\n    return super.isEqualTo(piece) && this.attachment.id === piece?.attachment?.id\n  }\n\n  toString() {\n    return OBJECT_REPLACEMENT_CHARACTER\n  }\n\n  toJSON() {\n    const json = super.toJSON(...arguments)\n    json.attachment = this.attachment\n    return json\n  }\n\n  getCacheKey() {\n    return [ super.getCacheKey(...arguments), this.attachment.getCacheKey() ].join(\"/\")\n  }\n\n  toConsole() {\n    return JSON.stringify(this.toString())\n  }\n}\n\nPiece.registerType(\"attachment\", AttachmentPiece)\n", "import Piece from \"trix/models/piece\"\n\nimport { normalizeNewlines } from \"trix/core/helpers\"\n\nexport default class StringPiece extends Piece {\n  static fromJSON(pieceJSON) {\n    return new this(pieceJSON.string, pieceJSON.attributes)\n  }\n\n  constructor(string) {\n    super(...arguments)\n    this.string = normalizeNewlines(string)\n    this.length = this.string.length\n  }\n\n  getValue() {\n    return this.string\n  }\n\n  toString() {\n    return this.string.toString()\n  }\n\n  isBlockBreak() {\n    return this.toString() === \"\\n\" && this.getAttribute(\"blockBreak\") === true\n  }\n\n  toJSON() {\n    const result = super.toJSON(...arguments)\n    result.string = this.string\n    return result\n  }\n\n  // Splittable\n\n  canBeConsolidatedWith(piece) {\n    return piece && this.hasSameConstructorAs(piece) && this.hasSameAttributesAsPiece(piece)\n  }\n\n  consolidateWith(piece) {\n    return new this.constructor(this.toString() + piece.toString(), this.attributes)\n  }\n\n  splitAtOffset(offset) {\n    let left, right\n    if (offset === 0) {\n      left = null\n      right = this\n    } else if (offset === this.length) {\n      left = this\n      right = null\n    } else {\n      left = new this.constructor(this.string.slice(0, offset), this.attributes)\n      right = new this.constructor(this.string.slice(offset), this.attributes)\n    }\n    return [ left, right ]\n  }\n\n  toConsole() {\n    let { string } = this\n    if (string.length > 15) {\n      string = string.slice(0, 14) + \"…\"\n    }\n    return JSON.stringify(string.toString())\n  }\n}\n\nPiece.registerType(\"string\", StringPiece)\n", "/* eslint-disable\n    prefer-const,\n*/\nimport TrixObject from \"trix/core/object\" // Don't override window.Object\n\nimport { spliceArray } from \"trix/core/helpers\"\n\nexport default class SplittableList extends TrixObject {\n  static box(objects) {\n    if (objects instanceof this) {\n      return objects\n    } else {\n      return new this(objects)\n    }\n  }\n\n  constructor(objects = []) {\n    super(...arguments)\n    this.objects = objects.slice(0)\n    this.length = this.objects.length\n  }\n\n  indexOf(object) {\n    return this.objects.indexOf(object)\n  }\n\n  splice(...args) {\n    return new this.constructor(spliceArray(this.objects, ...args))\n  }\n\n  eachObject(callback) {\n    return this.objects.map((object, index) => callback(object, index))\n  }\n\n  insertObjectAtIndex(object, index) {\n    return this.splice(index, 0, object)\n  }\n\n  insertSplittableListAtIndex(splittableList, index) {\n    return this.splice(index, 0, ...splittableList.objects)\n  }\n\n  insertSplittableListAtPosition(splittableList, position) {\n    const [ objects, index ] = this.splitObjectAtPosition(position)\n    return new this.constructor(objects).insertSplittableListAtIndex(splittableList, index)\n  }\n\n  editObjectAtIndex(index, callback) {\n    return this.replaceObjectAtIndex(callback(this.objects[index]), index)\n  }\n\n  replaceObjectAtIndex(object, index) {\n    return this.splice(index, 1, object)\n  }\n\n  removeObjectAtIndex(index) {\n    return this.splice(index, 1)\n  }\n\n  getObjectAtIndex(index) {\n    return this.objects[index]\n  }\n\n  getSplittableListInRange(range) {\n    const [ objects, leftIndex, rightIndex ] = this.splitObjectsAtRange(range)\n    return new this.constructor(objects.slice(leftIndex, rightIndex + 1))\n  }\n\n  selectSplittableList(test) {\n    const objects = this.objects.filter((object) => test(object))\n    return new this.constructor(objects)\n  }\n\n  removeObjectsInRange(range) {\n    const [ objects, leftIndex, rightIndex ] = this.splitObjectsAtRange(range)\n    return new this.constructor(objects).splice(leftIndex, rightIndex - leftIndex + 1)\n  }\n\n  transformObjectsInRange(range, transform) {\n    const [ objects, leftIndex, rightIndex ] = this.splitObjectsAtRange(range)\n    const transformedObjects = objects.map((object, index) =>\n      leftIndex <= index && index <= rightIndex ? transform(object) : object\n    )\n    return new this.constructor(transformedObjects)\n  }\n\n  splitObjectsAtRange(range) {\n    let rightOuterIndex\n    let [ objects, leftInnerIndex, offset ] = this.splitObjectAtPosition(startOfRange(range))\n    ;[ objects, rightOuterIndex ] = new this.constructor(objects).splitObjectAtPosition(endOfRange(range) + offset)\n\n    return [ objects, leftInnerIndex, rightOuterIndex - 1 ]\n  }\n\n  getObjectAtPosition(position) {\n    const { index } = this.findIndexAndOffsetAtPosition(position)\n    return this.objects[index]\n  }\n\n  splitObjectAtPosition(position) {\n    let splitIndex, splitOffset\n    const { index, offset } = this.findIndexAndOffsetAtPosition(position)\n    const objects = this.objects.slice(0)\n    if (index != null) {\n      if (offset === 0) {\n        splitIndex = index\n        splitOffset = 0\n      } else {\n        const object = this.getObjectAtIndex(index)\n        const [ leftObject, rightObject ] = object.splitAtOffset(offset)\n        objects.splice(index, 1, leftObject, rightObject)\n        splitIndex = index + 1\n        splitOffset = leftObject.getLength() - offset\n      }\n    } else {\n      splitIndex = objects.length\n      splitOffset = 0\n    }\n\n    return [ objects, splitIndex, splitOffset ]\n  }\n\n  consolidate() {\n    const objects = []\n    let pendingObject = this.objects[0]\n\n    this.objects.slice(1).forEach((object) => {\n      if (pendingObject.canBeConsolidatedWith?.(object)) {\n        pendingObject = pendingObject.consolidateWith(object)\n      } else {\n        objects.push(pendingObject)\n        pendingObject = object\n      }\n    })\n\n    if (pendingObject) {\n      objects.push(pendingObject)\n    }\n\n    return new this.constructor(objects)\n  }\n\n  consolidateFromIndexToIndex(startIndex, endIndex) {\n    const objects = this.objects.slice(0)\n    const objectsInRange = objects.slice(startIndex, endIndex + 1)\n    const consolidatedInRange = new this.constructor(objectsInRange).consolidate().toArray()\n    return this.splice(startIndex, objectsInRange.length, ...consolidatedInRange)\n  }\n\n  findIndexAndOffsetAtPosition(position) {\n    let index\n    let currentPosition = 0\n    for (index = 0; index < this.objects.length; index++) {\n      const object = this.objects[index]\n      const nextPosition = currentPosition + object.getLength()\n      if (currentPosition <= position && position < nextPosition) {\n        return { index, offset: position - currentPosition }\n      }\n      currentPosition = nextPosition\n    }\n    return { index: null, offset: null }\n  }\n\n  findPositionAtIndexAndOffset(index, offset) {\n    let position = 0\n    for (let currentIndex = 0; currentIndex < this.objects.length; currentIndex++) {\n      const object = this.objects[currentIndex]\n      if (currentIndex < index) {\n        position += object.getLength()\n      } else if (currentIndex === index) {\n        position += offset\n        break\n      }\n    }\n    return position\n  }\n\n  getEndPosition() {\n    if (this.endPosition == null) {\n      this.endPosition = 0\n      this.objects.forEach((object) => this.endPosition += object.getLength())\n    }\n\n    return this.endPosition\n  }\n\n  toString() {\n    return this.objects.join(\"\")\n  }\n\n  toArray() {\n    return this.objects.slice(0)\n  }\n\n  toJSON() {\n    return this.toArray()\n  }\n\n  isEqualTo(splittableList) {\n    return super.isEqualTo(...arguments) || objectArraysAreEqual(this.objects, splittableList?.objects)\n  }\n\n  contentsForInspection() {\n    return {\n      objects: `[${this.objects.map((object) => object.inspect()).join(\", \")}]`,\n    }\n  }\n}\n\nconst objectArraysAreEqual = function(left, right = []) {\n  if (left.length !== right.length) {\n    return false\n  }\n  let result = true\n  for (let index = 0; index < left.length; index++) {\n    const object = left[index]\n    if (result && !object.isEqualTo(right[index])) {\n      result = false\n    }\n  }\n  return result\n}\n\nconst startOfRange = (range) => range[0]\n\nconst endOfRange = (range) => range[1]\n", "import TrixObject from \"trix/core/object\" // Don't override window.Object\n\nimport { getDirection } from \"trix/core/helpers\"\n\nimport Piece from \"trix/models/piece\"\nimport AttachmentPiece from \"trix/models/attachment_piece\"\nimport StringPiece from \"trix/models/string_piece\"\nimport SplittableList from \"trix/models/splittable_list\"\n\nimport Hash from \"trix/core/collections/hash\"\n\nexport default class Text extends TrixObject {\n  static textForAttachmentWithAttributes(attachment, attributes) {\n    const piece = new AttachmentPiece(attachment, attributes)\n    return new this([ piece ])\n  }\n\n  static textForStringWithAttributes(string, attributes) {\n    const piece = new StringPiece(string, attributes)\n    return new this([ piece ])\n  }\n\n  static fromJSON(textJSON) {\n    const pieces = Array.from(textJSON).map((pieceJSON) => Piece.fromJSON(pieceJSON))\n    return new this(pieces)\n  }\n\n  constructor(pieces = []) {\n    super(...arguments)\n    const notEmpty = pieces.filter((piece) => !piece.isEmpty())\n    this.pieceList = new SplittableList(notEmpty)\n  }\n\n  copy() {\n    return this.copyWithPieceList(this.pieceList)\n  }\n\n  copyWithPieceList(pieceList) {\n    return new this.constructor(pieceList.consolidate().toArray())\n  }\n\n  copyUsingObjectMap(objectMap) {\n    const pieces = this.getPieces().map((piece) => objectMap.find(piece) || piece)\n    return new this.constructor(pieces)\n  }\n\n  appendText(text) {\n    return this.insertTextAtPosition(text, this.getLength())\n  }\n\n  insertTextAtPosition(text, position) {\n    return this.copyWithPieceList(this.pieceList.insertSplittableListAtPosition(text.pieceList, position))\n  }\n\n  removeTextAtRange(range) {\n    return this.copyWithPieceList(this.pieceList.removeObjectsInRange(range))\n  }\n\n  replaceTextAtRange(text, range) {\n    return this.removeTextAtRange(range).insertTextAtPosition(text, range[0])\n  }\n\n  moveTextFromRangeToPosition(range, position) {\n    if (range[0] <= position && position <= range[1]) return\n    const text = this.getTextAtRange(range)\n    const length = text.getLength()\n    if (range[0] < position) {\n      position -= length\n    }\n    return this.removeTextAtRange(range).insertTextAtPosition(text, position)\n  }\n\n  addAttributeAtRange(attribute, value, range) {\n    const attributes = {}\n    attributes[attribute] = value\n    return this.addAttributesAtRange(attributes, range)\n  }\n\n  addAttributesAtRange(attributes, range) {\n    return this.copyWithPieceList(\n      this.pieceList.transformObjectsInRange(range, (piece) => piece.copyWithAdditionalAttributes(attributes))\n    )\n  }\n\n  removeAttributeAtRange(attribute, range) {\n    return this.copyWithPieceList(\n      this.pieceList.transformObjectsInRange(range, (piece) => piece.copyWithoutAttribute(attribute))\n    )\n  }\n\n  setAttributesAtRange(attributes, range) {\n    return this.copyWithPieceList(\n      this.pieceList.transformObjectsInRange(range, (piece) => piece.copyWithAttributes(attributes))\n    )\n  }\n\n  getAttributesAtPosition(position) {\n    return this.pieceList.getObjectAtPosition(position)?.getAttributes() || {}\n  }\n\n  getCommonAttributes() {\n    const objects = Array.from(this.pieceList.toArray()).map((piece) => piece.getAttributes())\n    return Hash.fromCommonAttributesOfObjects(objects).toObject()\n  }\n\n  getCommonAttributesAtRange(range) {\n    return this.getTextAtRange(range).getCommonAttributes() || {}\n  }\n\n  getExpandedRangeForAttributeAtOffset(attributeName, offset) {\n    let right\n    let left = right = offset\n    const length = this.getLength()\n\n    while (left > 0 && this.getCommonAttributesAtRange([ left - 1, right ])[attributeName]) {\n      left--\n    }\n    while (right < length && this.getCommonAttributesAtRange([ offset, right + 1 ])[attributeName]) {\n      right++\n    }\n\n    return [ left, right ]\n  }\n\n  getTextAtRange(range) {\n    return this.copyWithPieceList(this.pieceList.getSplittableListInRange(range))\n  }\n\n  getStringAtRange(range) {\n    return this.pieceList.getSplittableListInRange(range).toString()\n  }\n\n  getStringAtPosition(position) {\n    return this.getStringAtRange([ position, position + 1 ])\n  }\n\n  startsWithString(string) {\n    return this.getStringAtRange([ 0, string.length ]) === string\n  }\n\n  endsWithString(string) {\n    const length = this.getLength()\n    return this.getStringAtRange([ length - string.length, length ]) === string\n  }\n\n  getAttachmentPieces() {\n    return this.pieceList.toArray().filter((piece) => !!piece.attachment)\n  }\n\n  getAttachments() {\n    return this.getAttachmentPieces().map((piece) => piece.attachment)\n  }\n\n  getAttachmentAndPositionById(attachmentId) {\n    let position = 0\n    for (const piece of this.pieceList.toArray()) {\n      if (piece.attachment?.id === attachmentId) {\n        return { attachment: piece.attachment, position }\n      }\n      position += piece.length\n    }\n    return { attachment: null, position: null }\n  }\n\n  getAttachmentById(attachmentId) {\n    const { attachment } = this.getAttachmentAndPositionById(attachmentId)\n    return attachment\n  }\n\n  getRangeOfAttachment(attachment) {\n    const attachmentAndPosition = this.getAttachmentAndPositionById(attachment.id)\n    const position = attachmentAndPosition.position\n    attachment = attachmentAndPosition.attachment\n    if (attachment) {\n      return [ position, position + 1 ]\n    }\n  }\n\n  updateAttributesForAttachment(attributes, attachment) {\n    const range = this.getRangeOfAttachment(attachment)\n    if (range) {\n      return this.addAttributesAtRange(attributes, range)\n    } else {\n      return this\n    }\n  }\n\n  getLength() {\n    return this.pieceList.getEndPosition()\n  }\n\n  isEmpty() {\n    return this.getLength() === 0\n  }\n\n  isEqualTo(text) {\n    return super.isEqualTo(text) || text?.pieceList?.isEqualTo(this.pieceList)\n  }\n\n  isBlockBreak() {\n    return this.getLength() === 1 && this.pieceList.getObjectAtIndex(0).isBlockBreak()\n  }\n\n  eachPiece(callback) {\n    return this.pieceList.eachObject(callback)\n  }\n\n  getPieces() {\n    return this.pieceList.toArray()\n  }\n\n  getPieceAtPosition(position) {\n    return this.pieceList.getObjectAtPosition(position)\n  }\n\n  contentsForInspection() {\n    return { pieceList: this.pieceList.inspect() }\n  }\n\n  toSerializableText() {\n    const pieceList = this.pieceList.selectSplittableList((piece) => piece.isSerializable())\n    return this.copyWithPieceList(pieceList)\n  }\n\n  toString() {\n    return this.pieceList.toString()\n  }\n\n  toJSON() {\n    return this.pieceList.toJSON()\n  }\n\n  toConsole() {\n    return JSON.stringify(this.pieceList.toArray().map((piece) => JSON.parse(piece.toConsole())))\n  }\n\n  // BIDI\n\n  getDirection() {\n    return getDirection(this.toString())\n  }\n\n  isRTL() {\n    return this.getDirection() === \"rtl\"\n  }\n}\n", "import TrixObject from \"trix/core/object\" // Don't override window.Object\nimport Text from \"trix/models/text\"\n\nimport {\n  arraysAreEqual,\n  getBlockConfig,\n  getListAttributeNames,\n  objectsAreEqual,\n  spliceArray,\n} from \"trix/core/helpers\"\n\nexport default class Block extends TrixObject {\n  static fromJSON(blockJSON) {\n    const text = Text.fromJSON(blockJSON.text)\n    return new this(text, blockJSON.attributes, blockJSON.htmlAttributes)\n  }\n\n  constructor(text, attributes, htmlAttributes) {\n    super(...arguments)\n    this.text = applyBlockBreakToText(text || new Text())\n    this.attributes = attributes || []\n    this.htmlAttributes = htmlAttributes || {}\n  }\n\n  isEmpty() {\n    return this.text.isBlockBreak()\n  }\n\n  isEqualTo(block) {\n    if (super.isEqualTo(block)) return true\n\n    return this.text.isEqualTo(block?.text) && arraysAreEqual(this.attributes, block?.attributes) && objectsAreEqual(this.htmlAttributes, block?.htmlAttributes)\n  }\n\n  copyWithText(text) {\n    return new Block(text, this.attributes, this.htmlAttributes)\n  }\n\n  copyWithoutText() {\n    return this.copyWithText(null)\n  }\n\n  copyWithAttributes(attributes) {\n    return new Block(this.text, attributes, this.htmlAttributes)\n  }\n\n  copyWithoutAttributes() {\n    return this.copyWithAttributes(null)\n  }\n\n  copyUsingObjectMap(objectMap) {\n    const mappedText = objectMap.find(this.text)\n    if (mappedText) {\n      return this.copyWithText(mappedText)\n    } else {\n      return this.copyWithText(this.text.copyUsingObjectMap(objectMap))\n    }\n  }\n\n  addAttribute(attribute) {\n    const attributes = this.attributes.concat(expandAttribute(attribute))\n    return this.copyWithAttributes(attributes)\n  }\n\n  addHTMLAttribute(attribute, value) {\n    const htmlAttributes = Object.assign({}, this.htmlAttributes, { [attribute]: value })\n    return new Block(this.text, this.attributes, htmlAttributes)\n  }\n\n  removeAttribute(attribute) {\n    const { listAttribute } = getBlockConfig(attribute)\n    const attributes = removeLastValue(removeLastValue(this.attributes, attribute), listAttribute)\n    return this.copyWithAttributes(attributes)\n  }\n\n  removeLastAttribute() {\n    return this.removeAttribute(this.getLastAttribute())\n  }\n\n  getLastAttribute() {\n    return getLastElement(this.attributes)\n  }\n\n  getAttributes() {\n    return this.attributes.slice(0)\n  }\n\n  getAttributeLevel() {\n    return this.attributes.length\n  }\n\n  getAttributeAtLevel(level) {\n    return this.attributes[level - 1]\n  }\n\n  hasAttribute(attributeName) {\n    return this.attributes.includes(attributeName)\n  }\n\n  hasAttributes() {\n    return this.getAttributeLevel() > 0\n  }\n\n  getLastNestableAttribute() {\n    return getLastElement(this.getNestableAttributes())\n  }\n\n  getNestableAttributes() {\n    return this.attributes.filter((attribute) => getBlockConfig(attribute).nestable)\n  }\n\n  getNestingLevel() {\n    return this.getNestableAttributes().length\n  }\n\n  decreaseNestingLevel() {\n    const attribute = this.getLastNestableAttribute()\n    if (attribute) {\n      return this.removeAttribute(attribute)\n    } else {\n      return this\n    }\n  }\n\n  increaseNestingLevel() {\n    const attribute = this.getLastNestableAttribute()\n    if (attribute) {\n      const index = this.attributes.lastIndexOf(attribute)\n      const attributes = spliceArray(this.attributes, index + 1, 0, ...expandAttribute(attribute))\n      return this.copyWithAttributes(attributes)\n    } else {\n      return this\n    }\n  }\n\n  getListItemAttributes() {\n    return this.attributes.filter((attribute) => getBlockConfig(attribute).listAttribute)\n  }\n\n  isListItem() {\n    return getBlockConfig(this.getLastAttribute())?.listAttribute\n  }\n\n  isTerminalBlock() {\n    return getBlockConfig(this.getLastAttribute())?.terminal\n  }\n\n  breaksOnReturn() {\n    return getBlockConfig(this.getLastAttribute())?.breakOnReturn\n  }\n\n  findLineBreakInDirectionFromPosition(direction, position) {\n    const string = this.toString()\n    let result\n    switch (direction) {\n      case \"forward\":\n        result = string.indexOf(\"\\n\", position)\n        break\n      case \"backward\":\n        result = string.slice(0, position).lastIndexOf(\"\\n\")\n    }\n\n    if (result !== -1) {\n      return result\n    }\n  }\n\n  contentsForInspection() {\n    return {\n      text: this.text.inspect(),\n      attributes: this.attributes,\n    }\n  }\n\n  toString() {\n    return this.text.toString()\n  }\n\n  toJSON() {\n    return {\n      text: this.text,\n      attributes: this.attributes,\n      htmlAttributes: this.htmlAttributes,\n    }\n  }\n\n  // BIDI\n\n  getDirection() {\n    return this.text.getDirection()\n  }\n\n  isRTL() {\n    return this.text.isRTL()\n  }\n\n  // Splittable\n\n  getLength() {\n    return this.text.getLength()\n  }\n\n  canBeConsolidatedWith(block) {\n    return !this.hasAttributes() && !block.hasAttributes() && this.getDirection() === block.getDirection()\n  }\n\n  consolidateWith(block) {\n    const newlineText = Text.textForStringWithAttributes(\"\\n\")\n    const text = this.getTextWithoutBlockBreak().appendText(newlineText)\n    return this.copyWithText(text.appendText(block.text))\n  }\n\n  splitAtOffset(offset) {\n    let left, right\n    if (offset === 0) {\n      left = null\n      right = this\n    } else if (offset === this.getLength()) {\n      left = this\n      right = null\n    } else {\n      left = this.copyWithText(this.text.getTextAtRange([ 0, offset ]))\n      right = this.copyWithText(this.text.getTextAtRange([ offset, this.getLength() ]))\n    }\n    return [ left, right ]\n  }\n\n  getBlockBreakPosition() {\n    return this.text.getLength() - 1\n  }\n\n  getTextWithoutBlockBreak() {\n    if (textEndsInBlockBreak(this.text)) {\n      return this.text.getTextAtRange([ 0, this.getBlockBreakPosition() ])\n    } else {\n      return this.text.copy()\n    }\n  }\n\n  // Grouping\n\n  canBeGrouped(depth) {\n    return this.attributes[depth]\n  }\n\n  canBeGroupedWith(otherBlock, depth) {\n    const otherAttributes = otherBlock.getAttributes()\n    const otherAttribute = otherAttributes[depth]\n    const attribute = this.attributes[depth]\n\n    return (\n      attribute === otherAttribute &&\n      !(getBlockConfig(attribute).group === false && !getListAttributeNames().includes(otherAttributes[depth + 1])) &&\n      (this.getDirection() === otherBlock.getDirection() || otherBlock.isEmpty())\n    )\n  }\n}\n\n// Block breaks\n\nconst applyBlockBreakToText = function(text) {\n  text = unmarkExistingInnerBlockBreaksInText(text)\n  text = addBlockBreakToText(text)\n  return text\n}\n\nconst unmarkExistingInnerBlockBreaksInText = function(text) {\n  let modified = false\n  const pieces = text.getPieces()\n\n  let innerPieces = pieces.slice(0, pieces.length - 1)\n  const lastPiece = pieces[pieces.length - 1]\n\n  if (!lastPiece) return text\n\n  innerPieces = innerPieces.map((piece) => {\n    if (piece.isBlockBreak()) {\n      modified = true\n      return unmarkBlockBreakPiece(piece)\n    } else {\n      return piece\n    }\n  })\n\n  if (modified) {\n    return new Text([ ...innerPieces, lastPiece ])\n  } else {\n    return text\n  }\n}\n\nconst blockBreakText = Text.textForStringWithAttributes(\"\\n\", { blockBreak: true })\n\nconst addBlockBreakToText = function(text) {\n  if (textEndsInBlockBreak(text)) {\n    return text\n  } else {\n    return text.appendText(blockBreakText)\n  }\n}\n\nconst textEndsInBlockBreak = function(text) {\n  const length = text.getLength()\n  if (length === 0) {\n    return false\n  }\n  const endText = text.getTextAtRange([ length - 1, length ])\n  return endText.isBlockBreak()\n}\n\nconst unmarkBlockBreakPiece = (piece) => piece.copyWithoutAttribute(\"blockBreak\")\n\n// Attributes\n\nconst expandAttribute = function(attribute) {\n  const { listAttribute } = getBlockConfig(attribute)\n  if (listAttribute) {\n    return [ listAttribute, attribute ]\n  } else {\n    return [ attribute ]\n  }\n}\n\n// Array helpers\n\nconst getLastElement = (array) => array.slice(-1)[0]\n\nconst removeLastValue = function(array, value) {\n  const index = array.lastIndexOf(value)\n  if (index === -1) {\n    return array\n  } else {\n    return spliceArray(array, index, 1)\n  }\n}\n", "import * as config from \"trix/config\"\nimport TrixObject from \"trix/core/object\" // Don't override window.Object\n\nimport Text from \"trix/models/text\"\nimport Block from \"trix/models/block\"\nimport SplittableList from \"trix/models/splittable_list\"\nimport Hash from \"trix/core/collections/hash\"\nimport ObjectMap from \"trix/core/collections/object_map\"\n\nimport { arraysAreEqual, getBlockConfig, normalizeRange, rangeIsCollapsed } from \"trix/core/helpers\"\n\nexport default class Document extends TrixObject {\n  static fromJSON(documentJSON) {\n    const blocks = Array.from(documentJSON).map((blockJSON) => Block.fromJSON(blockJSON))\n    return new this(blocks)\n  }\n\n  static fromString(string, textAttributes) {\n    const text = Text.textForStringWithAttributes(string, textAttributes)\n    return new this([ new Block(text) ])\n  }\n\n  constructor(blocks = []) {\n    super(...arguments)\n    if (blocks.length === 0) {\n      blocks = [ new Block() ]\n    }\n    this.blockList = SplittableList.box(blocks)\n  }\n\n  isEmpty() {\n    const block = this.getBlockAtIndex(0)\n    return this.blockList.length === 1 && block.isEmpty() && !block.hasAttributes()\n  }\n\n  copy(options = {}) {\n    const blocks = options.consolidateBlocks ? this.blockList.consolidate().toArray() : this.blockList.toArray()\n\n    return new this.constructor(blocks)\n  }\n\n  copyUsingObjectsFromDocument(sourceDocument) {\n    const objectMap = new ObjectMap(sourceDocument.getObjects())\n    return this.copyUsingObjectMap(objectMap)\n  }\n\n  copyUsingObjectMap(objectMap) {\n    const blocks = this.getBlocks().map((block) => {\n      const mappedBlock = objectMap.find(block)\n      return mappedBlock || block.copyUsingObjectMap(objectMap)\n    })\n    return new this.constructor(blocks)\n  }\n\n  copyWithBaseBlockAttributes(blockAttributes = []) {\n    const blocks = this.getBlocks().map((block) => {\n      const attributes = blockAttributes.concat(block.getAttributes())\n      return block.copyWithAttributes(attributes)\n    })\n\n    return new this.constructor(blocks)\n  }\n\n  replaceBlock(oldBlock, newBlock) {\n    const index = this.blockList.indexOf(oldBlock)\n    if (index === -1) {\n      return this\n    }\n    return new this.constructor(this.blockList.replaceObjectAtIndex(newBlock, index))\n  }\n\n  insertDocumentAtRange(document, range) {\n    const { blockList } = document\n    range = normalizeRange(range)\n    let [ position ] = range\n    const { index, offset } = this.locationFromPosition(position)\n\n    let result = this\n    const block = this.getBlockAtPosition(position)\n\n    if (rangeIsCollapsed(range) && block.isEmpty() && !block.hasAttributes()) {\n      result = new this.constructor(result.blockList.removeObjectAtIndex(index))\n    } else if (block.getBlockBreakPosition() === offset) {\n      position++\n    }\n\n    result = result.removeTextAtRange(range)\n    return new this.constructor(result.blockList.insertSplittableListAtPosition(blockList, position))\n  }\n\n  mergeDocumentAtRange(document, range) {\n    let formattedDocument, result\n    range = normalizeRange(range)\n    const [ startPosition ] = range\n    const startLocation = this.locationFromPosition(startPosition)\n    const blockAttributes = this.getBlockAtIndex(startLocation.index).getAttributes()\n    const baseBlockAttributes = document.getBaseBlockAttributes()\n    const trailingBlockAttributes = blockAttributes.slice(-baseBlockAttributes.length)\n\n    if (arraysAreEqual(baseBlockAttributes, trailingBlockAttributes)) {\n      const leadingBlockAttributes = blockAttributes.slice(0, -baseBlockAttributes.length)\n      formattedDocument = document.copyWithBaseBlockAttributes(leadingBlockAttributes)\n    } else {\n      formattedDocument = document.copy({ consolidateBlocks: true }).copyWithBaseBlockAttributes(blockAttributes)\n    }\n\n    const blockCount = formattedDocument.getBlockCount()\n    const firstBlock = formattedDocument.getBlockAtIndex(0)\n\n    if (arraysAreEqual(blockAttributes, firstBlock.getAttributes())) {\n      const firstText = firstBlock.getTextWithoutBlockBreak()\n      result = this.insertTextAtRange(firstText, range)\n\n      if (blockCount > 1) {\n        formattedDocument = new this.constructor(formattedDocument.getBlocks().slice(1))\n        const position = startPosition + firstText.getLength()\n        result = result.insertDocumentAtRange(formattedDocument, position)\n      }\n    } else {\n      result = this.insertDocumentAtRange(formattedDocument, range)\n    }\n\n    return result\n  }\n\n  insertTextAtRange(text, range) {\n    range = normalizeRange(range)\n    const [ startPosition ] = range\n    const { index, offset } = this.locationFromPosition(startPosition)\n\n    const document = this.removeTextAtRange(range)\n    return new this.constructor(\n      document.blockList.editObjectAtIndex(index, (block) =>\n        block.copyWithText(block.text.insertTextAtPosition(text, offset))\n      )\n    )\n  }\n\n  removeTextAtRange(range) {\n    let blocks\n    range = normalizeRange(range)\n    const [ leftPosition, rightPosition ] = range\n    if (rangeIsCollapsed(range)) {\n      return this\n    }\n    const [ leftLocation, rightLocation ] = Array.from(this.locationRangeFromRange(range))\n\n    const leftIndex = leftLocation.index\n    const leftOffset = leftLocation.offset\n    const leftBlock = this.getBlockAtIndex(leftIndex)\n\n    const rightIndex = rightLocation.index\n    const rightOffset = rightLocation.offset\n    const rightBlock = this.getBlockAtIndex(rightIndex)\n\n    const removeRightNewline =\n      rightPosition - leftPosition === 1 &&\n      leftBlock.getBlockBreakPosition() === leftOffset &&\n      rightBlock.getBlockBreakPosition() !== rightOffset &&\n      rightBlock.text.getStringAtPosition(rightOffset) === \"\\n\"\n\n    if (removeRightNewline) {\n      blocks = this.blockList.editObjectAtIndex(rightIndex, (block) =>\n        block.copyWithText(block.text.removeTextAtRange([ rightOffset, rightOffset + 1 ]))\n      )\n    } else {\n      let block\n      const leftText = leftBlock.text.getTextAtRange([ 0, leftOffset ])\n      const rightText = rightBlock.text.getTextAtRange([ rightOffset, rightBlock.getLength() ])\n      const text = leftText.appendText(rightText)\n\n      const removingLeftBlock = leftIndex !== rightIndex && leftOffset === 0\n      const useRightBlock = removingLeftBlock && leftBlock.getAttributeLevel() >= rightBlock.getAttributeLevel()\n\n      if (useRightBlock) {\n        block = rightBlock.copyWithText(text)\n      } else {\n        block = leftBlock.copyWithText(text)\n      }\n\n      const affectedBlockCount = rightIndex + 1 - leftIndex\n      blocks = this.blockList.splice(leftIndex, affectedBlockCount, block)\n    }\n\n    return new this.constructor(blocks)\n  }\n\n  moveTextFromRangeToPosition(range, position) {\n    let text\n    range = normalizeRange(range)\n    const [ startPosition, endPosition ] = range\n    if (startPosition <= position && position <= endPosition) {\n      return this\n    }\n\n    let document = this.getDocumentAtRange(range)\n    let result = this.removeTextAtRange(range)\n\n    const movingRightward = startPosition < position\n    if (movingRightward) {\n      position -= document.getLength()\n    }\n\n    const [ firstBlock, ...blocks ] = document.getBlocks()\n    if (blocks.length === 0) {\n      text = firstBlock.getTextWithoutBlockBreak()\n      if (movingRightward) {\n        position += 1\n      }\n    } else {\n      text = firstBlock.text\n    }\n\n    result = result.insertTextAtRange(text, position)\n    if (blocks.length === 0) {\n      return result\n    }\n\n    document = new this.constructor(blocks)\n    position += text.getLength()\n\n    return result.insertDocumentAtRange(document, position)\n  }\n\n  addAttributeAtRange(attribute, value, range) {\n    let { blockList } = this\n    this.eachBlockAtRange(\n      range,\n      (block, textRange, index) =>\n        blockList = blockList.editObjectAtIndex(index, function() {\n          if (getBlockConfig(attribute)) {\n            return block.addAttribute(attribute, value)\n          } else {\n            if (textRange[0] === textRange[1]) {\n              return block\n            } else {\n              return block.copyWithText(block.text.addAttributeAtRange(attribute, value, textRange))\n            }\n          }\n        })\n    )\n    return new this.constructor(blockList)\n  }\n\n  addAttribute(attribute, value) {\n    let { blockList } = this\n    this.eachBlock(\n      (block, index) => blockList = blockList.editObjectAtIndex(index, () => block.addAttribute(attribute, value))\n    )\n    return new this.constructor(blockList)\n  }\n\n  removeAttributeAtRange(attribute, range) {\n    let { blockList } = this\n    this.eachBlockAtRange(range, function(block, textRange, index) {\n      if (getBlockConfig(attribute)) {\n        blockList = blockList.editObjectAtIndex(index, () => block.removeAttribute(attribute))\n      } else if (textRange[0] !== textRange[1]) {\n        blockList = blockList.editObjectAtIndex(index, () =>\n          block.copyWithText(block.text.removeAttributeAtRange(attribute, textRange))\n        )\n      }\n    })\n    return new this.constructor(blockList)\n  }\n\n  updateAttributesForAttachment(attributes, attachment) {\n    const range = this.getRangeOfAttachment(attachment)\n    const [ startPosition ] = Array.from(range)\n    const { index } = this.locationFromPosition(startPosition)\n    const text = this.getTextAtIndex(index)\n\n    return new this.constructor(\n      this.blockList.editObjectAtIndex(index, (block) =>\n        block.copyWithText(text.updateAttributesForAttachment(attributes, attachment))\n      )\n    )\n  }\n\n  removeAttributeForAttachment(attribute, attachment) {\n    const range = this.getRangeOfAttachment(attachment)\n    return this.removeAttributeAtRange(attribute, range)\n  }\n\n  setHTMLAttributeAtPosition(position, name, value) {\n    const block = this.getBlockAtPosition(position)\n    const updatedBlock = block.addHTMLAttribute(name, value)\n    return this.replaceBlock(block, updatedBlock)\n  }\n\n  insertBlockBreakAtRange(range) {\n    let blocks\n    range = normalizeRange(range)\n    const [ startPosition ] = range\n    const { offset } = this.locationFromPosition(startPosition)\n\n    const document = this.removeTextAtRange(range)\n    if (offset === 0) {\n      blocks = [ new Block() ]\n    }\n    return new this.constructor(\n      document.blockList.insertSplittableListAtPosition(new SplittableList(blocks), startPosition)\n    )\n  }\n\n  applyBlockAttributeAtRange(attributeName, value, range) {\n    const expanded = this.expandRangeToLineBreaksAndSplitBlocks(range)\n    let document = expanded.document\n    range = expanded.range\n    const blockConfig = getBlockConfig(attributeName)\n\n    if (blockConfig.listAttribute) {\n      document = document.removeLastListAttributeAtRange(range, { exceptAttributeName: attributeName })\n      const converted = document.convertLineBreaksToBlockBreaksInRange(range)\n      document = converted.document\n      range = converted.range\n    } else if (blockConfig.exclusive) {\n      document = document.removeBlockAttributesAtRange(range)\n    } else if (blockConfig.terminal) {\n      document = document.removeLastTerminalAttributeAtRange(range)\n    } else {\n      document = document.consolidateBlocksAtRange(range)\n    }\n\n    return document.addAttributeAtRange(attributeName, value, range)\n  }\n\n  removeLastListAttributeAtRange(range, options = {}) {\n    let { blockList } = this\n    this.eachBlockAtRange(range, function(block, textRange, index) {\n      const lastAttributeName = block.getLastAttribute()\n      if (!lastAttributeName) {\n        return\n      }\n      if (!getBlockConfig(lastAttributeName).listAttribute) {\n        return\n      }\n      if (lastAttributeName === options.exceptAttributeName) {\n        return\n      }\n      blockList = blockList.editObjectAtIndex(index, () => block.removeAttribute(lastAttributeName))\n    })\n    return new this.constructor(blockList)\n  }\n\n  removeLastTerminalAttributeAtRange(range) {\n    let { blockList } = this\n    this.eachBlockAtRange(range, function(block, textRange, index) {\n      const lastAttributeName = block.getLastAttribute()\n      if (!lastAttributeName) {\n        return\n      }\n      if (!getBlockConfig(lastAttributeName).terminal) {\n        return\n      }\n      blockList = blockList.editObjectAtIndex(index, () => block.removeAttribute(lastAttributeName))\n    })\n    return new this.constructor(blockList)\n  }\n\n  removeBlockAttributesAtRange(range) {\n    let { blockList } = this\n    this.eachBlockAtRange(range, function(block, textRange, index) {\n      if (block.hasAttributes()) {\n        blockList = blockList.editObjectAtIndex(index, () => block.copyWithoutAttributes())\n      }\n    })\n    return new this.constructor(blockList)\n  }\n\n  expandRangeToLineBreaksAndSplitBlocks(range) {\n    let position\n    range = normalizeRange(range)\n    let [ startPosition, endPosition ] = range\n    const startLocation = this.locationFromPosition(startPosition)\n    const endLocation = this.locationFromPosition(endPosition)\n    let document = this\n\n    const startBlock = document.getBlockAtIndex(startLocation.index)\n    startLocation.offset = startBlock.findLineBreakInDirectionFromPosition(\"backward\", startLocation.offset)\n    if (startLocation.offset != null) {\n      position = document.positionFromLocation(startLocation)\n      document = document.insertBlockBreakAtRange([ position, position + 1 ])\n      endLocation.index += 1\n      endLocation.offset -= document.getBlockAtIndex(startLocation.index).getLength()\n      startLocation.index += 1\n    }\n    startLocation.offset = 0\n\n    if (endLocation.offset === 0 && endLocation.index > startLocation.index) {\n      endLocation.index -= 1\n      endLocation.offset = document.getBlockAtIndex(endLocation.index).getBlockBreakPosition()\n    } else {\n      const endBlock = document.getBlockAtIndex(endLocation.index)\n      if (endBlock.text.getStringAtRange([ endLocation.offset - 1, endLocation.offset ]) === \"\\n\") {\n        endLocation.offset -= 1\n      } else {\n        endLocation.offset = endBlock.findLineBreakInDirectionFromPosition(\"forward\", endLocation.offset)\n      }\n      if (endLocation.offset !== endBlock.getBlockBreakPosition()) {\n        position = document.positionFromLocation(endLocation)\n        document = document.insertBlockBreakAtRange([ position, position + 1 ])\n      }\n    }\n\n    startPosition = document.positionFromLocation(startLocation)\n    endPosition = document.positionFromLocation(endLocation)\n    range = normalizeRange([ startPosition, endPosition ])\n\n    return { document, range }\n  }\n\n  convertLineBreaksToBlockBreaksInRange(range) {\n    range = normalizeRange(range)\n    let [ position ] = range\n    const string = this.getStringAtRange(range).slice(0, -1)\n    let document = this\n\n    string.replace(/.*?\\n/g, function(match) {\n      position += match.length\n      document = document.insertBlockBreakAtRange([ position - 1, position ])\n    })\n\n    return { document, range }\n  }\n\n  consolidateBlocksAtRange(range) {\n    range = normalizeRange(range)\n    const [ startPosition, endPosition ] = range\n    const startIndex = this.locationFromPosition(startPosition).index\n    const endIndex = this.locationFromPosition(endPosition).index\n    return new this.constructor(this.blockList.consolidateFromIndexToIndex(startIndex, endIndex))\n  }\n\n  getDocumentAtRange(range) {\n    range = normalizeRange(range)\n    const blocks = this.blockList.getSplittableListInRange(range).toArray()\n    return new this.constructor(blocks)\n  }\n\n  getStringAtRange(range) {\n    let endIndex\n    const array = range = normalizeRange(range),\n      endPosition = array[array.length - 1]\n    if (endPosition !== this.getLength()) {\n      endIndex = -1\n    }\n    return this.getDocumentAtRange(range).toString().slice(0, endIndex)\n  }\n\n  getBlockAtIndex(index) {\n    return this.blockList.getObjectAtIndex(index)\n  }\n\n  getBlockAtPosition(position) {\n    const { index } = this.locationFromPosition(position)\n    return this.getBlockAtIndex(index)\n  }\n\n  getTextAtIndex(index) {\n    return this.getBlockAtIndex(index)?.text\n  }\n\n  getTextAtPosition(position) {\n    const { index } = this.locationFromPosition(position)\n    return this.getTextAtIndex(index)\n  }\n\n  getPieceAtPosition(position) {\n    const { index, offset } = this.locationFromPosition(position)\n    return this.getTextAtIndex(index).getPieceAtPosition(offset)\n  }\n\n  getCharacterAtPosition(position) {\n    const { index, offset } = this.locationFromPosition(position)\n    return this.getTextAtIndex(index).getStringAtRange([ offset, offset + 1 ])\n  }\n\n  getLength() {\n    return this.blockList.getEndPosition()\n  }\n\n  getBlocks() {\n    return this.blockList.toArray()\n  }\n\n  getBlockCount() {\n    return this.blockList.length\n  }\n\n  getEditCount() {\n    return this.editCount\n  }\n\n  eachBlock(callback) {\n    return this.blockList.eachObject(callback)\n  }\n\n  eachBlockAtRange(range, callback) {\n    let block, textRange\n    range = normalizeRange(range)\n    const [ startPosition, endPosition ] = range\n    const startLocation = this.locationFromPosition(startPosition)\n    const endLocation = this.locationFromPosition(endPosition)\n\n    if (startLocation.index === endLocation.index) {\n      block = this.getBlockAtIndex(startLocation.index)\n      textRange = [ startLocation.offset, endLocation.offset ]\n      return callback(block, textRange, startLocation.index)\n    } else {\n      for (let index = startLocation.index; index <= endLocation.index; index++) {\n        block = this.getBlockAtIndex(index)\n        if (block) {\n          switch (index) {\n            case startLocation.index:\n              textRange = [ startLocation.offset, block.text.getLength() ]\n              break\n            case endLocation.index:\n              textRange = [ 0, endLocation.offset ]\n              break\n            default:\n              textRange = [ 0, block.text.getLength() ]\n          }\n          callback(block, textRange, index)\n        }\n      }\n    }\n  }\n\n  getCommonAttributesAtRange(range) {\n    range = normalizeRange(range)\n    const [ startPosition ] = range\n    if (rangeIsCollapsed(range)) {\n      return this.getCommonAttributesAtPosition(startPosition)\n    } else {\n      const textAttributes = []\n      const blockAttributes = []\n\n      this.eachBlockAtRange(range, function(block, textRange) {\n        if (textRange[0] !== textRange[1]) {\n          textAttributes.push(block.text.getCommonAttributesAtRange(textRange))\n          return blockAttributes.push(attributesForBlock(block))\n        }\n      })\n\n      return Hash.fromCommonAttributesOfObjects(textAttributes)\n        .merge(Hash.fromCommonAttributesOfObjects(blockAttributes))\n        .toObject()\n    }\n  }\n\n  getCommonAttributesAtPosition(position) {\n    let key, value\n    const { index, offset } = this.locationFromPosition(position)\n    const block = this.getBlockAtIndex(index)\n    if (!block) {\n      return {}\n    }\n\n    const commonAttributes = attributesForBlock(block)\n    const attributes = block.text.getAttributesAtPosition(offset)\n    const attributesLeft = block.text.getAttributesAtPosition(offset - 1)\n    const inheritableAttributes = Object.keys(config.textAttributes).filter((key) => {\n      return config.textAttributes[key].inheritable\n    })\n\n    for (key in attributesLeft) {\n      value = attributesLeft[key]\n      if (value === attributes[key] || inheritableAttributes.includes(key)) {\n        commonAttributes[key] = value\n      }\n    }\n\n    return commonAttributes\n  }\n\n  getRangeOfCommonAttributeAtPosition(attributeName, position) {\n    const { index, offset } = this.locationFromPosition(position)\n    const text = this.getTextAtIndex(index)\n    const [ startOffset, endOffset ] = Array.from(text.getExpandedRangeForAttributeAtOffset(attributeName, offset))\n\n    const start = this.positionFromLocation({ index, offset: startOffset })\n    const end = this.positionFromLocation({ index, offset: endOffset })\n    return normalizeRange([ start, end ])\n  }\n\n  getBaseBlockAttributes() {\n    let baseBlockAttributes = this.getBlockAtIndex(0).getAttributes()\n\n    for (let blockIndex = 1; blockIndex < this.getBlockCount(); blockIndex++) {\n      const blockAttributes = this.getBlockAtIndex(blockIndex).getAttributes()\n      const lastAttributeIndex = Math.min(baseBlockAttributes.length, blockAttributes.length)\n\n      baseBlockAttributes = (() => {\n        const result = []\n        for (let index = 0; index < lastAttributeIndex; index++) {\n          if (blockAttributes[index] !== baseBlockAttributes[index]) {\n            break\n          }\n          result.push(blockAttributes[index])\n        }\n        return result\n      })()\n    }\n\n    return baseBlockAttributes\n  }\n\n  getAttachmentById(attachmentId) {\n    for (const attachment of this.getAttachments()) {\n      if (attachment.id === attachmentId) {\n        return attachment\n      }\n    }\n  }\n\n  getAttachmentPieces() {\n    let attachmentPieces = []\n    this.blockList.eachObject(({ text }) => attachmentPieces = attachmentPieces.concat(text.getAttachmentPieces()))\n    return attachmentPieces\n  }\n\n  getAttachments() {\n    return this.getAttachmentPieces().map((piece) => piece.attachment)\n  }\n\n  getRangeOfAttachment(attachment) {\n    let position = 0\n    const iterable = this.blockList.toArray()\n    for (let index = 0; index < iterable.length; index++) {\n      const { text } = iterable[index]\n      const textRange = text.getRangeOfAttachment(attachment)\n      if (textRange) {\n        return normalizeRange([ position + textRange[0], position + textRange[1] ])\n      }\n      position += text.getLength()\n    }\n  }\n\n  getLocationRangeOfAttachment(attachment) {\n    const range = this.getRangeOfAttachment(attachment)\n    return this.locationRangeFromRange(range)\n  }\n\n  getAttachmentPieceForAttachment(attachment) {\n    for (const piece of this.getAttachmentPieces()) {\n      if (piece.attachment === attachment) {\n        return piece\n      }\n    }\n  }\n\n  findRangesForBlockAttribute(attributeName) {\n    let position = 0\n    const ranges = []\n\n    this.getBlocks().forEach((block) => {\n      const length = block.getLength()\n      if (block.hasAttribute(attributeName)) {\n        ranges.push([ position, position + length ])\n      }\n      position += length\n    })\n\n    return ranges\n  }\n\n  findRangesForTextAttribute(attributeName, { withValue } = {}) {\n    let position = 0\n    let range = []\n    const ranges = []\n\n    const match = function(piece) {\n      if (withValue) {\n        return piece.getAttribute(attributeName) === withValue\n      } else {\n        return piece.hasAttribute(attributeName)\n      }\n    }\n\n    this.getPieces().forEach((piece) => {\n      const length = piece.getLength()\n      if (match(piece)) {\n        if (range[1] === position) {\n          range[1] = position + length\n        } else {\n          ranges.push(range = [ position, position + length ])\n        }\n      }\n      position += length\n    })\n\n    return ranges\n  }\n\n  locationFromPosition(position) {\n    const location = this.blockList.findIndexAndOffsetAtPosition(Math.max(0, position))\n    if (location.index != null) {\n      return location\n    } else {\n      const blocks = this.getBlocks()\n      return { index: blocks.length - 1, offset: blocks[blocks.length - 1].getLength() }\n    }\n  }\n\n  positionFromLocation(location) {\n    return this.blockList.findPositionAtIndexAndOffset(location.index, location.offset)\n  }\n\n  locationRangeFromPosition(position) {\n    return normalizeRange(this.locationFromPosition(position))\n  }\n\n  locationRangeFromRange(range) {\n    range = normalizeRange(range)\n    if (!range) return\n\n    const [ startPosition, endPosition ] = Array.from(range)\n    const startLocation = this.locationFromPosition(startPosition)\n    const endLocation = this.locationFromPosition(endPosition)\n    return normalizeRange([ startLocation, endLocation ])\n  }\n\n  rangeFromLocationRange(locationRange) {\n    let rightPosition\n    locationRange = normalizeRange(locationRange)\n    const leftPosition = this.positionFromLocation(locationRange[0])\n    if (!rangeIsCollapsed(locationRange)) {\n      rightPosition = this.positionFromLocation(locationRange[1])\n    }\n    return normalizeRange([ leftPosition, rightPosition ])\n  }\n\n  isEqualTo(document) {\n    return this.blockList.isEqualTo(document?.blockList)\n  }\n\n  getTexts() {\n    return this.getBlocks().map((block) => block.text)\n  }\n\n  getPieces() {\n    const pieces = []\n\n    Array.from(this.getTexts()).forEach((text) => {\n      pieces.push(...Array.from(text.getPieces() || []))\n    })\n\n    return pieces\n  }\n\n  getObjects() {\n    return this.getBlocks().concat(this.getTexts()).concat(this.getPieces())\n  }\n\n  toSerializableDocument() {\n    const blocks = []\n    this.blockList.eachObject((block) => blocks.push(block.copyWithText(block.text.toSerializableText())))\n    return new this.constructor(blocks)\n  }\n\n  toString() {\n    return this.blockList.toString()\n  }\n\n  toJSON() {\n    return this.blockList.toJSON()\n  }\n\n  toConsole() {\n    return JSON.stringify(this.blockList.toArray().map((block) => JSON.parse(block.text.toConsole())))\n  }\n}\n\nconst attributesForBlock = function(block) {\n  const attributes = {}\n  const attributeName = block.getLastAttribute()\n  if (attributeName) {\n    attributes[attributeName] = true\n  }\n  return attributes\n}\n", "/* eslint-disable\n    no-case-declarations,\n    no-irregular-whitespace,\n*/\nimport * as config from \"trix/config\"\nimport BasicObject from \"trix/core/basic_object\"\nimport Document from \"trix/models/document\"\nimport HTMLSanitizer from \"trix/models/html_sanitizer\"\n\nimport {\n  arraysAreEqual,\n  breakableWhitespacePattern,\n  elementContainsNode,\n  findClosestElementFromNode,\n  getBlockTagNames,\n  makeElement,\n  nodeIsAttachmentElement,\n  normalizeSpaces,\n  removeNode,\n  squishBreakableWhitespace,\n  tagName,\n  walkTree,\n} from \"trix/core/helpers\"\n\nconst pieceForString = (string, attributes = {}) => {\n  const type = \"string\"\n  string = normalizeSpaces(string)\n  return { string, attributes, type }\n}\n\nconst pieceForAttachment = (attachment, attributes = {}) => {\n  const type = \"attachment\"\n  return { attachment, attributes, type }\n}\n\nconst blockForAttributes = (attributes = {}, htmlAttributes = {}) => {\n  const text = []\n  return { text, attributes, htmlAttributes }\n}\n\nconst parseTrixDataAttribute = (element, name) => {\n  try {\n    return JSON.parse(element.getAttribute(`data-trix-${name}`))\n  } catch (error) {\n    return {}\n  }\n}\n\nconst getImageDimensions = (element) => {\n  const width = element.getAttribute(\"width\")\n  const height = element.getAttribute(\"height\")\n  const dimensions = {}\n  if (width) {\n    dimensions.width = parseInt(width, 10)\n  }\n  if (height) {\n    dimensions.height = parseInt(height, 10)\n  }\n  return dimensions\n}\n\nexport default class HTMLParser extends BasicObject {\n  static parse(html, options) {\n    const parser = new this(html, options)\n    parser.parse()\n    return parser\n  }\n\n  constructor(html, { referenceElement } = {}) {\n    super(...arguments)\n    this.html = html\n    this.referenceElement = referenceElement\n    this.blocks = []\n    this.blockElements = []\n    this.processedElements = []\n  }\n\n  getDocument() {\n    return Document.fromJSON(this.blocks)\n  }\n\n  // HTML parsing\n\n  parse() {\n    try {\n      this.createHiddenContainer()\n      HTMLSanitizer.setHTML(this.containerElement, this.html)\n      const walker = walkTree(this.containerElement, { usingFilter: nodeFilter })\n      while (walker.nextNode()) {\n        this.processNode(walker.currentNode)\n      }\n      return this.translateBlockElementMarginsToNewlines()\n    } finally {\n      this.removeHiddenContainer()\n    }\n  }\n\n  createHiddenContainer() {\n    if (this.referenceElement) {\n      this.containerElement = this.referenceElement.cloneNode(false)\n      this.containerElement.removeAttribute(\"id\")\n      this.containerElement.setAttribute(\"data-trix-internal\", \"\")\n      this.containerElement.style.display = \"none\"\n      return this.referenceElement.parentNode.insertBefore(this.containerElement, this.referenceElement.nextSibling)\n    } else {\n      this.containerElement = makeElement({ tagName: \"div\", style: { display: \"none\" } })\n      return document.body.appendChild(this.containerElement)\n    }\n  }\n\n  removeHiddenContainer() {\n    return removeNode(this.containerElement)\n  }\n\n  processNode(node) {\n    switch (node.nodeType) {\n      case Node.TEXT_NODE:\n        if (!this.isInsignificantTextNode(node)) {\n          this.appendBlockForTextNode(node)\n          return this.processTextNode(node)\n        }\n        break\n      case Node.ELEMENT_NODE:\n        this.appendBlockForElement(node)\n        return this.processElement(node)\n    }\n  }\n\n  appendBlockForTextNode(node) {\n    const element = node.parentNode\n    if (element === this.currentBlockElement && this.isBlockElement(node.previousSibling)) {\n      return this.appendStringWithAttributes(\"\\n\")\n    } else if (element === this.containerElement || this.isBlockElement(element)) {\n      const attributes = this.getBlockAttributes(element)\n      const htmlAttributes = this.getBlockHTMLAttributes(element)\n      if (!arraysAreEqual(attributes, this.currentBlock?.attributes)) {\n        this.currentBlock = this.appendBlockForAttributesWithElement(attributes, element, htmlAttributes)\n        this.currentBlockElement = element\n      }\n    }\n  }\n\n  appendBlockForElement(element) {\n    const elementIsBlockElement = this.isBlockElement(element)\n    const currentBlockContainsElement = elementContainsNode(this.currentBlockElement, element)\n\n    if (elementIsBlockElement && !this.isBlockElement(element.firstChild)) {\n      if (!this.isInsignificantTextNode(element.firstChild) || !this.isBlockElement(element.firstElementChild)) {\n        const attributes = this.getBlockAttributes(element)\n        const htmlAttributes = this.getBlockHTMLAttributes(element)\n        if (element.firstChild) {\n          if (!(currentBlockContainsElement && arraysAreEqual(attributes, this.currentBlock.attributes))) {\n            this.currentBlock = this.appendBlockForAttributesWithElement(attributes, element, htmlAttributes)\n            this.currentBlockElement = element\n          } else {\n            return this.appendStringWithAttributes(\"\\n\")\n          }\n        }\n      }\n    } else if (this.currentBlockElement && !currentBlockContainsElement && !elementIsBlockElement) {\n      const parentBlockElement = this.findParentBlockElement(element)\n      if (parentBlockElement) {\n        return this.appendBlockForElement(parentBlockElement)\n      } else {\n        this.currentBlock = this.appendEmptyBlock()\n        this.currentBlockElement = null\n      }\n    }\n  }\n\n  findParentBlockElement(element) {\n    let { parentElement } = element\n    while (parentElement && parentElement !== this.containerElement) {\n      if (this.isBlockElement(parentElement) && this.blockElements.includes(parentElement)) {\n        return parentElement\n      } else {\n        parentElement = parentElement.parentElement\n      }\n    }\n    return null\n  }\n\n  processTextNode(node) {\n    let string = node.data\n    if (!elementCanDisplayPreformattedText(node.parentNode)) {\n      string = squishBreakableWhitespace(string)\n      if (stringEndsWithWhitespace(node.previousSibling?.textContent)) {\n        string = leftTrimBreakableWhitespace(string)\n      }\n    }\n    return this.appendStringWithAttributes(string, this.getTextAttributes(node.parentNode))\n  }\n\n  processElement(element) {\n    let attributes\n    if (nodeIsAttachmentElement(element)) {\n      attributes = parseTrixDataAttribute(element, \"attachment\")\n      if (Object.keys(attributes).length) {\n        const textAttributes = this.getTextAttributes(element)\n        this.appendAttachmentWithAttributes(attributes, textAttributes)\n        // We have everything we need so avoid processing inner nodes\n        element.innerHTML = \"\"\n      }\n      return this.processedElements.push(element)\n    } else {\n      switch (tagName(element)) {\n        case \"br\":\n          if (!this.isExtraBR(element) && !this.isBlockElement(element.nextSibling)) {\n            this.appendStringWithAttributes(\"\\n\", this.getTextAttributes(element))\n          }\n          return this.processedElements.push(element)\n        case \"img\":\n          attributes = { url: element.getAttribute(\"src\"), contentType: \"image\" }\n          const object = getImageDimensions(element)\n          for (const key in object) {\n            const value = object[key]\n            attributes[key] = value\n          }\n          this.appendAttachmentWithAttributes(attributes, this.getTextAttributes(element))\n          return this.processedElements.push(element)\n        case \"tr\":\n          if (this.needsTableSeparator(element)) {\n            return this.appendStringWithAttributes(config.parser.tableRowSeparator)\n          }\n          break\n        case \"td\":\n          if (this.needsTableSeparator(element)) {\n            return this.appendStringWithAttributes(config.parser.tableCellSeparator)\n          }\n          break\n      }\n    }\n  }\n\n  // Document construction\n\n  appendBlockForAttributesWithElement(attributes, element, htmlAttributes = {}) {\n    this.blockElements.push(element)\n    const block = blockForAttributes(attributes, htmlAttributes)\n    this.blocks.push(block)\n    return block\n  }\n\n  appendEmptyBlock() {\n    return this.appendBlockForAttributesWithElement([], null)\n  }\n\n  appendStringWithAttributes(string, attributes) {\n    return this.appendPiece(pieceForString(string, attributes))\n  }\n\n  appendAttachmentWithAttributes(attachment, attributes) {\n    return this.appendPiece(pieceForAttachment(attachment, attributes))\n  }\n\n  appendPiece(piece) {\n    if (this.blocks.length === 0) {\n      this.appendEmptyBlock()\n    }\n    return this.blocks[this.blocks.length - 1].text.push(piece)\n  }\n\n  appendStringToTextAtIndex(string, index) {\n    const { text } = this.blocks[index]\n    const piece = text[text.length - 1]\n\n    if (piece?.type === \"string\") {\n      piece.string += string\n    } else {\n      return text.push(pieceForString(string))\n    }\n  }\n\n  prependStringToTextAtIndex(string, index) {\n    const { text } = this.blocks[index]\n    const piece = text[0]\n\n    if (piece?.type === \"string\") {\n      piece.string = string + piece.string\n    } else {\n      return text.unshift(pieceForString(string))\n    }\n  }\n\n  // Attribute parsing\n\n  getTextAttributes(element) {\n    let value\n    const attributes = {}\n    for (const attribute in config.textAttributes) {\n      const configAttr = config.textAttributes[attribute]\n      if (\n        configAttr.tagName &&\n        findClosestElementFromNode(element, {\n          matchingSelector: configAttr.tagName,\n          untilNode: this.containerElement,\n        })\n      ) {\n        attributes[attribute] = true\n      } else if (configAttr.parser) {\n        value = configAttr.parser(element)\n        if (value) {\n          let attributeInheritedFromBlock = false\n          for (const blockElement of this.findBlockElementAncestors(element)) {\n            if (configAttr.parser(blockElement) === value) {\n              attributeInheritedFromBlock = true\n              break\n            }\n          }\n          if (!attributeInheritedFromBlock) {\n            attributes[attribute] = value\n          }\n        }\n      } else if (configAttr.styleProperty) {\n        value = element.style[configAttr.styleProperty]\n        if (value) {\n          attributes[attribute] = value\n        }\n      }\n    }\n\n    if (nodeIsAttachmentElement(element)) {\n      const object = parseTrixDataAttribute(element, \"attributes\")\n      for (const key in object) {\n        value = object[key]\n        attributes[key] = value\n      }\n    }\n\n    return attributes\n  }\n\n  getBlockAttributes(element) {\n    const attributes = []\n    while (element && element !== this.containerElement) {\n      for (const attribute in config.blockAttributes) {\n        const attrConfig = config.blockAttributes[attribute]\n        if (attrConfig.parse !== false) {\n          if (tagName(element) === attrConfig.tagName) {\n            if (attrConfig.test?.(element) || !attrConfig.test) {\n              attributes.push(attribute)\n              if (attrConfig.listAttribute) {\n                attributes.push(attrConfig.listAttribute)\n              }\n            }\n          }\n        }\n      }\n      element = element.parentNode\n    }\n    return attributes.reverse()\n  }\n\n  getBlockHTMLAttributes(element) {\n    const attributes = {}\n    const blockConfig = Object.values(config.blockAttributes).find(settings => settings.tagName === tagName(element))\n    const allowedAttributes = blockConfig?.htmlAttributes || []\n\n    allowedAttributes.forEach((attribute) => {\n      if (element.hasAttribute(attribute)) {\n        attributes[attribute] = element.getAttribute(attribute)\n      }\n    })\n\n    return attributes\n  }\n\n  findBlockElementAncestors(element) {\n    const ancestors = []\n    while (element && element !== this.containerElement) {\n      const tag = tagName(element)\n      if (getBlockTagNames().includes(tag)) {\n        ancestors.push(element)\n      }\n      element = element.parentNode\n    }\n    return ancestors\n  }\n\n  // Element inspection\n\n  isBlockElement(element) {\n    if (element?.nodeType !== Node.ELEMENT_NODE) return\n    if (nodeIsAttachmentElement(element)) return\n    if (findClosestElementFromNode(element, { matchingSelector: \"td\", untilNode: this.containerElement })) return\n\n    return getBlockTagNames().includes(tagName(element)) ||\n      window.getComputedStyle(element).display === \"block\"\n  }\n\n  isInsignificantTextNode(node) {\n    if (node?.nodeType !== Node.TEXT_NODE) return\n    if (!stringIsAllBreakableWhitespace(node.data)) return\n    const { parentNode, previousSibling, nextSibling } = node\n    if (nodeEndsWithNonWhitespace(parentNode.previousSibling) && !this.isBlockElement(parentNode.previousSibling)) return\n    if (elementCanDisplayPreformattedText(parentNode)) return\n    return !previousSibling || this.isBlockElement(previousSibling) || !nextSibling || this.isBlockElement(nextSibling)\n  }\n\n  isExtraBR(element) {\n    return tagName(element) === \"br\" && this.isBlockElement(element.parentNode) && element.parentNode.lastChild === element\n  }\n\n  needsTableSeparator(element) {\n    if (config.parser.removeBlankTableCells) {\n      const content = element.previousSibling?.textContent\n      return content && /\\S/.test(content)\n    } else {\n      return element.previousSibling\n    }\n  }\n\n  // Margin translation\n\n  translateBlockElementMarginsToNewlines() {\n    const defaultMargin = this.getMarginOfDefaultBlockElement()\n\n    for (let index = 0; index < this.blocks.length; index++) {\n      const margin = this.getMarginOfBlockElementAtIndex(index)\n      if (margin) {\n        if (margin.top > defaultMargin.top * 2) {\n          this.prependStringToTextAtIndex(\"\\n\", index)\n        }\n\n        if (margin.bottom > defaultMargin.bottom * 2) {\n          this.appendStringToTextAtIndex(\"\\n\", index)\n        }\n      }\n    }\n  }\n\n  getMarginOfBlockElementAtIndex(index) {\n    const element = this.blockElements[index]\n    if (element) {\n      if (element.textContent) {\n        if (!getBlockTagNames().includes(tagName(element)) && !this.processedElements.includes(element)) {\n          return getBlockElementMargin(element)\n        }\n      }\n    }\n  }\n\n  getMarginOfDefaultBlockElement() {\n    const element = makeElement(config.blockAttributes.default.tagName)\n    this.containerElement.appendChild(element)\n    return getBlockElementMargin(element)\n  }\n}\n\n// Helpers\n\nconst elementCanDisplayPreformattedText = function(element) {\n  const { whiteSpace } = window.getComputedStyle(element)\n  return [ \"pre\", \"pre-wrap\", \"pre-line\" ].includes(whiteSpace)\n}\n\nconst nodeEndsWithNonWhitespace = (node) => node && !stringEndsWithWhitespace(node.textContent)\n\nconst getBlockElementMargin = function(element) {\n  const style = window.getComputedStyle(element)\n  if (style.display === \"block\") {\n    return { top: parseInt(style.marginTop), bottom: parseInt(style.marginBottom) }\n  }\n}\n\nconst nodeFilter = function(node) {\n  if (tagName(node) === \"style\") {\n    return NodeFilter.FILTER_REJECT\n  } else {\n    return NodeFilter.FILTER_ACCEPT\n  }\n}\n\n// Whitespace\n\nconst leftTrimBreakableWhitespace = (string) => string.replace(new RegExp(`^${breakableWhitespacePattern.source}+`), \"\")\n\nconst stringIsAllBreakableWhitespace = (string) => new RegExp(`^${breakableWhitespacePattern.source}*$`).test(string)\n\nconst stringEndsWithWhitespace = (string) => /\\s$/.test(string)\n", "/* eslint-disable\n    no-empty,\n*/\nimport { removeNode } from \"trix/core/helpers\"\n\nimport DocumentView from \"trix/views/document_view\"\nimport Document from \"trix/models/document\"\nimport HTMLParser from \"trix/models/html_parser\"\n\nconst unserializableElementSelector = \"[data-trix-serialize=false]\"\nconst unserializableAttributeNames = [\n  \"contenteditable\",\n  \"data-trix-id\",\n  \"data-trix-store-key\",\n  \"data-trix-mutable\",\n  \"data-trix-placeholder\",\n  \"tabindex\",\n]\nconst serializedAttributesAttribute = \"data-trix-serialized-attributes\"\nconst serializedAttributesSelector = `[${serializedAttributesAttribute}]`\n\nconst blockCommentPattern = new RegExp(\"<!--block-->\", \"g\")\n\nconst serializers = {\n  \"application/json\": function(serializable) {\n    let document\n    if (serializable instanceof Document) {\n      document = serializable\n    } else if (serializable instanceof HTMLElement) {\n      document = HTMLParser.parse(serializable.innerHTML).getDocument()\n    } else {\n      throw new Error(\"unserializable object\")\n    }\n\n    return document.toSerializableDocument().toJSONString()\n  },\n\n  \"text/html\": function(serializable) {\n    let element\n    if (serializable instanceof Document) {\n      element = DocumentView.render(serializable)\n    } else if (serializable instanceof HTMLElement) {\n      element = serializable.cloneNode(true)\n    } else {\n      throw new Error(\"unserializable object\")\n    }\n\n    // Remove unserializable elements\n    Array.from(element.querySelectorAll(unserializableElementSelector)).forEach((el) => {\n      removeNode(el)\n    })\n\n    // Remove unserializable attributes\n    unserializableAttributeNames.forEach((attribute) => {\n      Array.from(element.querySelectorAll(`[${attribute}]`)).forEach((el) => {\n        el.removeAttribute(attribute)\n      })\n    })\n\n    // Rewrite elements with serialized attribute overrides\n    Array.from(element.querySelectorAll(serializedAttributesSelector)).forEach((el) => {\n      try {\n        const attributes = JSON.parse(el.getAttribute(serializedAttributesAttribute))\n        el.removeAttribute(serializedAttributesAttribute)\n        for (const name in attributes) {\n          const value = attributes[name]\n          el.setAttribute(name, value)\n        }\n      } catch (error) {}\n    })\n\n    return element.innerHTML.replace(blockCommentPattern, \"\")\n  },\n}\n\nconst deserializers = {\n  \"application/json\": function(string) {\n    return Document.fromJSONString(string)\n  },\n\n  \"text/html\": function(string) {\n    return HTMLParser.parse(string).getDocument()\n  },\n}\n\nexport const serializeToContentType = function(serializable, contentType) {\n  const serializer = serializers[contentType]\n  if (serializer) {\n    return serializer(serializable)\n  } else {\n    throw new Error(`unknown content type: ${contentType}`)\n  }\n}\n\nexport const deserializeFromContentType = function(string, contentType) {\n  const deserializer = deserializers[contentType]\n  if (deserializer) {\n    return deserializer(string)\n  } else {\n    throw new Error(`unknown content type: ${contentType}`)\n  }\n}\n", "import \"trix/models/attachment\"\nimport BasicObject from \"trix/core/basic_object\"\n\nexport default class ManagedAttachment extends BasicObject {\n  constructor(attachmentManager, attachment) {\n    super(...arguments)\n    this.attachmentManager = attachmentManager\n    this.attachment = attachment\n    this.id = this.attachment.id\n    this.file = this.attachment.file\n  }\n\n  remove() {\n    return this.attachmentManager.requestRemovalOfAttachment(this.attachment)\n  }\n}\n\nManagedAttachment.proxyMethod(\"attachment.getAttribute\")\nManagedAttachment.proxyMethod(\"attachment.hasAttribute\")\nManagedAttachment.proxyMethod(\"attachment.setAttribute\")\nManagedAttachment.proxyMethod(\"attachment.getAttributes\")\nManagedAttachment.proxyMethod(\"attachment.setAttributes\")\nManagedAttachment.proxyMethod(\"attachment.isPending\")\nManagedAttachment.proxyMethod(\"attachment.isPreviewable\")\nManagedAttachment.proxyMethod(\"attachment.getURL\")\nManagedAttachment.proxyMethod(\"attachment.getHref\")\nManagedAttachment.proxyMethod(\"attachment.getFilename\")\nManagedAttachment.proxyMethod(\"attachment.getFilesize\")\nManagedAttachment.proxyMethod(\"attachment.getFormattedFilesize\")\nManagedAttachment.proxyMethod(\"attachment.getExtension\")\nManagedAttachment.proxyMethod(\"attachment.getContentType\")\nManagedAttachment.proxyMethod(\"attachment.getFile\")\nManagedAttachment.proxyMethod(\"attachment.setFile\")\nManagedAttachment.proxyMethod(\"attachment.releaseFile\")\nManagedAttachment.proxyMethod(\"attachment.getUploadProgress\")\nManagedAttachment.proxyMethod(\"attachment.setUploadProgress\")\n\n", "import ManagedAttachment from \"trix/models/managed_attachment\"\nimport BasicObject from \"trix/core/basic_object\"\n\nexport default class AttachmentManager extends BasicObject {\n  constructor(attachments = []) {\n    super(...arguments)\n    this.managedAttachments = {}\n    Array.from(attachments).forEach((attachment) => {\n      this.manageAttachment(attachment)\n    })\n  }\n\n  getAttachments() {\n    const result = []\n    for (const id in this.managedAttachments) {\n      const attachment = this.managedAttachments[id]\n      result.push(attachment)\n    }\n    return result\n  }\n\n  manageAttachment(attachment) {\n    if (!this.managedAttachments[attachment.id]) {\n      this.managedAttachments[attachment.id] = new ManagedAttachment(this, attachment)\n    }\n    return this.managedAttachments[attachment.id]\n  }\n\n  attachmentIsManaged(attachment) {\n    return attachment.id in this.managedAttachments\n  }\n\n  requestRemovalOfAttachment(attachment) {\n    if (this.attachmentIsManaged(attachment)) {\n      return this.delegate?.attachmentManagerDidRequestRemovalOfAttachment?.(attachment)\n    }\n  }\n\n  unmanageAttachment(attachment) {\n    const managedAttachment = this.managedAttachments[attachment.id]\n    delete this.managedAttachments[attachment.id]\n    return managedAttachment\n  }\n}\n", "export default class LineBreakInsertion {\n  constructor(composition) {\n    this.composition = composition\n    this.document = this.composition.document\n    const selectedRange = this.composition.getSelectedRange()\n    this.startPosition = selectedRange[0]\n    this.endPosition = selectedRange[1]\n\n    this.startLocation = this.document.locationFromPosition(this.startPosition)\n    this.endLocation = this.document.locationFromPosition(this.endPosition)\n\n    this.block = this.document.getBlockAtIndex(this.endLocation.index)\n    this.breaksOnReturn = this.block.breaksOnReturn()\n    this.previousCharacter = this.block.text.getStringAtPosition(this.endLocation.offset - 1)\n    this.nextCharacter = this.block.text.getStringAtPosition(this.endLocation.offset)\n  }\n\n  shouldInsertBlockBreak() {\n    if (this.block.hasAttributes() && this.block.isListItem() && !this.block.isEmpty()) {\n      return this.startLocation.offset !== 0\n    } else {\n      return this.breaksOnReturn && this.nextCharacter !== \"\\n\"\n    }\n  }\n\n  shouldBreakFormattedBlock() {\n    return (\n      this.block.hasAttributes() &&\n      !this.block.isListItem() &&\n      (this.breaksOnReturn && this.nextCharacter === \"\\n\" || this.previousCharacter === \"\\n\")\n    )\n  }\n\n  shouldDecreaseListLevel() {\n    return this.block.hasAttributes() && this.block.isListItem() && this.block.isEmpty()\n  }\n\n  shouldPrependListItem() {\n    return this.block.isListItem() && this.startLocation.offset === 0 && !this.block.isEmpty()\n  }\n\n  shouldRemoveLastBlockAttribute() {\n    return this.block.hasAttributes() && !this.block.isListItem() && this.block.isEmpty()\n  }\n}\n", "import * as config from \"trix/config\"\nimport { OBJECT_REPLACEMENT_CHARACTER } from \"trix/constants\"\n\nimport BasicObject from \"trix/core/basic_object\"\nimport Text from \"trix/models/text\"\nimport Block from \"trix/models/block\"\nimport Attachment from \"trix/models/attachment\"\nimport Document from \"trix/models/document\"\nimport HTMLParser from \"trix/models/html_parser\"\nimport LineBreakInsertion from \"trix/models/line_break_insertion\"\n\nimport {\n  arrayStartsWith,\n  extend,\n  getAllAttributeNames,\n  getBlockConfig,\n  getTextConfig,\n  normalizeRange,\n  objectsAreEqual,\n  rangeIsCollapsed,\n  rangesAreEqual,\n  summarizeArrayChange,\n} from \"trix/core/helpers\"\n\nconst PLACEHOLDER = \" \"\n\nexport default class Composition extends BasicObject {\n  constructor() {\n    super(...arguments)\n    this.document = new Document()\n    this.attachments = []\n    this.currentAttributes = {}\n    this.revision = 0\n  }\n\n  setDocument(document) {\n    if (!document.isEqualTo(this.document)) {\n      this.document = document\n      this.refreshAttachments()\n      this.revision++\n      return this.delegate?.compositionDidChangeDocument?.(document)\n    }\n  }\n\n  // Snapshots\n\n  getSnapshot() {\n    return {\n      document: this.document,\n      selectedRange: this.getSelectedRange(),\n    }\n  }\n\n  loadSnapshot({ document, selectedRange }) {\n    this.delegate?.compositionWillLoadSnapshot?.()\n    this.setDocument(document != null ? document : new Document())\n    this.setSelection(selectedRange != null ? selectedRange : [ 0, 0 ])\n    return this.delegate?.compositionDidLoadSnapshot?.()\n  }\n\n  // Responder protocol\n\n  insertText(text, { updatePosition } = { updatePosition: true }) {\n    const selectedRange = this.getSelectedRange()\n    this.setDocument(this.document.insertTextAtRange(text, selectedRange))\n\n    const startPosition = selectedRange[0]\n    const endPosition = startPosition + text.getLength()\n\n    if (updatePosition) {\n      this.setSelection(endPosition)\n    }\n    return this.notifyDelegateOfInsertionAtRange([ startPosition, endPosition ])\n  }\n\n  insertBlock(block = new Block()) {\n    const document = new Document([ block ])\n    return this.insertDocument(document)\n  }\n\n  insertDocument(document = new Document()) {\n    const selectedRange = this.getSelectedRange()\n    this.setDocument(this.document.insertDocumentAtRange(document, selectedRange))\n\n    const startPosition = selectedRange[0]\n    const endPosition = startPosition + document.getLength()\n\n    this.setSelection(endPosition)\n    return this.notifyDelegateOfInsertionAtRange([ startPosition, endPosition ])\n  }\n\n  insertString(string, options) {\n    const attributes = this.getCurrentTextAttributes()\n    const text = Text.textForStringWithAttributes(string, attributes)\n    return this.insertText(text, options)\n  }\n\n  insertBlockBreak() {\n    const selectedRange = this.getSelectedRange()\n    this.setDocument(this.document.insertBlockBreakAtRange(selectedRange))\n\n    const startPosition = selectedRange[0]\n    const endPosition = startPosition + 1\n\n    this.setSelection(endPosition)\n    return this.notifyDelegateOfInsertionAtRange([ startPosition, endPosition ])\n  }\n\n  insertLineBreak() {\n    const insertion = new LineBreakInsertion(this)\n\n    if (insertion.shouldDecreaseListLevel()) {\n      this.decreaseListLevel()\n      return this.setSelection(insertion.startPosition)\n    } else if (insertion.shouldPrependListItem()) {\n      const document = new Document([ insertion.block.copyWithoutText() ])\n      return this.insertDocument(document)\n    } else if (insertion.shouldInsertBlockBreak()) {\n      return this.insertBlockBreak()\n    } else if (insertion.shouldRemoveLastBlockAttribute()) {\n      return this.removeLastBlockAttribute()\n    } else if (insertion.shouldBreakFormattedBlock()) {\n      return this.breakFormattedBlock(insertion)\n    } else {\n      return this.insertString(\"\\n\")\n    }\n  }\n\n  insertHTML(html) {\n    const document = HTMLParser.parse(html).getDocument()\n    const selectedRange = this.getSelectedRange()\n\n    this.setDocument(this.document.mergeDocumentAtRange(document, selectedRange))\n\n    const startPosition = selectedRange[0]\n    const endPosition = startPosition + document.getLength() - 1\n\n    this.setSelection(endPosition)\n    return this.notifyDelegateOfInsertionAtRange([ startPosition, endPosition ])\n  }\n\n  replaceHTML(html) {\n    const document = HTMLParser.parse(html).getDocument().copyUsingObjectsFromDocument(this.document)\n    const locationRange = this.getLocationRange({ strict: false })\n    const selectedRange = this.document.rangeFromLocationRange(locationRange)\n    this.setDocument(document)\n    return this.setSelection(selectedRange)\n  }\n\n  insertFile(file) {\n    return this.insertFiles([ file ])\n  }\n\n  insertFiles(files) {\n    const attachments = []\n\n    Array.from(files).forEach((file) => {\n      if (this.delegate?.compositionShouldAcceptFile(file)) {\n        const attachment = Attachment.attachmentForFile(file)\n        attachments.push(attachment)\n      }\n    })\n\n    return this.insertAttachments(attachments)\n  }\n\n  insertAttachment(attachment) {\n    return this.insertAttachments([ attachment ])\n  }\n\n  insertAttachments(attachments) {\n    let text = new Text()\n\n    Array.from(attachments).forEach((attachment) => {\n      const type = attachment.getType()\n      const presentation = config.attachments[type]?.presentation\n\n      const attributes = this.getCurrentTextAttributes()\n      if (presentation) {\n        attributes.presentation = presentation\n      }\n\n      const attachmentText = Text.textForAttachmentWithAttributes(attachment, attributes)\n      text = text.appendText(attachmentText)\n    })\n\n    return this.insertText(text)\n  }\n\n  shouldManageDeletingInDirection(direction) {\n    const locationRange = this.getLocationRange()\n    if (rangeIsCollapsed(locationRange)) {\n      if (direction === \"backward\" && locationRange[0].offset === 0) {\n        return true\n      }\n      if (this.shouldManageMovingCursorInDirection(direction)) {\n        return true\n      }\n    } else {\n      if (locationRange[0].index !== locationRange[1].index) {\n        return true\n      }\n    }\n    return false\n  }\n\n  deleteInDirection(direction, { length } = {}) {\n    let attachment, deletingIntoPreviousBlock, selectionSpansBlocks\n    const locationRange = this.getLocationRange()\n    let range = this.getSelectedRange()\n    const selectionIsCollapsed = rangeIsCollapsed(range)\n\n    if (selectionIsCollapsed) {\n      deletingIntoPreviousBlock = direction === \"backward\" && locationRange[0].offset === 0\n    } else {\n      selectionSpansBlocks = locationRange[0].index !== locationRange[1].index\n    }\n\n    if (deletingIntoPreviousBlock) {\n      if (this.canDecreaseBlockAttributeLevel()) {\n        const block = this.getBlock()\n\n        if (block.isListItem()) {\n          this.decreaseListLevel()\n        } else {\n          this.decreaseBlockAttributeLevel()\n        }\n\n        this.setSelection(range[0])\n        if (block.isEmpty()) {\n          return false\n        }\n      }\n    }\n\n    if (selectionIsCollapsed) {\n      range = this.getExpandedRangeInDirection(direction, { length })\n      if (direction === \"backward\") {\n        attachment = this.getAttachmentAtRange(range)\n      }\n    }\n\n    if (attachment) {\n      this.editAttachment(attachment)\n      return false\n    } else {\n      this.setDocument(this.document.removeTextAtRange(range))\n      this.setSelection(range[0])\n      if (deletingIntoPreviousBlock || selectionSpansBlocks) {\n        return false\n      }\n    }\n  }\n\n  moveTextFromRange(range) {\n    const [ position ] = Array.from(this.getSelectedRange())\n    this.setDocument(this.document.moveTextFromRangeToPosition(range, position))\n    return this.setSelection(position)\n  }\n\n  removeAttachment(attachment) {\n    const range = this.document.getRangeOfAttachment(attachment)\n    if (range) {\n      this.stopEditingAttachment()\n      this.setDocument(this.document.removeTextAtRange(range))\n      return this.setSelection(range[0])\n    }\n  }\n\n  removeLastBlockAttribute() {\n    const [ startPosition, endPosition ] = Array.from(this.getSelectedRange())\n    const block = this.document.getBlockAtPosition(endPosition)\n    this.removeCurrentAttribute(block.getLastAttribute())\n    return this.setSelection(startPosition)\n  }\n\n  insertPlaceholder() {\n    this.placeholderPosition = this.getPosition()\n    return this.insertString(PLACEHOLDER)\n  }\n\n  selectPlaceholder() {\n    if (this.placeholderPosition != null) {\n      this.setSelectedRange([ this.placeholderPosition, this.placeholderPosition + PLACEHOLDER.length ])\n      return this.getSelectedRange()\n    }\n  }\n\n  forgetPlaceholder() {\n    this.placeholderPosition = null\n  }\n\n  // Current attributes\n\n  hasCurrentAttribute(attributeName) {\n    const value = this.currentAttributes[attributeName]\n    return value != null && value !== false\n  }\n\n  toggleCurrentAttribute(attributeName) {\n    const value = !this.currentAttributes[attributeName]\n    if (value) {\n      return this.setCurrentAttribute(attributeName, value)\n    } else {\n      return this.removeCurrentAttribute(attributeName)\n    }\n  }\n\n  canSetCurrentAttribute(attributeName) {\n    if (getBlockConfig(attributeName)) {\n      return this.canSetCurrentBlockAttribute(attributeName)\n    } else {\n      return this.canSetCurrentTextAttribute(attributeName)\n    }\n  }\n\n  canSetCurrentTextAttribute(attributeName) {\n    const document = this.getSelectedDocument()\n    if (!document) return\n    for (const attachment of Array.from(document.getAttachments())) {\n      if (!attachment.hasContent()) {\n        return false\n      }\n    }\n    return true\n  }\n\n  canSetCurrentBlockAttribute(attributeName) {\n    const block = this.getBlock()\n    if (!block) return\n    return !block.isTerminalBlock()\n  }\n\n  setCurrentAttribute(attributeName, value) {\n    if (getBlockConfig(attributeName)) {\n      return this.setBlockAttribute(attributeName, value)\n    } else {\n      this.setTextAttribute(attributeName, value)\n      this.currentAttributes[attributeName] = value\n      return this.notifyDelegateOfCurrentAttributesChange()\n    }\n  }\n\n  setHTMLAtributeAtPosition(position, attributeName, value) {\n    const block = this.document.getBlockAtPosition(position)\n    const allowedHTMLAttributes = getBlockConfig(block.getLastAttribute())?.htmlAttributes\n\n    if (block && allowedHTMLAttributes?.includes(attributeName)) {\n      const newDocument = this.document.setHTMLAttributeAtPosition(position, attributeName, value)\n      this.setDocument(newDocument)\n    }\n  }\n\n  setTextAttribute(attributeName, value) {\n    const selectedRange = this.getSelectedRange()\n    if (!selectedRange) return\n\n    const [ startPosition, endPosition ] = Array.from(selectedRange)\n    if (startPosition === endPosition) {\n      if (attributeName === \"href\") {\n        const text = Text.textForStringWithAttributes(value, { href: value })\n        return this.insertText(text)\n      }\n    } else {\n      return this.setDocument(this.document.addAttributeAtRange(attributeName, value, selectedRange))\n    }\n  }\n\n  setBlockAttribute(attributeName, value) {\n    const selectedRange = this.getSelectedRange()\n    if (this.canSetCurrentAttribute(attributeName)) {\n      this.setDocument(this.document.applyBlockAttributeAtRange(attributeName, value, selectedRange))\n      return this.setSelection(selectedRange)\n    }\n  }\n\n  removeCurrentAttribute(attributeName) {\n    if (getBlockConfig(attributeName)) {\n      this.removeBlockAttribute(attributeName)\n      return this.updateCurrentAttributes()\n    } else {\n      this.removeTextAttribute(attributeName)\n      delete this.currentAttributes[attributeName]\n      return this.notifyDelegateOfCurrentAttributesChange()\n    }\n  }\n\n  removeTextAttribute(attributeName) {\n    const selectedRange = this.getSelectedRange()\n    if (!selectedRange) return\n    return this.setDocument(this.document.removeAttributeAtRange(attributeName, selectedRange))\n  }\n\n  removeBlockAttribute(attributeName) {\n    const selectedRange = this.getSelectedRange()\n    if (!selectedRange) return\n    return this.setDocument(this.document.removeAttributeAtRange(attributeName, selectedRange))\n  }\n\n  canDecreaseNestingLevel() {\n    return this.getBlock()?.getNestingLevel() > 0\n  }\n\n  canIncreaseNestingLevel() {\n    const block = this.getBlock()\n    if (!block) return\n    if (getBlockConfig(block.getLastNestableAttribute())?.listAttribute) {\n      const previousBlock = this.getPreviousBlock()\n      if (previousBlock) {\n        return arrayStartsWith(previousBlock.getListItemAttributes(), block.getListItemAttributes())\n      }\n    } else {\n      return block.getNestingLevel() > 0\n    }\n  }\n\n  decreaseNestingLevel() {\n    const block = this.getBlock()\n    if (!block) return\n    return this.setDocument(this.document.replaceBlock(block, block.decreaseNestingLevel()))\n  }\n\n  increaseNestingLevel() {\n    const block = this.getBlock()\n    if (!block) return\n    return this.setDocument(this.document.replaceBlock(block, block.increaseNestingLevel()))\n  }\n\n  canDecreaseBlockAttributeLevel() {\n    return this.getBlock()?.getAttributeLevel() > 0\n  }\n\n  decreaseBlockAttributeLevel() {\n    const attribute = this.getBlock()?.getLastAttribute()\n    if (attribute) {\n      return this.removeCurrentAttribute(attribute)\n    }\n  }\n\n  decreaseListLevel() {\n    let [ startPosition ] = Array.from(this.getSelectedRange())\n    const { index } = this.document.locationFromPosition(startPosition)\n    let endIndex = index\n    const attributeLevel = this.getBlock().getAttributeLevel()\n\n    let block = this.document.getBlockAtIndex(endIndex + 1)\n    while (block) {\n      if (!block.isListItem() || block.getAttributeLevel() <= attributeLevel) {\n        break\n      }\n      endIndex++\n      block = this.document.getBlockAtIndex(endIndex + 1)\n    }\n\n    startPosition = this.document.positionFromLocation({ index, offset: 0 })\n    const endPosition = this.document.positionFromLocation({ index: endIndex, offset: 0 })\n    return this.setDocument(this.document.removeLastListAttributeAtRange([ startPosition, endPosition ]))\n  }\n\n  updateCurrentAttributes() {\n    const selectedRange = this.getSelectedRange({ ignoreLock: true })\n    if (selectedRange) {\n      const currentAttributes = this.document.getCommonAttributesAtRange(selectedRange)\n\n      Array.from(getAllAttributeNames()).forEach((attributeName) => {\n        if (!currentAttributes[attributeName]) {\n          if (!this.canSetCurrentAttribute(attributeName)) {\n            currentAttributes[attributeName] = false\n          }\n        }\n      })\n\n      if (!objectsAreEqual(currentAttributes, this.currentAttributes)) {\n        this.currentAttributes = currentAttributes\n        return this.notifyDelegateOfCurrentAttributesChange()\n      }\n    }\n  }\n\n  getCurrentAttributes() {\n    return extend.call({}, this.currentAttributes)\n  }\n\n  getCurrentTextAttributes() {\n    const attributes = {}\n    for (const key in this.currentAttributes) {\n      const value = this.currentAttributes[key]\n      if (value !== false) {\n        if (getTextConfig(key)) {\n          attributes[key] = value\n        }\n      }\n    }\n    return attributes\n  }\n\n  // Selection freezing\n\n  freezeSelection() {\n    return this.setCurrentAttribute(\"frozen\", true)\n  }\n\n  thawSelection() {\n    return this.removeCurrentAttribute(\"frozen\")\n  }\n\n  hasFrozenSelection() {\n    return this.hasCurrentAttribute(\"frozen\")\n  }\n\n  setSelection(selectedRange) {\n    const locationRange = this.document.locationRangeFromRange(selectedRange)\n    return this.delegate?.compositionDidRequestChangingSelectionToLocationRange(locationRange)\n  }\n\n  getSelectedRange() {\n    const locationRange = this.getLocationRange()\n    if (locationRange) {\n      return this.document.rangeFromLocationRange(locationRange)\n    }\n  }\n\n  setSelectedRange(selectedRange) {\n    const locationRange = this.document.locationRangeFromRange(selectedRange)\n    return this.getSelectionManager().setLocationRange(locationRange)\n  }\n\n  getPosition() {\n    const locationRange = this.getLocationRange()\n    if (locationRange) {\n      return this.document.positionFromLocation(locationRange[0])\n    }\n  }\n\n  getLocationRange(options) {\n    if (this.targetLocationRange) {\n      return this.targetLocationRange\n    } else {\n      return this.getSelectionManager().getLocationRange(options) || normalizeRange({ index: 0, offset: 0 })\n    }\n  }\n\n  withTargetLocationRange(locationRange, fn) {\n    let result\n    this.targetLocationRange = locationRange\n    try {\n      result = fn()\n    } finally {\n      this.targetLocationRange = null\n    }\n    return result\n  }\n\n  withTargetRange(range, fn) {\n    const locationRange = this.document.locationRangeFromRange(range)\n    return this.withTargetLocationRange(locationRange, fn)\n  }\n\n  withTargetDOMRange(domRange, fn) {\n    const locationRange = this.createLocationRangeFromDOMRange(domRange, { strict: false })\n    return this.withTargetLocationRange(locationRange, fn)\n  }\n\n  getExpandedRangeInDirection(direction, { length } = {}) {\n    let [ startPosition, endPosition ] = Array.from(this.getSelectedRange())\n    if (direction === \"backward\") {\n      if (length) {\n        startPosition -= length\n      } else {\n        startPosition = this.translateUTF16PositionFromOffset(startPosition, -1)\n      }\n    } else {\n      if (length) {\n        endPosition += length\n      } else {\n        endPosition = this.translateUTF16PositionFromOffset(endPosition, 1)\n      }\n    }\n    return normalizeRange([ startPosition, endPosition ])\n  }\n\n  shouldManageMovingCursorInDirection(direction) {\n    if (this.editingAttachment) {\n      return true\n    }\n    const range = this.getExpandedRangeInDirection(direction)\n    return this.getAttachmentAtRange(range) != null\n  }\n\n  moveCursorInDirection(direction) {\n    let canEditAttachment, range\n    if (this.editingAttachment) {\n      range = this.document.getRangeOfAttachment(this.editingAttachment)\n    } else {\n      const selectedRange = this.getSelectedRange()\n      range = this.getExpandedRangeInDirection(direction)\n      canEditAttachment = !rangesAreEqual(selectedRange, range)\n    }\n\n    if (direction === \"backward\") {\n      this.setSelectedRange(range[0])\n    } else {\n      this.setSelectedRange(range[1])\n    }\n\n    if (canEditAttachment) {\n      const attachment = this.getAttachmentAtRange(range)\n      if (attachment) {\n        return this.editAttachment(attachment)\n      }\n    }\n  }\n\n  expandSelectionInDirection(direction, { length } = {}) {\n    const range = this.getExpandedRangeInDirection(direction, { length })\n    return this.setSelectedRange(range)\n  }\n\n  expandSelectionForEditing() {\n    if (this.hasCurrentAttribute(\"href\")) {\n      return this.expandSelectionAroundCommonAttribute(\"href\")\n    }\n  }\n\n  expandSelectionAroundCommonAttribute(attributeName) {\n    const position = this.getPosition()\n    const range = this.document.getRangeOfCommonAttributeAtPosition(attributeName, position)\n    return this.setSelectedRange(range)\n  }\n\n  selectionContainsAttachments() {\n    return this.getSelectedAttachments()?.length > 0\n  }\n\n  selectionIsInCursorTarget() {\n    return this.editingAttachment || this.positionIsCursorTarget(this.getPosition())\n  }\n\n  positionIsCursorTarget(position) {\n    const location = this.document.locationFromPosition(position)\n    if (location) {\n      return this.locationIsCursorTarget(location)\n    }\n  }\n\n  positionIsBlockBreak(position) {\n    return this.document.getPieceAtPosition(position)?.isBlockBreak()\n  }\n\n  getSelectedDocument() {\n    const selectedRange = this.getSelectedRange()\n    if (selectedRange) {\n      return this.document.getDocumentAtRange(selectedRange)\n    }\n  }\n\n  getSelectedAttachments() {\n    return this.getSelectedDocument()?.getAttachments()\n  }\n\n  // Attachments\n\n  getAttachments() {\n    return this.attachments.slice(0)\n  }\n\n  refreshAttachments() {\n    const attachments = this.document.getAttachments()\n    const { added, removed } = summarizeArrayChange(this.attachments, attachments)\n    this.attachments = attachments\n\n    Array.from(removed).forEach((attachment) => {\n      attachment.delegate = null\n      this.delegate?.compositionDidRemoveAttachment?.(attachment)\n    })\n\n    return (() => {\n      const result = []\n\n      Array.from(added).forEach((attachment) => {\n        attachment.delegate = this\n        result.push(this.delegate?.compositionDidAddAttachment?.(attachment))\n      })\n\n      return result\n    })()\n  }\n\n  // Attachment delegate\n\n  attachmentDidChangeAttributes(attachment) {\n    this.revision++\n    return this.delegate?.compositionDidEditAttachment?.(attachment)\n  }\n\n  attachmentDidChangePreviewURL(attachment) {\n    this.revision++\n    return this.delegate?.compositionDidChangeAttachmentPreviewURL?.(attachment)\n  }\n\n  // Attachment editing\n\n  editAttachment(attachment, options) {\n    if (attachment === this.editingAttachment) return\n    this.stopEditingAttachment()\n    this.editingAttachment = attachment\n    return this.delegate?.compositionDidStartEditingAttachment?.(this.editingAttachment, options)\n  }\n\n  stopEditingAttachment() {\n    if (!this.editingAttachment) return\n    this.delegate?.compositionDidStopEditingAttachment?.(this.editingAttachment)\n    this.editingAttachment = null\n  }\n\n  updateAttributesForAttachment(attributes, attachment) {\n    return this.setDocument(this.document.updateAttributesForAttachment(attributes, attachment))\n  }\n\n  removeAttributeForAttachment(attribute, attachment) {\n    return this.setDocument(this.document.removeAttributeForAttachment(attribute, attachment))\n  }\n\n  // Private\n\n  breakFormattedBlock(insertion) {\n    let { document } = insertion\n    const { block } = insertion\n    let position = insertion.startPosition\n    let range = [ position - 1, position ]\n\n    if (block.getBlockBreakPosition() === insertion.startLocation.offset) {\n      if (block.breaksOnReturn() && insertion.nextCharacter === \"\\n\") {\n        position += 1\n      } else {\n        document = document.removeTextAtRange(range)\n      }\n      range = [ position, position ]\n    } else if (insertion.nextCharacter === \"\\n\") {\n      if (insertion.previousCharacter === \"\\n\") {\n        range = [ position - 1, position + 1 ]\n      } else {\n        range = [ position, position + 1 ]\n        position += 1\n      }\n    } else if (insertion.startLocation.offset - 1 !== 0) {\n      position += 1\n    }\n\n    const newDocument = new Document([ block.removeLastAttribute().copyWithoutText() ])\n    this.setDocument(document.insertDocumentAtRange(newDocument, range))\n    return this.setSelection(position)\n  }\n\n  getPreviousBlock() {\n    const locationRange = this.getLocationRange()\n    if (locationRange) {\n      const { index } = locationRange[0]\n      if (index > 0) {\n        return this.document.getBlockAtIndex(index - 1)\n      }\n    }\n  }\n\n  getBlock() {\n    const locationRange = this.getLocationRange()\n    if (locationRange) {\n      return this.document.getBlockAtIndex(locationRange[0].index)\n    }\n  }\n\n  getAttachmentAtRange(range) {\n    const document = this.document.getDocumentAtRange(range)\n    if (document.toString() === `${OBJECT_REPLACEMENT_CHARACTER}\\n`) {\n      return document.getAttachments()[0]\n    }\n  }\n\n  notifyDelegateOfCurrentAttributesChange() {\n    return this.delegate?.compositionDidChangeCurrentAttributes?.(this.currentAttributes)\n  }\n\n  notifyDelegateOfInsertionAtRange(range) {\n    return this.delegate?.compositionDidPerformInsertionAtRange?.(range)\n  }\n\n  translateUTF16PositionFromOffset(position, offset) {\n    const utf16string = this.document.toUTF16String()\n    const utf16position = utf16string.offsetFromUCS2Offset(position)\n    return utf16string.offsetToUCS2Offset(utf16position + offset)\n  }\n}\n\nComposition.proxyMethod(\"getSelectionManager().getPointRange\")\nComposition.proxyMethod(\"getSelectionManager().setLocationRangeFromPointRange\")\nComposition.proxyMethod(\"getSelectionManager().createLocationRangeFromDOMRange\")\nComposition.proxyMethod(\"getSelectionManager().locationIsCursorTarget\")\nComposition.proxyMethod(\"getSelectionManager().selectionIsExpanded\")\nComposition.proxyMethod(\"delegate?.getSelectionManager\")\n", "import BasicObject from \"trix/core/basic_object\"\n\nexport default class UndoManager extends BasicObject {\n  constructor(composition) {\n    super(...arguments)\n    this.composition = composition\n    this.undoEntries = []\n    this.redoEntries = []\n  }\n\n  recordUndoEntry(description, { context, consolidatable } = {}) {\n    const previousEntry = this.undoEntries.slice(-1)[0]\n\n    if (!consolidatable || !entryHasDescriptionAndContext(previousEntry, description, context)) {\n      const undoEntry = this.createEntry({ description, context })\n      this.undoEntries.push(undoEntry)\n      this.redoEntries = []\n    }\n  }\n\n  undo() {\n    const undoEntry = this.undoEntries.pop()\n    if (undoEntry) {\n      const redoEntry = this.createEntry(undoEntry)\n      this.redoEntries.push(redoEntry)\n      return this.composition.loadSnapshot(undoEntry.snapshot)\n    }\n  }\n\n  redo() {\n    const redoEntry = this.redoEntries.pop()\n    if (redoEntry) {\n      const undoEntry = this.createEntry(redoEntry)\n      this.undoEntries.push(undoEntry)\n      return this.composition.loadSnapshot(redoEntry.snapshot)\n    }\n  }\n\n  canUndo() {\n    return this.undoEntries.length > 0\n  }\n\n  canRedo() {\n    return this.redoEntries.length > 0\n  }\n\n  // Private\n\n  createEntry({ description, context } = {}) {\n    return {\n      description: description?.toString(),\n      context: JSON.stringify(context),\n      snapshot: this.composition.getSnapshot(),\n    }\n  }\n}\n\nconst entryHasDescriptionAndContext = (entry, description, context) =>\n  entry?.description === description?.toString() && entry?.context === JSON.stringify(context)\n", "const BLOCK_ATTRIBUTE_NAME = \"attachmentGallery\"\nconst TEXT_ATTRIBUTE_NAME = \"presentation\"\nconst TEXT_ATTRIBUTE_VALUE = \"gallery\"\n\nexport default class Filter {\n  constructor(snapshot) {\n    this.document = snapshot.document\n    this.selectedRange = snapshot.selectedRange\n  }\n\n  perform() {\n    this.removeBlockAttribute()\n    return this.applyBlockAttribute()\n  }\n\n  getSnapshot() {\n    return { document: this.document, selectedRange: this.selectedRange }\n  }\n\n  // Private\n\n  removeBlockAttribute() {\n    return this.findRangesOfBlocks().map((range) => this.document = this.document.removeAttributeAtRange(BLOCK_ATTRIBUTE_NAME, range))\n  }\n\n  applyBlockAttribute() {\n    let offset = 0\n\n    this.findRangesOfPieces().forEach((range) => {\n      if (range[1] - range[0] > 1) {\n        range[0] += offset\n        range[1] += offset\n\n        if (this.document.getCharacterAtPosition(range[1]) !== \"\\n\") {\n          this.document = this.document.insertBlockBreakAtRange(range[1])\n          if (range[1] < this.selectedRange[1]) {\n            this.moveSelectedRangeForward()\n          }\n          range[1]++\n          offset++\n        }\n\n        if (range[0] !== 0) {\n          if (this.document.getCharacterAtPosition(range[0] - 1) !== \"\\n\") {\n            this.document = this.document.insertBlockBreakAtRange(range[0])\n            if (range[0] < this.selectedRange[0]) {\n              this.moveSelectedRangeForward()\n            }\n            range[0]++\n            offset++\n          }\n        }\n\n        this.document = this.document.applyBlockAttributeAtRange(BLOCK_ATTRIBUTE_NAME, true, range)\n      }\n    })\n  }\n\n  findRangesOfBlocks() {\n    return this.document.findRangesForBlockAttribute(BLOCK_ATTRIBUTE_NAME)\n  }\n\n  findRangesOfPieces() {\n    return this.document.findRangesForTextAttribute(TEXT_ATTRIBUTE_NAME, { withValue: TEXT_ATTRIBUTE_VALUE })\n  }\n\n  moveSelectedRangeForward() {\n    this.selectedRange[0] += 1\n    this.selectedRange[1] += 1\n  }\n}\n", "import Filter from \"./filter\"\n\nexport const attachmentGalleryFilter = function(snapshot) {\n  const filter = new Filter(snapshot)\n  filter.perform()\n  return filter.getSnapshot()\n}\n\n", "import Document from \"trix/models/document\"\nimport HTMLParser from \"trix/models/html_parser\"\n\nimport UndoManager from \"trix/models/undo_manager\"\nimport { attachmentGalleryFilter } from \"trix/filters/attachment_gallery_filter\"\nconst DEFAULT_FILTERS = [ attachmentGalleryFilter ]\n\nexport default class Editor {\n  constructor(composition, selectionManager, element) {\n    this.insertFiles = this.insertFiles.bind(this)\n    this.composition = composition\n    this.selectionManager = selectionManager\n    this.element = element\n    this.undoManager = new UndoManager(this.composition)\n    this.filters = DEFAULT_FILTERS.slice(0)\n  }\n\n  loadDocument(document) {\n    return this.loadSnapshot({ document, selectedRange: [ 0, 0 ] })\n  }\n\n  loadHTML(html = \"\") {\n    const document = HTMLParser.parse(html, { referenceElement: this.element }).getDocument()\n    return this.loadDocument(document)\n  }\n\n  loadJSON({ document, selectedRange }) {\n    document = Document.fromJSON(document)\n    return this.loadSnapshot({ document, selectedRange })\n  }\n\n  loadSnapshot(snapshot) {\n    this.undoManager = new UndoManager(this.composition)\n    return this.composition.loadSnapshot(snapshot)\n  }\n\n  getDocument() {\n    return this.composition.document\n  }\n\n  getSelectedDocument() {\n    return this.composition.getSelectedDocument()\n  }\n\n  getSnapshot() {\n    return this.composition.getSnapshot()\n  }\n\n  toJSON() {\n    return this.getSnapshot()\n  }\n\n  // Document manipulation\n\n  deleteInDirection(direction) {\n    return this.composition.deleteInDirection(direction)\n  }\n\n  insertAttachment(attachment) {\n    return this.composition.insertAttachment(attachment)\n  }\n\n  insertAttachments(attachments) {\n    return this.composition.insertAttachments(attachments)\n  }\n\n  insertDocument(document) {\n    return this.composition.insertDocument(document)\n  }\n\n  insertFile(file) {\n    return this.composition.insertFile(file)\n  }\n\n  insertFiles(files) {\n    return this.composition.insertFiles(files)\n  }\n\n  insertHTML(html) {\n    return this.composition.insertHTML(html)\n  }\n\n  insertString(string) {\n    return this.composition.insertString(string)\n  }\n\n  insertText(text) {\n    return this.composition.insertText(text)\n  }\n\n  insertLineBreak() {\n    return this.composition.insertLineBreak()\n  }\n\n  // Selection\n\n  getSelectedRange() {\n    return this.composition.getSelectedRange()\n  }\n\n  getPosition() {\n    return this.composition.getPosition()\n  }\n\n  getClientRectAtPosition(position) {\n    const locationRange = this.getDocument().locationRangeFromRange([ position, position + 1 ])\n    return this.selectionManager.getClientRectAtLocationRange(locationRange)\n  }\n\n  expandSelectionInDirection(direction) {\n    return this.composition.expandSelectionInDirection(direction)\n  }\n\n  moveCursorInDirection(direction) {\n    return this.composition.moveCursorInDirection(direction)\n  }\n\n  setSelectedRange(selectedRange) {\n    return this.composition.setSelectedRange(selectedRange)\n  }\n\n  // Attributes\n\n  activateAttribute(name, value = true) {\n    return this.composition.setCurrentAttribute(name, value)\n  }\n\n  attributeIsActive(name) {\n    return this.composition.hasCurrentAttribute(name)\n  }\n\n  canActivateAttribute(name) {\n    return this.composition.canSetCurrentAttribute(name)\n  }\n\n  deactivateAttribute(name) {\n    return this.composition.removeCurrentAttribute(name)\n  }\n\n  // HTML attributes\n  setHTMLAtributeAtPosition(position, name, value) {\n    this.composition.setHTMLAtributeAtPosition(position, name, value)\n  }\n\n  // Nesting level\n\n  canDecreaseNestingLevel() {\n    return this.composition.canDecreaseNestingLevel()\n  }\n\n  canIncreaseNestingLevel() {\n    return this.composition.canIncreaseNestingLevel()\n  }\n\n  decreaseNestingLevel() {\n    if (this.canDecreaseNestingLevel()) {\n      return this.composition.decreaseNestingLevel()\n    }\n  }\n\n  increaseNestingLevel() {\n    if (this.canIncreaseNestingLevel()) {\n      return this.composition.increaseNestingLevel()\n    }\n  }\n\n  // Undo/redo\n\n  canRedo() {\n    return this.undoManager.canRedo()\n  }\n\n  canUndo() {\n    return this.undoManager.canUndo()\n  }\n\n  recordUndoEntry(description, { context, consolidatable } = {}) {\n    return this.undoManager.recordUndoEntry(description, { context, consolidatable })\n  }\n\n  redo() {\n    if (this.canRedo()) {\n      return this.undoManager.redo()\n    }\n  }\n\n  undo() {\n    if (this.canUndo()) {\n      return this.undoManager.undo()\n    }\n  }\n}\n", "/* eslint-disable\n    no-var,\n    prefer-const,\n*/\nimport {\n  elementContainsNode,\n  findChildIndexOfNode,\n  nodeIsAttachmentElement,\n  nodeIsBlockContainer,\n  nodeIsBlockStart,\n  nodeIsBlockStartComment,\n  nodeIsCursorTarget,\n  nodeIsEmptyTextNode,\n  nodeIsTextNode,\n  tagName,\n  walkTree,\n} from \"trix/core/helpers\"\n\nexport default class LocationMapper {\n  constructor(element) {\n    this.element = element\n  }\n\n  findLocationFromContainerAndOffset(container, offset, { strict } = { strict: true }) {\n    let childIndex = 0\n    let foundBlock = false\n    const location = { index: 0, offset: 0 }\n    const attachmentElement = this.findAttachmentElementParentForNode(container)\n\n    if (attachmentElement) {\n      container = attachmentElement.parentNode\n      offset = findChildIndexOfNode(attachmentElement)\n    }\n\n    const walker = walkTree(this.element, { usingFilter: rejectAttachmentContents })\n\n    while (walker.nextNode()) {\n      const node = walker.currentNode\n\n      if (node === container && nodeIsTextNode(container)) {\n        if (!nodeIsCursorTarget(node)) {\n          location.offset += offset\n        }\n        break\n      } else {\n        if (node.parentNode === container) {\n          if (childIndex++ === offset) {\n            break\n          }\n        } else if (!elementContainsNode(container, node)) {\n          if (childIndex > 0) {\n            break\n          }\n        }\n\n        if (nodeIsBlockStart(node, { strict })) {\n          if (foundBlock) {\n            location.index++\n          }\n          location.offset = 0\n          foundBlock = true\n        } else {\n          location.offset += nodeLength(node)\n        }\n      }\n    }\n\n    return location\n  }\n\n  findContainerAndOffsetFromLocation(location) {\n    let container, offset\n    if (location.index === 0 && location.offset === 0) {\n      container = this.element\n      offset = 0\n\n      while (container.firstChild) {\n        container = container.firstChild\n        if (nodeIsBlockContainer(container)) {\n          offset = 1\n          break\n        }\n      }\n\n      return [ container, offset ]\n    }\n\n    let [ node, nodeOffset ] = this.findNodeAndOffsetFromLocation(location)\n    if (!node) return\n\n    if (nodeIsTextNode(node)) {\n      if (nodeLength(node) === 0) {\n        container = node.parentNode.parentNode\n        offset = findChildIndexOfNode(node.parentNode)\n        if (nodeIsCursorTarget(node, { name: \"right\" })) {\n          offset++\n        }\n      } else {\n        container = node\n        offset = location.offset - nodeOffset\n      }\n    } else {\n      container = node.parentNode\n\n      if (!nodeIsBlockStart(node.previousSibling)) {\n        if (!nodeIsBlockContainer(container)) {\n          while (node === container.lastChild) {\n            node = container\n            container = container.parentNode\n            if (nodeIsBlockContainer(container)) {\n              break\n            }\n          }\n        }\n      }\n\n      offset = findChildIndexOfNode(node)\n      if (location.offset !== 0) {\n        offset++\n      }\n    }\n\n    return [ container, offset ]\n  }\n\n  findNodeAndOffsetFromLocation(location) {\n    let node, nodeOffset\n    let offset = 0\n\n    for (const currentNode of this.getSignificantNodesForIndex(location.index)) {\n      const length = nodeLength(currentNode)\n\n      if (location.offset <= offset + length) {\n        if (nodeIsTextNode(currentNode)) {\n          node = currentNode\n          nodeOffset = offset\n          if (location.offset === nodeOffset && nodeIsCursorTarget(node)) {\n            break\n          }\n        } else if (!node) {\n          node = currentNode\n          nodeOffset = offset\n        }\n      }\n\n      offset += length\n      if (offset > location.offset) {\n        break\n      }\n    }\n\n    return [ node, nodeOffset ]\n  }\n\n  // Private\n\n  findAttachmentElementParentForNode(node) {\n    while (node && node !== this.element) {\n      if (nodeIsAttachmentElement(node)) {\n        return node\n      }\n      node = node.parentNode\n    }\n  }\n\n  getSignificantNodesForIndex(index) {\n    const nodes = []\n    const walker = walkTree(this.element, { usingFilter: acceptSignificantNodes })\n    let recordingNodes = false\n\n    while (walker.nextNode()) {\n      const node = walker.currentNode\n      if (nodeIsBlockStartComment(node)) {\n        var blockIndex\n        if (blockIndex != null) {\n          blockIndex++\n        } else {\n          blockIndex = 0\n        }\n\n        if (blockIndex === index) {\n          recordingNodes = true\n        } else if (recordingNodes) {\n          break\n        }\n      } else if (recordingNodes) {\n        nodes.push(node)\n      }\n    }\n\n    return nodes\n  }\n}\n\nconst nodeLength = function(node) {\n  if (node.nodeType === Node.TEXT_NODE) {\n    if (nodeIsCursorTarget(node)) {\n      return 0\n    } else {\n      const string = node.textContent\n      return string.length\n    }\n  } else if (tagName(node) === \"br\" || nodeIsAttachmentElement(node)) {\n    return 1\n  } else {\n    return 0\n  }\n}\n\nconst acceptSignificantNodes = function(node) {\n  if (rejectEmptyTextNodes(node) === NodeFilter.FILTER_ACCEPT) {\n    return rejectAttachmentContents(node)\n  } else {\n    return NodeFilter.FILTER_REJECT\n  }\n}\n\nconst rejectEmptyTextNodes = function(node) {\n  if (nodeIsEmptyTextNode(node)) {\n    return NodeFilter.FILTER_REJECT\n  } else {\n    return NodeFilter.FILTER_ACCEPT\n  }\n}\n\nconst rejectAttachmentContents = function(node) {\n  if (nodeIsAttachmentElement(node.parentNode)) {\n    return NodeFilter.FILTER_REJECT\n  } else {\n    return NodeFilter.FILTER_ACCEPT\n  }\n}\n", "/* eslint-disable\n    id-length,\n    no-empty,\n*/\nimport { getDOMRange, setDOMRange } from \"trix/core/helpers\"\n\nexport default class PointMapper {\n  createDOMRangeFromPoint({ x, y }) {\n    let domRange\n    if (document.caretPositionFromPoint) {\n      const { offsetNode, offset } = document.caretPositionFromPoint(x, y)\n      domRange = document.createRange()\n      domRange.setStart(offsetNode, offset)\n      return domRange\n    } else if (document.caretRangeFromPoint) {\n      return document.caretRangeFromPoint(x, y)\n    } else if (document.body.createTextRange) {\n      const originalDOMRange = getDOMRange()\n      try {\n        // IE 11 throws \"Unspecified error\" when using moveToPoint\n        // during a drag-and-drop operation.\n        const textRange = document.body.createTextRange()\n        textRange.moveToPoint(x, y)\n        textRange.select()\n      } catch (error) {}\n      domRange = getDOMRange()\n      setDOMRange(originalDOMRange)\n      return domRange\n    }\n  }\n\n  getClientRectsForDOMRange(domRange) {\n    const array = Array.from(domRange.getClientRects())\n    const start = array[0]\n    const end = array[array.length - 1]\n\n    return [ start, end ]\n  }\n}\n", "/* eslint-disable\n*/\nimport BasicObject from \"trix/core/basic_object\"\n\nimport LocationMapper from \"trix/models/location_mapper\"\nimport PointMapper from \"trix/models/point_mapper\"\n\nimport {\n  elementContainsNode,\n  getDOMRange,\n  getDOMSelection,\n  handleEvent,\n  innerElementIsActive,\n  nodeIsCursorTarget,\n  normalizeRange,\n  rangeIsCollapsed,\n  rangesAreEqual,\n  setDOMRange,\n} from \"trix/core/helpers\"\n\nexport default class SelectionManager extends BasicObject {\n  constructor(element) {\n    super(...arguments)\n    this.didMouseDown = this.didMouseDown.bind(this)\n    this.selectionDidChange = this.selectionDidChange.bind(this)\n    this.element = element\n    this.locationMapper = new LocationMapper(this.element)\n    this.pointMapper = new PointMapper()\n    this.lockCount = 0\n    handleEvent(\"mousedown\", { onElement: this.element, withCallback: this.didMouseDown })\n  }\n\n  getLocationRange(options = {}) {\n    if (options.strict === false) {\n      return this.createLocationRangeFromDOMRange(getDOMRange())\n    } else if (options.ignoreLock) {\n      return this.currentLocationRange\n    } else if (this.lockedLocationRange) {\n      return this.lockedLocationRange\n    } else {\n      return this.currentLocationRange\n    }\n  }\n\n  setLocationRange(locationRange) {\n    if (this.lockedLocationRange) return\n    locationRange = normalizeRange(locationRange)\n\n    const domRange = this.createDOMRangeFromLocationRange(locationRange)\n    if (domRange) {\n      setDOMRange(domRange)\n      this.updateCurrentLocationRange(locationRange)\n    }\n  }\n\n  setLocationRangeFromPointRange(pointRange) {\n    pointRange = normalizeRange(pointRange)\n    const startLocation = this.getLocationAtPoint(pointRange[0])\n    const endLocation = this.getLocationAtPoint(pointRange[1])\n    this.setLocationRange([ startLocation, endLocation ])\n  }\n\n  getClientRectAtLocationRange(locationRange) {\n    const domRange = this.createDOMRangeFromLocationRange(locationRange)\n    if (domRange) {\n      return this.getClientRectsForDOMRange(domRange)[1]\n    }\n  }\n\n  locationIsCursorTarget(location) {\n    const node = Array.from(this.findNodeAndOffsetFromLocation(location))[0]\n    return nodeIsCursorTarget(node)\n  }\n\n  lock() {\n    if (this.lockCount++ === 0) {\n      this.updateCurrentLocationRange()\n      this.lockedLocationRange = this.getLocationRange()\n    }\n  }\n\n  unlock() {\n    if (--this.lockCount === 0) {\n      const { lockedLocationRange } = this\n      this.lockedLocationRange = null\n      if (lockedLocationRange != null) {\n        return this.setLocationRange(lockedLocationRange)\n      }\n    }\n  }\n\n  clearSelection() {\n    return getDOMSelection()?.removeAllRanges()\n  }\n\n  selectionIsCollapsed() {\n    return getDOMRange()?.collapsed === true\n  }\n\n  selectionIsExpanded() {\n    return !this.selectionIsCollapsed()\n  }\n\n  createLocationRangeFromDOMRange(domRange, options) {\n    if (domRange == null || !this.domRangeWithinElement(domRange)) return\n\n    const start = this.findLocationFromContainerAndOffset(domRange.startContainer, domRange.startOffset, options)\n    if (!start) return\n\n    const end = domRange.collapsed\n      ? undefined\n      : this.findLocationFromContainerAndOffset(domRange.endContainer, domRange.endOffset, options)\n\n    return normalizeRange([ start, end ])\n  }\n\n  didMouseDown() {\n    return this.pauseTemporarily()\n  }\n\n  pauseTemporarily() {\n    let resumeHandlers\n    this.paused = true\n\n    const resume = () => {\n      this.paused = false\n      clearTimeout(resumeTimeout)\n\n      Array.from(resumeHandlers).forEach((handler) => {\n        handler.destroy()\n      })\n\n      if (elementContainsNode(document, this.element)) {\n        return this.selectionDidChange()\n      }\n    }\n\n    const resumeTimeout = setTimeout(resume, 200)\n\n    resumeHandlers = [ \"mousemove\", \"keydown\" ].map((eventName) =>\n      handleEvent(eventName, { onElement: document, withCallback: resume })\n    )\n  }\n\n  selectionDidChange() {\n    if (!this.paused && !innerElementIsActive(this.element)) {\n      return this.updateCurrentLocationRange()\n    }\n  }\n\n  updateCurrentLocationRange(locationRange) {\n    if (locationRange != null ? locationRange : locationRange = this.createLocationRangeFromDOMRange(getDOMRange())) {\n      if (!rangesAreEqual(locationRange, this.currentLocationRange)) {\n        this.currentLocationRange = locationRange\n        return this.delegate?.locationRangeDidChange?.(this.currentLocationRange.slice(0))\n      }\n    }\n  }\n\n  createDOMRangeFromLocationRange(locationRange) {\n    const rangeStart = this.findContainerAndOffsetFromLocation(locationRange[0])\n    const rangeEnd = rangeIsCollapsed(locationRange)\n      ? rangeStart\n      : this.findContainerAndOffsetFromLocation(locationRange[1]) || rangeStart\n\n    if (rangeStart != null && rangeEnd != null) {\n      const domRange = document.createRange()\n      domRange.setStart(...Array.from(rangeStart || []))\n      domRange.setEnd(...Array.from(rangeEnd || []))\n      return domRange\n    }\n  }\n\n  getLocationAtPoint(point) {\n    const domRange = this.createDOMRangeFromPoint(point)\n    if (domRange) {\n      return this.createLocationRangeFromDOMRange(domRange)?.[0]\n    }\n  }\n\n  domRangeWithinElement(domRange) {\n    if (domRange.collapsed) {\n      return elementContainsNode(this.element, domRange.startContainer)\n    } else {\n      return (\n        elementContainsNode(this.element, domRange.startContainer) &&\n        elementContainsNode(this.element, domRange.endContainer)\n      )\n    }\n  }\n}\n\nSelectionManager.proxyMethod(\"locationMapper.findLocationFromContainerAndOffset\")\nSelectionManager.proxyMethod(\"locationMapper.findContainerAndOffsetFromLocation\")\nSelectionManager.proxyMethod(\"locationMapper.findNodeAndOffsetFromLocation\")\nSelectionManager.proxyMethod(\"pointMapper.createDOMRangeFromPoint\")\nSelectionManager.proxyMethod(\"pointMapper.getClientRectsForDOMRange\")\n\n", "import { removeNode } from \"trix/core/helpers\"\n\nimport * as config from \"trix/config\"\nimport BasicObject from \"trix/core/basic_object\"\n\nimport { defer, handleEvent, makeElement, tagName, triggerEvent } from \"trix/core/helpers\"\nconst { lang, css, keyNames } = config\n\nconst undoable = function(fn) {\n  return function() {\n    const commands = fn.apply(this, arguments)\n    commands.do()\n    if (!this.undos) {\n      this.undos = []\n    }\n    this.undos.push(commands.undo)\n  }\n}\n\nexport default class AttachmentEditorController extends BasicObject {\n  constructor(attachmentPiece, element, container, options = {}) {\n    super(...arguments)\n    this.didClickToolbar = this.didClickToolbar.bind(this)\n    this.didClickActionButton = this.didClickActionButton.bind(this)\n    this.didKeyDownCaption = this.didKeyDownCaption.bind(this)\n    this.didInputCaption = this.didInputCaption.bind(this)\n    this.didChangeCaption = this.didChangeCaption.bind(this)\n    this.didBlurCaption = this.didBlurCaption.bind(this)\n    this.attachmentPiece = attachmentPiece\n    this.element = element\n    this.container = container\n    this.options = options\n    this.attachment = this.attachmentPiece.attachment\n    if (tagName(this.element) === \"a\") {\n      this.element = this.element.firstChild\n    }\n    this.install()\n  }\n\n  install() {\n    this.makeElementMutable()\n    this.addToolbar()\n    if (this.attachment.isPreviewable()) {\n      this.installCaptionEditor()\n    }\n  }\n\n  uninstall() {\n    let undo = this.undos.pop()\n    this.savePendingCaption()\n    while (undo) {\n      undo()\n      undo = this.undos.pop()\n    }\n    this.delegate?.didUninstallAttachmentEditor(this)\n  }\n\n  // Private\n\n  savePendingCaption() {\n    if (this.pendingCaption != null) {\n      const caption = this.pendingCaption\n      this.pendingCaption = null\n      if (caption) {\n        this.delegate?.attachmentEditorDidRequestUpdatingAttributesForAttachment?.({ caption }, this.attachment)\n      } else {\n        this.delegate?.attachmentEditorDidRequestRemovingAttributeForAttachment?.(\"caption\", this.attachment)\n      }\n    }\n  }\n\n  // Installing and uninstalling\n\n  makeElementMutable = undoable(() => {\n    return {\n      do: () => {\n        this.element.dataset.trixMutable = true\n      },\n      undo: () => delete this.element.dataset.trixMutable,\n    }\n  })\n\n  addToolbar = undoable(() => {\n    // <div class=\"#{css.attachmentMetadataContainer}\" data-trix-mutable=\"true\">\n    //   <div class=\"trix-button-row\">\n    //     <span class=\"trix-button-group trix-button-group--actions\">\n    //       <button type=\"button\" class=\"trix-button trix-button--remove\" title=\"#{lang.remove}\" data-trix-action=\"remove\">#{lang.remove}</button>\n    //     </span>\n    //   </div>\n    // </div>\n    const element = makeElement({\n      tagName: \"div\",\n      className: css.attachmentToolbar,\n      data: { trixMutable: true },\n      childNodes: makeElement({\n        tagName: \"div\",\n        className: \"trix-button-row\",\n        childNodes: makeElement({\n          tagName: \"span\",\n          className: \"trix-button-group trix-button-group--actions\",\n          childNodes: makeElement({\n            tagName: \"button\",\n            className: \"trix-button trix-button--remove\",\n            textContent: lang.remove,\n            attributes: { title: lang.remove },\n            data: { trixAction: \"remove\" },\n          }),\n        }),\n      }),\n    })\n\n    if (this.attachment.isPreviewable()) {\n      // <div class=\"#{css.attachmentMetadataContainer}\">\n      //   <span class=\"#{css.attachmentMetadata}\">\n      //     <span class=\"#{css.attachmentName}\" title=\"#{name}\">#{name}</span>\n      //     <span class=\"#{css.attachmentSize}\">#{size}</span>\n      //   </span>\n      // </div>\n      element.appendChild(\n        makeElement({\n          tagName: \"div\",\n          className: css.attachmentMetadataContainer,\n          childNodes: makeElement({\n            tagName: \"span\",\n            className: css.attachmentMetadata,\n            childNodes: [\n              makeElement({\n                tagName: \"span\",\n                className: css.attachmentName,\n                textContent: this.attachment.getFilename(),\n                attributes: { title: this.attachment.getFilename() },\n              }),\n              makeElement({\n                tagName: \"span\",\n                className: css.attachmentSize,\n                textContent: this.attachment.getFormattedFilesize(),\n              }),\n            ],\n          }),\n        })\n      )\n    }\n\n    handleEvent(\"click\", { onElement: element, withCallback: this.didClickToolbar })\n    handleEvent(\"click\", {\n      onElement: element,\n      matchingSelector: \"[data-trix-action]\",\n      withCallback: this.didClickActionButton,\n    })\n\n    triggerEvent(\"trix-attachment-before-toolbar\", { onElement: this.element, attributes: { toolbar: element, attachment: this.attachment } })\n\n    return {\n      do: () => this.element.appendChild(element),\n      undo: () => removeNode(element),\n    }\n  })\n\n  installCaptionEditor = undoable(() => {\n    const textarea = makeElement({\n      tagName: \"textarea\",\n      className: css.attachmentCaptionEditor,\n      attributes: { placeholder: lang.captionPlaceholder },\n      data: { trixMutable: true },\n    })\n    textarea.value = this.attachmentPiece.getCaption()\n\n    const textareaClone = textarea.cloneNode()\n    textareaClone.classList.add(\"trix-autoresize-clone\")\n    textareaClone.tabIndex = -1\n\n    const autoresize = function() {\n      textareaClone.value = textarea.value\n      textarea.style.height = textareaClone.scrollHeight + \"px\"\n    }\n\n    handleEvent(\"input\", { onElement: textarea, withCallback: autoresize })\n    handleEvent(\"input\", { onElement: textarea, withCallback: this.didInputCaption })\n    handleEvent(\"keydown\", { onElement: textarea, withCallback: this.didKeyDownCaption })\n    handleEvent(\"change\", { onElement: textarea, withCallback: this.didChangeCaption })\n    handleEvent(\"blur\", { onElement: textarea, withCallback: this.didBlurCaption })\n\n    const figcaption = this.element.querySelector(\"figcaption\")\n    const editingFigcaption = figcaption.cloneNode()\n\n    return {\n      do: () => {\n        figcaption.style.display = \"none\"\n        editingFigcaption.appendChild(textarea)\n        editingFigcaption.appendChild(textareaClone)\n        editingFigcaption.classList.add(`${css.attachmentCaption}--editing`)\n        figcaption.parentElement.insertBefore(editingFigcaption, figcaption)\n        autoresize()\n        if (this.options.editCaption) {\n          return defer(() => textarea.focus())\n        }\n      },\n      undo() {\n        removeNode(editingFigcaption)\n        figcaption.style.display = null\n      },\n    }\n  })\n\n  // Event handlers\n\n  didClickToolbar(event) {\n    event.preventDefault()\n    return event.stopPropagation()\n  }\n\n  didClickActionButton(event) {\n    const action = event.target.getAttribute(\"data-trix-action\")\n    switch (action) {\n      case \"remove\":\n        return this.delegate?.attachmentEditorDidRequestRemovalOfAttachment(this.attachment)\n    }\n  }\n\n  didKeyDownCaption(event) {\n    if (keyNames[event.keyCode] === \"return\") {\n      event.preventDefault()\n      this.savePendingCaption()\n      return this.delegate?.attachmentEditorDidRequestDeselectingAttachment?.(this.attachment)\n    }\n  }\n\n  didInputCaption(event) {\n    this.pendingCaption = event.target.value.replace(/\\s/g, \" \").trim()\n  }\n\n  didChangeCaption(event) {\n    return this.savePendingCaption()\n  }\n\n  didBlurCaption(event) {\n    return this.savePendingCaption()\n  }\n}\n", "import BasicObject from \"trix/core/basic_object\"\nimport DocumentView from \"trix/views/document_view\"\nimport AttachmentEditorController from \"trix/controllers/attachment_editor_controller\"\n\nimport { defer, findClosestElementFromNode, handleEvent, innerElementIsActive } from \"trix/core/helpers\"\nimport { attachmentSelector } from \"trix/config/attachments\"\n\nexport default class CompositionController extends BasicObject {\n  constructor(element, composition) {\n    super(...arguments)\n    this.didFocus = this.didFocus.bind(this)\n    this.didBlur = this.didBlur.bind(this)\n    this.didClickAttachment = this.didClickAttachment.bind(this)\n\n    this.element = element\n    this.composition = composition\n    this.documentView = new DocumentView(this.composition.document, { element: this.element })\n\n    handleEvent(\"focus\", { onElement: this.element, withCallback: this.didFocus })\n    handleEvent(\"blur\", { onElement: this.element, withCallback: this.didBlur })\n    handleEvent(\"click\", {\n      onElement: this.element,\n      matchingSelector: \"a[contenteditable=false]\",\n      preventDefault: true,\n    })\n    handleEvent(\"mousedown\", {\n      onElement: this.element,\n      matchingSelector: attachmentSelector,\n      withCallback: this.didClickAttachment,\n    })\n    handleEvent(\"click\", { onElement: this.element, matchingSelector: `a${attachmentSelector}`, preventDefault: true })\n  }\n\n  didFocus(event) {\n    const perform = () => {\n      if (!this.focused) {\n        this.focused = true\n        return this.delegate?.compositionControllerDidFocus?.()\n      }\n    }\n\n    return this.blurPromise?.then(perform) || perform()\n  }\n\n  didBlur(event) {\n    this.blurPromise = new Promise((resolve) => {\n      return defer(() => {\n        if (!innerElementIsActive(this.element)) {\n          this.focused = null\n          this.delegate?.compositionControllerDidBlur?.()\n        }\n        this.blurPromise = null\n        return resolve()\n      })\n    })\n  }\n\n  didClickAttachment(event, target) {\n    const attachment = this.findAttachmentForElement(target)\n    const editCaption = !!findClosestElementFromNode(event.target, { matchingSelector: \"figcaption\" })\n    return this.delegate?.compositionControllerDidSelectAttachment?.(attachment, { editCaption })\n  }\n\n  getSerializableElement() {\n    if (this.isEditingAttachment()) {\n      return this.documentView.shadowElement\n    } else {\n      return this.element\n    }\n  }\n\n  render() {\n    if (this.revision !== this.composition.revision) {\n      this.documentView.setDocument(this.composition.document)\n      this.documentView.render()\n      this.revision = this.composition.revision\n    }\n\n    if (this.canSyncDocumentView() && !this.documentView.isSynced()) {\n      this.delegate?.compositionControllerWillSyncDocumentView?.()\n      this.documentView.sync()\n      this.delegate?.compositionControllerDidSyncDocumentView?.()\n    }\n\n    return this.delegate?.compositionControllerDidRender?.()\n  }\n\n  rerenderViewForObject(object) {\n    this.invalidateViewForObject(object)\n    return this.render()\n  }\n\n  invalidateViewForObject(object) {\n    return this.documentView.invalidateViewForObject(object)\n  }\n\n  isViewCachingEnabled() {\n    return this.documentView.isViewCachingEnabled()\n  }\n\n  enableViewCaching() {\n    return this.documentView.enableViewCaching()\n  }\n\n  disableViewCaching() {\n    return this.documentView.disableViewCaching()\n  }\n\n  refreshViewCache() {\n    return this.documentView.garbageCollectCachedViews()\n  }\n\n  // Attachment editor management\n\n  isEditingAttachment() {\n    return !!this.attachmentEditor\n  }\n\n  installAttachmentEditorForAttachment(attachment, options) {\n    if (this.attachmentEditor?.attachment === attachment) return\n    const element = this.documentView.findElementForObject(attachment)\n    if (!element) return\n\n    this.uninstallAttachmentEditor()\n    const attachmentPiece = this.composition.document.getAttachmentPieceForAttachment(attachment)\n    this.attachmentEditor = new AttachmentEditorController(attachmentPiece, element, this.element, options)\n    this.attachmentEditor.delegate = this\n  }\n\n  uninstallAttachmentEditor() {\n    return this.attachmentEditor?.uninstall()\n  }\n\n  // Attachment controller delegate\n\n  didUninstallAttachmentEditor() {\n    this.attachmentEditor = null\n    return this.render()\n  }\n\n  attachmentEditorDidRequestUpdatingAttributesForAttachment(attributes, attachment) {\n    this.delegate?.compositionControllerWillUpdateAttachment?.(attachment)\n    return this.composition.updateAttributesForAttachment(attributes, attachment)\n  }\n\n  attachmentEditorDidRequestRemovingAttributeForAttachment(attribute, attachment) {\n    this.delegate?.compositionControllerWillUpdateAttachment?.(attachment)\n    return this.composition.removeAttributeForAttachment(attribute, attachment)\n  }\n\n  attachmentEditorDidRequestRemovalOfAttachment(attachment) {\n    return this.delegate?.compositionControllerDidRequestRemovalOfAttachment?.(attachment)\n  }\n\n  attachmentEditorDidRequestDeselectingAttachment(attachment) {\n    return this.delegate?.compositionControllerDidRequestDeselectingAttachment?.(attachment)\n  }\n\n  // Private\n\n  canSyncDocumentView() {\n    return !this.isEditingAttachment()\n  }\n\n  findAttachmentForElement(element) {\n    return this.composition.document.getAttachmentById(parseInt(element.dataset.trixId, 10))\n  }\n}\n", "import \"trix/views/object_view\"\nimport BasicObject from \"trix/core/basic_object\"\n\nexport default class Controller extends BasicObject {}\n", "import BasicObject from \"trix/core/basic_object\"\n\nimport {\n  findClosestElementFromNode,\n  nodeIsBlockStartComment,\n  nodeIsEmptyTextNode,\n  normalizeSpaces,\n  summarizeStringChange,\n  tagName,\n} from \"trix/core/helpers\"\n\nconst mutableAttributeName = \"data-trix-mutable\"\nconst mutableSelector = `[${mutableAttributeName}]`\n\nconst options = {\n  attributes: true,\n  childList: true,\n  characterData: true,\n  characterDataOldValue: true,\n  subtree: true,\n}\n\nexport default class MutationObserver extends BasicObject {\n  constructor(element) {\n    super(element)\n    this.didMutate = this.didMutate.bind(this)\n    this.element = element\n    this.observer = new window.MutationObserver(this.didMutate)\n    this.start()\n  }\n\n  start() {\n    this.reset()\n    return this.observer.observe(this.element, options)\n  }\n\n  stop() {\n    return this.observer.disconnect()\n  }\n\n  didMutate(mutations) {\n    this.mutations.push(...Array.from(this.findSignificantMutations(mutations) || []))\n\n    if (this.mutations.length) {\n      this.delegate?.elementDidMutate?.(this.getMutationSummary())\n      return this.reset()\n    }\n  }\n\n  // Private\n\n  reset() {\n    this.mutations = []\n  }\n\n  findSignificantMutations(mutations) {\n    return mutations.filter((mutation) => {\n      return this.mutationIsSignificant(mutation)\n    })\n  }\n\n  mutationIsSignificant(mutation) {\n    if (this.nodeIsMutable(mutation.target)) {\n      return false\n    }\n    for (const node of Array.from(this.nodesModifiedByMutation(mutation))) {\n      if (this.nodeIsSignificant(node)) return true\n    }\n    return false\n  }\n\n  nodeIsSignificant(node) {\n    return node !== this.element && !this.nodeIsMutable(node) && !nodeIsEmptyTextNode(node)\n  }\n\n  nodeIsMutable(node) {\n    return findClosestElementFromNode(node, { matchingSelector: mutableSelector })\n  }\n\n  nodesModifiedByMutation(mutation) {\n    const nodes = []\n    switch (mutation.type) {\n      case \"attributes\":\n        if (mutation.attributeName !== mutableAttributeName) {\n          nodes.push(mutation.target)\n        }\n        break\n      case \"characterData\":\n        // Changes to text nodes should consider the parent element\n        nodes.push(mutation.target.parentNode)\n        nodes.push(mutation.target)\n        break\n      case \"childList\":\n        // Consider each added or removed node\n        nodes.push(...Array.from(mutation.addedNodes || []))\n        nodes.push(...Array.from(mutation.removedNodes || []))\n        break\n    }\n    return nodes\n  }\n\n  getMutationSummary() {\n    return this.getTextMutationSummary()\n  }\n\n  getTextMutationSummary() {\n    const { additions, deletions } = this.getTextChangesFromCharacterData()\n    const textChanges = this.getTextChangesFromChildList()\n\n    Array.from(textChanges.additions).forEach((addition) => {\n      if (!Array.from(additions).includes(addition)) {\n        additions.push(addition)\n      }\n    })\n\n    deletions.push(...Array.from(textChanges.deletions || []))\n\n    const summary = {}\n\n    const added = additions.join(\"\")\n    if (added) {\n      summary.textAdded = added\n    }\n\n    const deleted = deletions.join(\"\")\n    if (deleted) {\n      summary.textDeleted = deleted\n    }\n\n    return summary\n  }\n\n  getMutationsByType(type) {\n    return Array.from(this.mutations).filter((mutation) => mutation.type === type)\n  }\n\n  getTextChangesFromChildList() {\n    let textAdded, textRemoved\n    const addedNodes = []\n    const removedNodes = []\n\n    Array.from(this.getMutationsByType(\"childList\")).forEach((mutation) => {\n      addedNodes.push(...Array.from(mutation.addedNodes || []))\n      removedNodes.push(...Array.from(mutation.removedNodes || []))\n    })\n\n    const singleBlockCommentRemoved =\n      addedNodes.length === 0 && removedNodes.length === 1 && nodeIsBlockStartComment(removedNodes[0])\n\n    if (singleBlockCommentRemoved) {\n      textAdded = []\n      textRemoved = [ \"\\n\" ]\n    } else {\n      textAdded = getTextForNodes(addedNodes)\n      textRemoved = getTextForNodes(removedNodes)\n    }\n\n    const additions = textAdded.filter((text, index) => text !== textRemoved[index]).map(normalizeSpaces)\n    const deletions = textRemoved.filter((text, index) => text !== textAdded[index]).map(normalizeSpaces)\n\n    return { additions, deletions }\n  }\n\n  getTextChangesFromCharacterData() {\n    let added, removed\n    const characterMutations = this.getMutationsByType(\"characterData\")\n\n    if (characterMutations.length) {\n      const startMutation = characterMutations[0],\n        endMutation = characterMutations[characterMutations.length - 1]\n\n      const oldString = normalizeSpaces(startMutation.oldValue)\n      const newString = normalizeSpaces(endMutation.target.data)\n      const summarized = summarizeStringChange(oldString, newString)\n      added = summarized.added\n      removed = summarized.removed\n    }\n\n    return {\n      additions: added ? [ added ] : [],\n      deletions: removed ? [ removed ] : [],\n    }\n  }\n}\n\nconst getTextForNodes = function(nodes = []) {\n  const text = []\n  for (const node of Array.from(nodes)) {\n    switch (node.nodeType) {\n      case Node.TEXT_NODE:\n        text.push(node.data)\n        break\n      case Node.ELEMENT_NODE:\n        if (tagName(node) === \"br\") {\n          text.push(\"\\n\")\n        } else {\n          text.push(...Array.from(getTextForNodes(node.childNodes) || []))\n        }\n        break\n    }\n  }\n  return text\n}\n", "/* eslint-disable\n    no-empty,\n*/\nimport Operation from \"trix/core/utilities/operation\"\n\nexport default class FileVerificationOperation extends Operation {\n  constructor(file) {\n    super(...arguments)\n    this.file = file\n  }\n\n  perform(callback) {\n    const reader = new FileReader()\n\n    reader.onerror = () => callback(false)\n\n    reader.onload = () => {\n      reader.onerror = null\n      try {\n        reader.abort()\n      } catch (error) {}\n      return callback(true, this.file)\n    }\n\n    return reader.readAsArrayBuffer(this.file)\n  }\n}\n", "import * as config from \"trix/config\"\nimport { NON_BREAKING_SPACE, OBJECT_REPLACEMENT_CHARACTER, ZERO_WIDTH_SPACE } from \"trix/constants\"\n\n// Each software keyboard on Android emits its own set of events and some of them can be buggy.\n// This class detects when some buggy events are being emitted and lets know the input controller\n// that they should be ignored.\nexport default class FlakyAndroidKeyboardDetector {\n  constructor(element) {\n    this.element = element\n  }\n\n  shouldIgnore(event) {\n    if (!config.browser.samsungAndroid) return false\n\n    this.previousEvent = this.event\n    this.event = event\n\n    this.checkSamsungKeyboardBuggyModeStart()\n    this.checkSamsungKeyboardBuggyModeEnd()\n\n    return this.buggyMode\n  }\n\n  // private\n\n  // The Samsung keyboard on Android can enter a buggy state in which it emits a flurry of confused events that,\n  // if processed, corrupts the editor. The buggy mode always starts with an insertText event, right after a\n  // keydown event with for an \"Unidentified\" key, with the same text as the editor element, except for a few\n  // extra whitespace, or exotic utf8, characters.\n  checkSamsungKeyboardBuggyModeStart() {\n    if (this.insertingLongTextAfterUnidentifiedChar() && differsInWhitespace(this.element.innerText, this.event.data)) {\n      this.buggyMode = true\n      this.event.preventDefault()\n    }\n  }\n\n  // The flurry of buggy events are always insertText. If we see any other type, it means it's over.\n  checkSamsungKeyboardBuggyModeEnd() {\n    if (this.buggyMode && this.event.inputType !== \"insertText\") {\n      this.buggyMode = false\n    }\n  }\n\n  insertingLongTextAfterUnidentifiedChar() {\n    return this.isBeforeInputInsertText() && this.previousEventWasUnidentifiedKeydown() && this.event.data?.length > 50\n  }\n\n  isBeforeInputInsertText() {\n    return this.event.type === \"beforeinput\" && this.event.inputType === \"insertText\"\n  }\n\n  previousEventWasUnidentifiedKeydown() {\n    return this.previousEvent?.type === \"keydown\" && this.previousEvent?.key === \"Unidentified\"\n  }\n}\n\nconst differsInWhitespace = (text1, text2) => {\n  return normalize(text1) === normalize(text2)\n}\n\nconst whiteSpaceNormalizerRegexp = new RegExp(`(${OBJECT_REPLACEMENT_CHARACTER}|${ZERO_WIDTH_SPACE}|${NON_BREAKING_SPACE}|\\\\s)+`, \"g\")\nconst normalize = (text) => text.replace(whiteSpaceNormalizerRegexp, \" \").trim()\n", "import BasicObject from \"trix/core/basic_object\"\nimport MutationObserver from \"trix/observers/mutation_observer\"\nimport FileVerificationOperation from \"trix/operations/file_verification_operation\"\nimport FlakyAndroidKeyboardDetector from \"../models/flaky_android_keyboard_detector\"\n\nimport { handleEvent, innerElementIsActive } from \"trix/core/helpers\"\n\nexport default class InputController extends BasicObject {\n\n  static events = {}\n\n  constructor(element) {\n    super(...arguments)\n    this.element = element\n    this.mutationObserver = new MutationObserver(this.element)\n    this.mutationObserver.delegate = this\n    this.flakyKeyboardDetector = new FlakyAndroidKeyboardDetector(this.element)\n    for (const eventName in this.constructor.events) {\n      handleEvent(eventName, { onElement: this.element, withCallback: this.handlerFor(eventName) })\n    }\n  }\n\n  elementDidMutate(mutationSummary) {}\n\n  editorWillSyncDocumentView() {\n    return this.mutationObserver.stop()\n  }\n\n  editorDidSyncDocumentView() {\n    return this.mutationObserver.start()\n  }\n\n  requestRender() {\n    return this.delegate?.inputControllerDidRequestRender?.()\n  }\n\n  requestReparse() {\n    this.delegate?.inputControllerDidRequestReparse?.()\n    return this.requestRender()\n  }\n\n  attachFiles(files) {\n    const operations = Array.from(files).map((file) => new FileVerificationOperation(file))\n    return Promise.all(operations).then((files) => {\n      this.handleInput(function() {\n        this.delegate?.inputControllerWillAttachFiles()\n        this.responder?.insertFiles(files)\n        return this.requestRender()\n      })\n    })\n  }\n\n  // Private\n\n  handlerFor(eventName) {\n    return (event) => {\n      if (!event.defaultPrevented) {\n        this.handleInput(() => {\n          if (!innerElementIsActive(this.element)) {\n            if (this.flakyKeyboardDetector.shouldIgnore(event)) return\n\n            this.eventName = eventName\n            this.constructor.events[eventName].call(this, event)\n          }\n        })\n      }\n    }\n  }\n\n  handleInput(callback) {\n    try {\n      this.delegate?.inputControllerWillHandleInput()\n      callback.call(this)\n    } finally {\n      this.delegate?.inputControllerDidHandleInput()\n    }\n  }\n\n  createLinkHTML(href, text) {\n    const link = document.createElement(\"a\")\n    link.href = href\n    link.textContent = text ? text : href\n    return link.outerHTML\n  }\n}\n\n", "import * as config from \"trix/config\"\nimport UTF16String from \"trix/core/utilities/utf16_string\"\nimport BasicObject from \"trix/core/basic_object\"\nimport InputController from \"trix/controllers/input_controller\"\nimport DocumentView from \"trix/views/document_view\"\nimport Document from \"trix/models/document\"\n\nimport {\n  dataTransferIsPlainText,\n  dataTransferIsWritable,\n  keyEventIsKeyboardCommand,\n  makeElement,\n  objectsAreEqual,\n  removeNode,\n  squishBreakableWhitespace,\n} from \"trix/core/helpers\"\n\nimport { selectionChangeObserver } from \"trix/observers/selection_change_observer\"\n\nconst { browser, keyNames } = config\nlet pastedFileCount = 0\n\nexport default class Level0InputController extends InputController {\n\n  static events = {\n    keydown(event) {\n      if (!this.isComposing()) {\n        this.resetInputSummary()\n      }\n      this.inputSummary.didInput = true\n\n      const keyName = keyNames[event.keyCode]\n      if (keyName) {\n        let context = this.keys\n\n        ;[ \"ctrl\", \"alt\", \"shift\", \"meta\" ].forEach((modifier) => {\n          if (event[`${modifier}Key`]) {\n            if (modifier === \"ctrl\") {\n              modifier = \"control\"\n            }\n            context = context?.[modifier]\n          }\n        })\n\n        if (context?.[keyName] != null) {\n          this.setInputSummary({ keyName })\n          selectionChangeObserver.reset()\n          context[keyName].call(this, event)\n        }\n      }\n\n      if (keyEventIsKeyboardCommand(event)) {\n        const character = String.fromCharCode(event.keyCode).toLowerCase()\n        if (character) {\n          const keys = [ \"alt\", \"shift\" ].map((modifier) => {\n            if (event[`${modifier}Key`]) {\n              return modifier\n            }\n          }).filter(key => key)\n          keys.push(character)\n          if (this.delegate?.inputControllerDidReceiveKeyboardCommand(keys)) {\n            event.preventDefault()\n          }\n        }\n      }\n    },\n\n    keypress(event) {\n      if (this.inputSummary.eventName != null) return\n      if (event.metaKey) return\n      if (event.ctrlKey && !event.altKey) return\n\n      const string = stringFromKeyEvent(event)\n      if (string) {\n        this.delegate?.inputControllerWillPerformTyping()\n        this.responder?.insertString(string)\n        return this.setInputSummary({ textAdded: string, didDelete: this.selectionIsExpanded() })\n      }\n    },\n\n    textInput(event) {\n      // Handle autocapitalization\n      const { data } = event\n      const { textAdded } = this.inputSummary\n      if (textAdded && textAdded !== data && textAdded.toUpperCase() === data) {\n        const range = this.getSelectedRange()\n        this.setSelectedRange([ range[0], range[1] + textAdded.length ])\n        this.responder?.insertString(data)\n        this.setInputSummary({ textAdded: data })\n        return this.setSelectedRange(range)\n      }\n    },\n\n    dragenter(event) {\n      event.preventDefault()\n    },\n\n    dragstart(event) {\n      this.serializeSelectionToDataTransfer(event.dataTransfer)\n      this.draggedRange = this.getSelectedRange()\n      return this.delegate?.inputControllerDidStartDrag?.()\n    },\n\n    dragover(event) {\n      if (this.draggedRange || this.canAcceptDataTransfer(event.dataTransfer)) {\n        event.preventDefault()\n        const draggingPoint = { x: event.clientX, y: event.clientY }\n        if (!objectsAreEqual(draggingPoint, this.draggingPoint)) {\n          this.draggingPoint = draggingPoint\n          return this.delegate?.inputControllerDidReceiveDragOverPoint?.(this.draggingPoint)\n        }\n      }\n    },\n\n    dragend(event) {\n      this.delegate?.inputControllerDidCancelDrag?.()\n      this.draggedRange = null\n      this.draggingPoint = null\n    },\n\n    drop(event) {\n      event.preventDefault()\n      const files = event.dataTransfer?.files\n      const documentJSON = event.dataTransfer.getData(\"application/x-trix-document\")\n\n      const point = { x: event.clientX, y: event.clientY }\n      this.responder?.setLocationRangeFromPointRange(point)\n\n      if (files?.length) {\n        this.attachFiles(files)\n      } else if (this.draggedRange) {\n        this.delegate?.inputControllerWillMoveText()\n        this.responder?.moveTextFromRange(this.draggedRange)\n        this.draggedRange = null\n        this.requestRender()\n      } else if (documentJSON) {\n        const document = Document.fromJSONString(documentJSON)\n        this.responder?.insertDocument(document)\n        this.requestRender()\n      }\n\n      this.draggedRange = null\n      this.draggingPoint = null\n    },\n\n    cut(event) {\n      if (this.responder?.selectionIsExpanded()) {\n        if (this.serializeSelectionToDataTransfer(event.clipboardData)) {\n          event.preventDefault()\n        }\n\n        this.delegate?.inputControllerWillCutText()\n        this.deleteInDirection(\"backward\")\n        if (event.defaultPrevented) {\n          return this.requestRender()\n        }\n      }\n    },\n\n    copy(event) {\n      if (this.responder?.selectionIsExpanded()) {\n        if (this.serializeSelectionToDataTransfer(event.clipboardData)) {\n          event.preventDefault()\n        }\n      }\n    },\n\n    paste(event) {\n      const clipboard = event.clipboardData || event.testClipboardData\n      const paste = { clipboard }\n\n      if (!clipboard || pasteEventIsCrippledSafariHTMLPaste(event)) {\n        this.getPastedHTMLUsingHiddenElement((html) => {\n          paste.type = \"text/html\"\n          paste.html = html\n          this.delegate?.inputControllerWillPaste(paste)\n          this.responder?.insertHTML(paste.html)\n          this.requestRender()\n          return this.delegate?.inputControllerDidPaste(paste)\n        })\n        return\n      }\n\n      const href = clipboard.getData(\"URL\")\n      const html = clipboard.getData(\"text/html\")\n      const name = clipboard.getData(\"public.url-name\")\n\n      if (href) {\n        let string\n        paste.type = \"text/html\"\n        if (name) {\n          string = squishBreakableWhitespace(name).trim()\n        } else {\n          string = href\n        }\n        paste.html = this.createLinkHTML(href, string)\n        this.delegate?.inputControllerWillPaste(paste)\n        this.setInputSummary({ textAdded: string, didDelete: this.selectionIsExpanded() })\n        this.responder?.insertHTML(paste.html)\n        this.requestRender()\n        this.delegate?.inputControllerDidPaste(paste)\n      } else if (dataTransferIsPlainText(clipboard)) {\n        paste.type = \"text/plain\"\n        paste.string = clipboard.getData(\"text/plain\")\n        this.delegate?.inputControllerWillPaste(paste)\n        this.setInputSummary({ textAdded: paste.string, didDelete: this.selectionIsExpanded() })\n        this.responder?.insertString(paste.string)\n        this.requestRender()\n        this.delegate?.inputControllerDidPaste(paste)\n      } else if (html) {\n        paste.type = \"text/html\"\n        paste.html = html\n        this.delegate?.inputControllerWillPaste(paste)\n        this.responder?.insertHTML(paste.html)\n        this.requestRender()\n        this.delegate?.inputControllerDidPaste(paste)\n      } else if (Array.from(clipboard.types).includes(\"Files\")) {\n        const file = clipboard.items?.[0]?.getAsFile?.()\n        if (file) {\n          const extension = extensionForFile(file)\n          if (!file.name && extension) {\n            file.name = `pasted-file-${++pastedFileCount}.${extension}`\n          }\n          paste.type = \"File\"\n          paste.file = file\n          this.delegate?.inputControllerWillAttachFiles()\n          this.responder?.insertFile(paste.file)\n          this.requestRender()\n          this.delegate?.inputControllerDidPaste(paste)\n        }\n      }\n\n      event.preventDefault()\n    },\n\n    compositionstart(event) {\n      return this.getCompositionInput().start(event.data)\n    },\n\n    compositionupdate(event) {\n      return this.getCompositionInput().update(event.data)\n    },\n\n    compositionend(event) {\n      return this.getCompositionInput().end(event.data)\n    },\n\n    beforeinput(event) {\n      this.inputSummary.didInput = true\n    },\n\n    input(event) {\n      this.inputSummary.didInput = true\n      return event.stopPropagation()\n    },\n  }\n\n  static keys = {\n    backspace(event) {\n      this.delegate?.inputControllerWillPerformTyping()\n      return this.deleteInDirection(\"backward\", event)\n    },\n\n    delete(event) {\n      this.delegate?.inputControllerWillPerformTyping()\n      return this.deleteInDirection(\"forward\", event)\n    },\n\n    return(event) {\n      this.setInputSummary({ preferDocument: true })\n      this.delegate?.inputControllerWillPerformTyping()\n      return this.responder?.insertLineBreak()\n    },\n\n    tab(event) {\n      if (this.responder?.canIncreaseNestingLevel()) {\n        this.responder?.increaseNestingLevel()\n        this.requestRender()\n        event.preventDefault()\n      }\n    },\n\n    left(event) {\n      if (this.selectionIsInCursorTarget()) {\n        event.preventDefault()\n        return this.responder?.moveCursorInDirection(\"backward\")\n      }\n    },\n\n    right(event) {\n      if (this.selectionIsInCursorTarget()) {\n        event.preventDefault()\n        return this.responder?.moveCursorInDirection(\"forward\")\n      }\n    },\n\n    control: {\n      d(event) {\n        this.delegate?.inputControllerWillPerformTyping()\n        return this.deleteInDirection(\"forward\", event)\n      },\n\n      h(event) {\n        this.delegate?.inputControllerWillPerformTyping()\n        return this.deleteInDirection(\"backward\", event)\n      },\n\n      o(event) {\n        event.preventDefault()\n        this.delegate?.inputControllerWillPerformTyping()\n        this.responder?.insertString(\"\\n\", { updatePosition: false })\n        return this.requestRender()\n      },\n    },\n\n    shift: {\n      return(event) {\n        this.delegate?.inputControllerWillPerformTyping()\n        this.responder?.insertString(\"\\n\")\n        this.requestRender()\n        event.preventDefault()\n      },\n\n      tab(event) {\n        if (this.responder?.canDecreaseNestingLevel()) {\n          this.responder?.decreaseNestingLevel()\n          this.requestRender()\n          event.preventDefault()\n        }\n      },\n\n      left(event) {\n        if (this.selectionIsInCursorTarget()) {\n          event.preventDefault()\n          return this.expandSelectionInDirection(\"backward\")\n        }\n      },\n\n      right(event) {\n        if (this.selectionIsInCursorTarget()) {\n          event.preventDefault()\n          return this.expandSelectionInDirection(\"forward\")\n        }\n      },\n    },\n\n    alt: {\n      backspace(event) {\n        this.setInputSummary({ preferDocument: false })\n        return this.delegate?.inputControllerWillPerformTyping()\n      },\n    },\n\n    meta: {\n      backspace(event) {\n        this.setInputSummary({ preferDocument: false })\n        return this.delegate?.inputControllerWillPerformTyping()\n      },\n    },\n  }\n\n  constructor() {\n    super(...arguments)\n    this.resetInputSummary()\n  }\n\n  setInputSummary(summary = {}) {\n    this.inputSummary.eventName = this.eventName\n    for (const key in summary) {\n      const value = summary[key]\n      this.inputSummary[key] = value\n    }\n    return this.inputSummary\n  }\n\n  resetInputSummary() {\n    this.inputSummary = {}\n  }\n\n  reset() {\n    this.resetInputSummary()\n    return selectionChangeObserver.reset()\n  }\n\n  // Mutation observer delegate\n\n  elementDidMutate(mutationSummary) {\n    if (this.isComposing()) {\n      return this.delegate?.inputControllerDidAllowUnhandledInput?.()\n    } else {\n      return this.handleInput(function() {\n        if (this.mutationIsSignificant(mutationSummary)) {\n          if (this.mutationIsExpected(mutationSummary)) {\n            this.requestRender()\n          } else {\n            this.requestReparse()\n          }\n        }\n        return this.reset()\n      })\n    }\n  }\n\n  mutationIsExpected({ textAdded, textDeleted }) {\n    if (this.inputSummary.preferDocument) {\n      return true\n    }\n\n    const mutationAdditionMatchesSummary =\n      textAdded != null ? textAdded === this.inputSummary.textAdded : !this.inputSummary.textAdded\n    const mutationDeletionMatchesSummary =\n      textDeleted != null ? this.inputSummary.didDelete : !this.inputSummary.didDelete\n\n    const unexpectedNewlineAddition = [ \"\\n\", \" \\n\" ].includes(textAdded) && !mutationAdditionMatchesSummary\n    const unexpectedNewlineDeletion = textDeleted === \"\\n\" && !mutationDeletionMatchesSummary\n    const singleUnexpectedNewline =\n      unexpectedNewlineAddition && !unexpectedNewlineDeletion ||\n      unexpectedNewlineDeletion && !unexpectedNewlineAddition\n\n    if (singleUnexpectedNewline) {\n      const range = this.getSelectedRange()\n      if (range) {\n        const offset = unexpectedNewlineAddition ? textAdded.replace(/\\n$/, \"\").length || -1 : textAdded?.length || 1\n        if (this.responder?.positionIsBlockBreak(range[1] + offset)) {\n          return true\n        }\n      }\n    }\n\n    return mutationAdditionMatchesSummary && mutationDeletionMatchesSummary\n  }\n\n  mutationIsSignificant(mutationSummary) {\n    const textChanged = Object.keys(mutationSummary).length > 0\n    const composedEmptyString = this.compositionInput?.getEndData() === \"\"\n    return textChanged || !composedEmptyString\n  }\n\n  // Private\n\n  getCompositionInput() {\n    if (this.isComposing()) {\n      return this.compositionInput\n    } else {\n      this.compositionInput = new CompositionInput(this)\n    }\n  }\n\n  isComposing() {\n    return this.compositionInput && !this.compositionInput.isEnded()\n  }\n\n  deleteInDirection(direction, event) {\n    if (this.responder?.deleteInDirection(direction) === false) {\n      if (event) {\n        event.preventDefault()\n        return this.requestRender()\n      }\n    } else {\n      return this.setInputSummary({ didDelete: true })\n    }\n  }\n\n  serializeSelectionToDataTransfer(dataTransfer) {\n    if (!dataTransferIsWritable(dataTransfer)) return\n    const document = this.responder?.getSelectedDocument().toSerializableDocument()\n\n    dataTransfer.setData(\"application/x-trix-document\", JSON.stringify(document))\n    dataTransfer.setData(\"text/html\", DocumentView.render(document).innerHTML)\n    dataTransfer.setData(\"text/plain\", document.toString().replace(/\\n$/, \"\"))\n    return true\n  }\n\n  canAcceptDataTransfer(dataTransfer) {\n    const types = {}\n    Array.from(dataTransfer?.types || []).forEach((type) => {\n      types[type] = true\n    })\n    return types.Files || types[\"application/x-trix-document\"] || types[\"text/html\"] || types[\"text/plain\"]\n  }\n\n  getPastedHTMLUsingHiddenElement(callback) {\n    const selectedRange = this.getSelectedRange()\n\n    const style = {\n      position: \"absolute\",\n      left: `${window.pageXOffset}px`,\n      top: `${window.pageYOffset}px`,\n      opacity: 0,\n    }\n\n    const element = makeElement({ style, tagName: \"div\", editable: true })\n    document.body.appendChild(element)\n    element.focus()\n\n    return requestAnimationFrame(() => {\n      const html = element.innerHTML\n      removeNode(element)\n      this.setSelectedRange(selectedRange)\n      return callback(html)\n    })\n  }\n}\n\nLevel0InputController.proxyMethod(\"responder?.getSelectedRange\")\nLevel0InputController.proxyMethod(\"responder?.setSelectedRange\")\nLevel0InputController.proxyMethod(\"responder?.expandSelectionInDirection\")\nLevel0InputController.proxyMethod(\"responder?.selectionIsInCursorTarget\")\nLevel0InputController.proxyMethod(\"responder?.selectionIsExpanded\")\n\nconst extensionForFile = (file) => file.type?.match(/\\/(\\w+)$/)?.[1]\n\nconst hasStringCodePointAt = !!\" \".codePointAt?.(0)\n\nconst stringFromKeyEvent = function(event) {\n  if (event.key && hasStringCodePointAt && event.key.codePointAt(0) === event.keyCode) {\n    return event.key\n  } else {\n    let code\n    if (event.which === null) {\n      code = event.keyCode\n    } else if (event.which !== 0 && event.charCode !== 0) {\n      code = event.charCode\n    }\n\n    if (code != null && keyNames[code] !== \"escape\") {\n      return UTF16String.fromCodepoints([ code ]).toString()\n    }\n  }\n}\n\nconst pasteEventIsCrippledSafariHTMLPaste = function(event) {\n  const paste = event.clipboardData\n  if (paste) {\n    if (paste.types.includes(\"text/html\")) {\n      // Answer is yes if there's any possibility of Paste and Match Style in Safari,\n      // which is nearly impossible to detect confidently: https://bugs.webkit.org/show_bug.cgi?id=174165\n      for (const type of paste.types) {\n        const hasPasteboardFlavor = /^CorePasteboardFlavorType/.test(type)\n        const hasReadableDynamicData = /^dyn\\./.test(type) && paste.getData(type)\n        const mightBePasteAndMatchStyle = hasPasteboardFlavor || hasReadableDynamicData\n        if (mightBePasteAndMatchStyle) {\n          return true\n        }\n      }\n      return false\n    } else {\n      const isExternalHTMLPaste = paste.types.includes(\"com.apple.webarchive\")\n      const isExternalRichTextPaste = paste.types.includes(\"com.apple.flat-rtfd\")\n      return isExternalHTMLPaste || isExternalRichTextPaste\n    }\n  }\n}\n\nclass CompositionInput extends BasicObject {\n  constructor(inputController) {\n    super(...arguments)\n    this.inputController = inputController\n    this.responder = this.inputController.responder\n    this.delegate = this.inputController.delegate\n    this.inputSummary = this.inputController.inputSummary\n    this.data = {}\n  }\n\n  start(data) {\n    this.data.start = data\n\n    if (this.isSignificant()) {\n      if (this.inputSummary.eventName === \"keypress\" && this.inputSummary.textAdded) {\n        this.responder?.deleteInDirection(\"left\")\n      }\n\n      if (!this.selectionIsExpanded()) {\n        this.insertPlaceholder()\n        this.requestRender()\n      }\n\n      this.range = this.responder?.getSelectedRange()\n    }\n  }\n\n  update(data) {\n    this.data.update = data\n\n    if (this.isSignificant()) {\n      const range = this.selectPlaceholder()\n      if (range) {\n        this.forgetPlaceholder()\n        this.range = range\n      }\n    }\n  }\n\n  end(data) {\n    this.data.end = data\n\n    if (this.isSignificant()) {\n      this.forgetPlaceholder()\n\n      if (this.canApplyToDocument()) {\n        this.setInputSummary({ preferDocument: true, didInput: false })\n        this.delegate?.inputControllerWillPerformTyping()\n        this.responder?.setSelectedRange(this.range)\n        this.responder?.insertString(this.data.end)\n        return this.responder?.setSelectedRange(this.range[0] + this.data.end.length)\n      } else if (this.data.start != null || this.data.update != null) {\n        this.requestReparse()\n        return this.inputController.reset()\n      }\n    } else {\n      return this.inputController.reset()\n    }\n  }\n\n  getEndData() {\n    return this.data.end\n  }\n\n  isEnded() {\n    return this.getEndData() != null\n  }\n\n  isSignificant() {\n    if (browser.composesExistingText) {\n      return this.inputSummary.didInput\n    } else {\n      return true\n    }\n  }\n\n  // Private\n\n  canApplyToDocument() {\n    return this.data.start?.length === 0 && this.data.end?.length > 0 && this.range\n  }\n}\n\nCompositionInput.proxyMethod(\"inputController.setInputSummary\")\nCompositionInput.proxyMethod(\"inputController.requestRender\")\nCompositionInput.proxyMethod(\"inputController.requestReparse\")\nCompositionInput.proxyMethod(\"responder?.selectionIsExpanded\")\nCompositionInput.proxyMethod(\"responder?.insertPlaceholder\")\nCompositionInput.proxyMethod(\"responder?.selectPlaceholder\")\nCompositionInput.proxyMethod(\"responder?.forgetPlaceholder\")\n", "import { getAllAttributeNames, squishBreakableWhitespace } from \"trix/core/helpers\"\nimport InputController from \"trix/controllers/input_controller\"\nimport * as config from \"trix/config\"\n\nimport { dataTransferIsMsOfficePaste, dataTransferIsPlainText, keyEventIsKeyboardCommand, objectsAreEqual } from \"trix/core/helpers\"\n\nimport { selectionChangeObserver } from \"trix/observers/selection_change_observer\"\n\nexport default class Level2InputController extends InputController {\n  constructor(...args) {\n    super(...args)\n    this.render = this.render.bind(this)\n  }\n\n  static events = {\n    keydown(event) {\n      if (keyEventIsKeyboardCommand(event)) {\n        const command = keyboardCommandFromKeyEvent(event)\n        if (this.delegate?.inputControllerDidReceiveKeyboardCommand(command)) {\n          event.preventDefault()\n        }\n      } else {\n        let name = event.key\n        if (event.altKey) {\n          name += \"+Alt\"\n        }\n        if (event.shiftKey) {\n          name += \"+Shift\"\n        }\n        const handler = this.constructor.keys[name]\n        if (handler) {\n          return this.withEvent(event, handler)\n        }\n      }\n    },\n\n    // Handle paste event to work around beforeinput.insertFromPaste browser bugs.\n    // Safe to remove each condition once fixed upstream.\n    paste(event) {\n      // https://bugs.webkit.org/show_bug.cgi?id=194921\n      let paste\n      const href = event.clipboardData?.getData(\"URL\")\n      if (pasteEventHasFilesOnly(event)) {\n        event.preventDefault()\n        return this.attachFiles(event.clipboardData.files)\n\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=934448\n      } else if (pasteEventHasPlainTextOnly(event)) {\n        event.preventDefault()\n        paste = {\n          type: \"text/plain\",\n          string: event.clipboardData.getData(\"text/plain\"),\n        }\n        this.delegate?.inputControllerWillPaste(paste)\n        this.responder?.insertString(paste.string)\n        this.render()\n        return this.delegate?.inputControllerDidPaste(paste)\n\n        // https://bugs.webkit.org/show_bug.cgi?id=196702\n      } else if (href) {\n        event.preventDefault()\n        paste = {\n          type: \"text/html\",\n          html: this.createLinkHTML(href),\n        }\n        this.delegate?.inputControllerWillPaste(paste)\n        this.responder?.insertHTML(paste.html)\n        this.render()\n        return this.delegate?.inputControllerDidPaste(paste)\n      }\n    },\n\n    beforeinput(event) {\n      const handler = this.constructor.inputTypes[event.inputType]\n\n      if (handler) {\n        this.withEvent(event, handler)\n        this.scheduleRender()\n      }\n    },\n\n    input(event) {\n      selectionChangeObserver.reset()\n    },\n\n    dragstart(event) {\n      if (this.responder?.selectionContainsAttachments()) {\n        event.dataTransfer.setData(\"application/x-trix-dragging\", true)\n\n        this.dragging = {\n          range: this.responder?.getSelectedRange(),\n          point: pointFromEvent(event),\n        }\n      }\n    },\n\n    dragenter(event) {\n      if (dragEventHasFiles(event)) {\n        event.preventDefault()\n      }\n    },\n\n    dragover(event) {\n      if (this.dragging) {\n        event.preventDefault()\n        const point = pointFromEvent(event)\n        if (!objectsAreEqual(point, this.dragging.point)) {\n          this.dragging.point = point\n          return this.responder?.setLocationRangeFromPointRange(point)\n        }\n      } else if (dragEventHasFiles(event)) {\n        event.preventDefault()\n      }\n    },\n\n    drop(event) {\n      if (this.dragging) {\n        event.preventDefault()\n        this.delegate?.inputControllerWillMoveText()\n        this.responder?.moveTextFromRange(this.dragging.range)\n        this.dragging = null\n        return this.scheduleRender()\n      } else if (dragEventHasFiles(event)) {\n        event.preventDefault()\n        const point = pointFromEvent(event)\n        this.responder?.setLocationRangeFromPointRange(point)\n        return this.attachFiles(event.dataTransfer.files)\n      }\n    },\n\n    dragend() {\n      if (this.dragging) {\n        this.responder?.setSelectedRange(this.dragging.range)\n        this.dragging = null\n      }\n    },\n\n    compositionend(event) {\n      if (this.composing) {\n        this.composing = false\n        if (!config.browser.recentAndroid) this.scheduleRender()\n      }\n    },\n  }\n\n  static keys = {\n    ArrowLeft() {\n      if (this.responder?.shouldManageMovingCursorInDirection(\"backward\")) {\n        this.event.preventDefault()\n        return this.responder?.moveCursorInDirection(\"backward\")\n      }\n    },\n\n    ArrowRight() {\n      if (this.responder?.shouldManageMovingCursorInDirection(\"forward\")) {\n        this.event.preventDefault()\n        return this.responder?.moveCursorInDirection(\"forward\")\n      }\n    },\n\n    Backspace() {\n      if (this.responder?.shouldManageDeletingInDirection(\"backward\")) {\n        this.event.preventDefault()\n        this.delegate?.inputControllerWillPerformTyping()\n        this.responder?.deleteInDirection(\"backward\")\n        return this.render()\n      }\n    },\n\n    Tab() {\n      if (this.responder?.canIncreaseNestingLevel()) {\n        this.event.preventDefault()\n        this.responder?.increaseNestingLevel()\n        return this.render()\n      }\n    },\n\n    \"Tab+Shift\"() {\n      if (this.responder?.canDecreaseNestingLevel()) {\n        this.event.preventDefault()\n        this.responder?.decreaseNestingLevel()\n        return this.render()\n      }\n    },\n  }\n\n  static inputTypes = {\n    deleteByComposition() {\n      return this.deleteInDirection(\"backward\", { recordUndoEntry: false })\n    },\n\n    deleteByCut() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteByDrag() {\n      this.event.preventDefault()\n      return this.withTargetDOMRange(function() {\n        this.deleteByDragRange = this.responder?.getSelectedRange()\n      })\n    },\n\n    deleteCompositionText() {\n      return this.deleteInDirection(\"backward\", { recordUndoEntry: false })\n    },\n\n    deleteContent() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteContentBackward() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteContentForward() {\n      return this.deleteInDirection(\"forward\")\n    },\n\n    deleteEntireSoftLine() {\n      return this.deleteInDirection(\"forward\")\n    },\n\n    deleteHardLineBackward() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteHardLineForward() {\n      return this.deleteInDirection(\"forward\")\n    },\n\n    deleteSoftLineBackward() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteSoftLineForward() {\n      return this.deleteInDirection(\"forward\")\n    },\n\n    deleteWordBackward() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteWordForward() {\n      return this.deleteInDirection(\"forward\")\n    },\n\n    formatBackColor() {\n      return this.activateAttributeIfSupported(\"backgroundColor\", this.event.data)\n    },\n\n    formatBold() {\n      return this.toggleAttributeIfSupported(\"bold\")\n    },\n\n    formatFontColor() {\n      return this.activateAttributeIfSupported(\"color\", this.event.data)\n    },\n\n    formatFontName() {\n      return this.activateAttributeIfSupported(\"font\", this.event.data)\n    },\n\n    formatIndent() {\n      if (this.responder?.canIncreaseNestingLevel()) {\n        return this.withTargetDOMRange(function() {\n          return this.responder?.increaseNestingLevel()\n        })\n      }\n    },\n\n    formatItalic() {\n      return this.toggleAttributeIfSupported(\"italic\")\n    },\n\n    formatJustifyCenter() {\n      return this.toggleAttributeIfSupported(\"justifyCenter\")\n    },\n\n    formatJustifyFull() {\n      return this.toggleAttributeIfSupported(\"justifyFull\")\n    },\n\n    formatJustifyLeft() {\n      return this.toggleAttributeIfSupported(\"justifyLeft\")\n    },\n\n    formatJustifyRight() {\n      return this.toggleAttributeIfSupported(\"justifyRight\")\n    },\n\n    formatOutdent() {\n      if (this.responder?.canDecreaseNestingLevel()) {\n        return this.withTargetDOMRange(function() {\n          return this.responder?.decreaseNestingLevel()\n        })\n      }\n    },\n\n    formatRemove() {\n      this.withTargetDOMRange(function() {\n        for (const attributeName in this.responder?.getCurrentAttributes()) {\n          this.responder?.removeCurrentAttribute(attributeName)\n        }\n      })\n    },\n\n    formatSetBlockTextDirection() {\n      return this.activateAttributeIfSupported(\"blockDir\", this.event.data)\n    },\n\n    formatSetInlineTextDirection() {\n      return this.activateAttributeIfSupported(\"textDir\", this.event.data)\n    },\n\n    formatStrikeThrough() {\n      return this.toggleAttributeIfSupported(\"strike\")\n    },\n\n    formatSubscript() {\n      return this.toggleAttributeIfSupported(\"sub\")\n    },\n\n    formatSuperscript() {\n      return this.toggleAttributeIfSupported(\"sup\")\n    },\n\n    formatUnderline() {\n      return this.toggleAttributeIfSupported(\"underline\")\n    },\n\n    historyRedo() {\n      return this.delegate?.inputControllerWillPerformRedo()\n    },\n\n    historyUndo() {\n      return this.delegate?.inputControllerWillPerformUndo()\n    },\n\n    insertCompositionText() {\n      this.composing = true\n      return this.insertString(this.event.data)\n    },\n\n    insertFromComposition() {\n      this.composing = false\n      return this.insertString(this.event.data)\n    },\n\n    insertFromDrop() {\n      const range = this.deleteByDragRange\n      if (range) {\n        this.deleteByDragRange = null\n        this.delegate?.inputControllerWillMoveText()\n        return this.withTargetDOMRange(function() {\n          return this.responder?.moveTextFromRange(range)\n        })\n      }\n    },\n\n    insertFromPaste() {\n      const { dataTransfer } = this.event\n      const paste = { dataTransfer }\n\n      const href = dataTransfer.getData(\"URL\")\n      const html = dataTransfer.getData(\"text/html\")\n\n      if (href) {\n        let string\n        this.event.preventDefault()\n        paste.type = \"text/html\"\n        const name = dataTransfer.getData(\"public.url-name\")\n        if (name) {\n          string = squishBreakableWhitespace(name).trim()\n        } else {\n          string = href\n        }\n        paste.html = this.createLinkHTML(href, string)\n        this.delegate?.inputControllerWillPaste(paste)\n        this.withTargetDOMRange(function() {\n          return this.responder?.insertHTML(paste.html)\n        })\n        this.afterRender = () => {\n          return this.delegate?.inputControllerDidPaste(paste)\n        }\n      } else if (dataTransferIsPlainText(dataTransfer)) {\n        paste.type = \"text/plain\"\n        paste.string = dataTransfer.getData(\"text/plain\")\n        this.delegate?.inputControllerWillPaste(paste)\n        this.withTargetDOMRange(function() {\n          return this.responder?.insertString(paste.string)\n        })\n\n        this.afterRender = () => {\n          return this.delegate?.inputControllerDidPaste(paste)\n        }\n      } else if (processableFilePaste(this.event)) {\n        paste.type = \"File\"\n        paste.file = dataTransfer.files[0]\n        this.delegate?.inputControllerWillPaste(paste)\n        this.withTargetDOMRange(function() {\n          return this.responder?.insertFile(paste.file)\n        })\n\n        this.afterRender = () => {\n          return this.delegate?.inputControllerDidPaste(paste)\n        }\n      } else if (html) {\n        this.event.preventDefault()\n        paste.type = \"text/html\"\n        paste.html = html\n        this.delegate?.inputControllerWillPaste(paste)\n        this.withTargetDOMRange(function() {\n          return this.responder?.insertHTML(paste.html)\n        })\n        this.afterRender = () => {\n          return this.delegate?.inputControllerDidPaste(paste)\n        }\n      }\n    },\n\n    insertFromYank() {\n      return this.insertString(this.event.data)\n    },\n\n    insertLineBreak() {\n      return this.insertString(\"\\n\")\n    },\n\n    insertLink() {\n      return this.activateAttributeIfSupported(\"href\", this.event.data)\n    },\n\n    insertOrderedList() {\n      return this.toggleAttributeIfSupported(\"number\")\n    },\n\n    insertParagraph() {\n      this.delegate?.inputControllerWillPerformTyping()\n      return this.withTargetDOMRange(function() {\n        return this.responder?.insertLineBreak()\n      })\n    },\n\n    insertReplacementText() {\n      const replacement = this.event.dataTransfer.getData(\"text/plain\")\n      const domRange = this.event.getTargetRanges()[0]\n\n      this.withTargetDOMRange(domRange, () => {\n        this.insertString(replacement, { updatePosition: false })\n      })\n    },\n\n    insertText() {\n      return this.insertString(this.event.data || this.event.dataTransfer?.getData(\"text/plain\"))\n    },\n\n    insertTranspose() {\n      return this.insertString(this.event.data)\n    },\n\n    insertUnorderedList() {\n      return this.toggleAttributeIfSupported(\"bullet\")\n    },\n  }\n\n  elementDidMutate() {\n    if (this.scheduledRender) {\n      if (this.composing) {\n        return this.delegate?.inputControllerDidAllowUnhandledInput?.()\n      }\n    } else {\n      return this.reparse()\n    }\n  }\n\n  scheduleRender() {\n    return this.scheduledRender ? this.scheduledRender : this.scheduledRender = requestAnimationFrame(this.render)\n  }\n\n  render() {\n    cancelAnimationFrame(this.scheduledRender)\n    this.scheduledRender = null\n    if (!this.composing) {\n      this.delegate?.render()\n    }\n    this.afterRender?.()\n    this.afterRender = null\n  }\n\n  reparse() {\n    return this.delegate?.reparse()\n  }\n\n  // Responder helpers\n\n  insertString(string = \"\", options) {\n    this.delegate?.inputControllerWillPerformTyping()\n    return this.withTargetDOMRange(function() {\n      return this.responder?.insertString(string, options)\n    })\n  }\n\n  toggleAttributeIfSupported(attributeName) {\n    if (getAllAttributeNames().includes(attributeName)) {\n      this.delegate?.inputControllerWillPerformFormatting(attributeName)\n      return this.withTargetDOMRange(function() {\n        return this.responder?.toggleCurrentAttribute(attributeName)\n      })\n    }\n  }\n\n  activateAttributeIfSupported(attributeName, value) {\n    if (getAllAttributeNames().includes(attributeName)) {\n      this.delegate?.inputControllerWillPerformFormatting(attributeName)\n      return this.withTargetDOMRange(function() {\n        return this.responder?.setCurrentAttribute(attributeName, value)\n      })\n    }\n  }\n\n  deleteInDirection(direction, { recordUndoEntry } = { recordUndoEntry: true }) {\n    if (recordUndoEntry) {\n      this.delegate?.inputControllerWillPerformTyping()\n    }\n    const perform = () => this.responder?.deleteInDirection(direction)\n    const domRange = this.getTargetDOMRange({ minLength: this.composing ? 1 : 2 })\n    if (domRange) {\n      return this.withTargetDOMRange(domRange, perform)\n    } else {\n      return perform()\n    }\n  }\n\n  // Selection helpers\n\n  withTargetDOMRange(domRange, fn) {\n    if (typeof domRange === \"function\") {\n      fn = domRange\n      domRange = this.getTargetDOMRange()\n    }\n    if (domRange) {\n      return this.responder?.withTargetDOMRange(domRange, fn.bind(this))\n    } else {\n      selectionChangeObserver.reset()\n      return fn.call(this)\n    }\n  }\n\n  getTargetDOMRange({ minLength } = { minLength: 0 }) {\n    const targetRanges = this.event.getTargetRanges?.()\n    if (targetRanges) {\n      if (targetRanges.length) {\n        const domRange = staticRangeToRange(targetRanges[0])\n        if (minLength === 0 || domRange.toString().length >= minLength) {\n          return domRange\n        }\n      }\n    }\n  }\n\n  withEvent(event, fn) {\n    let result\n    this.event = event\n    try {\n      result = fn.call(this)\n    } finally {\n      this.event = null\n    }\n    return result\n  }\n}\n\nconst staticRangeToRange = function(staticRange) {\n  const range = document.createRange()\n  range.setStart(staticRange.startContainer, staticRange.startOffset)\n  range.setEnd(staticRange.endContainer, staticRange.endOffset)\n  return range\n}\n\n// Event helpers\n\nconst dragEventHasFiles = (event) => Array.from(event.dataTransfer?.types || []).includes(\"Files\")\n\nconst processableFilePaste = (event) => {\n  // Paste events that only have files are handled by the paste event handler,\n  // to work around Safari not supporting beforeinput.insertFromPaste for files.\n\n  // MS Office text pastes include a file with a screenshot of the text, but we should\n  // handle them as text pastes.\n  return event.dataTransfer.files?.[0] && !pasteEventHasFilesOnly(event) && !dataTransferIsMsOfficePaste(event)\n}\n\nconst pasteEventHasFilesOnly = function(event) {\n  const clipboard = event.clipboardData\n  if (clipboard) {\n    const fileTypes = Array.from(clipboard.types).filter((type) => type.match(/file/i)) // \"Files\", \"application/x-moz-file\"\n    return fileTypes.length === clipboard.types.length && clipboard.files.length >= 1\n  }\n}\n\nconst pasteEventHasPlainTextOnly = function(event) {\n  const clipboard = event.clipboardData\n  if (clipboard) {\n    return clipboard.types.includes(\"text/plain\") && clipboard.types.length === 1\n  }\n}\n\nconst keyboardCommandFromKeyEvent = function(event) {\n  const command = []\n  if (event.altKey) {\n    command.push(\"alt\")\n  }\n  if (event.shiftKey) {\n    command.push(\"shift\")\n  }\n  command.push(event.key)\n  return command\n}\n\nconst pointFromEvent = (event) => ({\n  x: event.clientX,\n  y: event.clientY,\n})\n", "import BasicObject from \"trix/core/basic_object\"\n\nimport { findClosestElementFromNode, handleEvent, triggerEvent } from \"trix/core/helpers\"\n\nconst attributeButtonSelector = \"[data-trix-attribute]\"\nconst actionButtonSelector = \"[data-trix-action]\"\nconst toolbarButtonSelector = `${attributeButtonSelector}, ${actionButtonSelector}`\nconst dialogSelector = \"[data-trix-dialog]\"\nconst activeDialogSelector = `${dialogSelector}[data-trix-active]`\nconst dialogButtonSelector = `${dialogSelector} [data-trix-method]`\nconst dialogInputSelector = `${dialogSelector} [data-trix-input]`\nconst getInputForDialog = (element, attributeName) => {\n  if (!attributeName) { attributeName = getAttributeName(element) }\n  return element.querySelector(`[data-trix-input][name='${attributeName}']`)\n}\nconst getActionName = (element) => element.getAttribute(\"data-trix-action\")\nconst getAttributeName = (element) => {\n  return element.getAttribute(\"data-trix-attribute\") || element.getAttribute(\"data-trix-dialog-attribute\")\n}\nconst getDialogName = (element) => element.getAttribute(\"data-trix-dialog\")\n\nexport default class ToolbarController extends BasicObject {\n  constructor(element) {\n    super(element)\n    this.didClickActionButton = this.didClickActionButton.bind(this)\n    this.didClickAttributeButton = this.didClickAttributeButton.bind(this)\n    this.didClickDialogButton = this.didClickDialogButton.bind(this)\n    this.didKeyDownDialogInput = this.didKeyDownDialogInput.bind(this)\n    this.element = element\n    this.attributes = {}\n    this.actions = {}\n    this.resetDialogInputs()\n\n    handleEvent(\"mousedown\", {\n      onElement: this.element,\n      matchingSelector: actionButtonSelector,\n      withCallback: this.didClickActionButton,\n    })\n    handleEvent(\"mousedown\", {\n      onElement: this.element,\n      matchingSelector: attributeButtonSelector,\n      withCallback: this.didClickAttributeButton,\n    })\n    handleEvent(\"click\", { onElement: this.element, matchingSelector: toolbarButtonSelector, preventDefault: true })\n    handleEvent(\"click\", {\n      onElement: this.element,\n      matchingSelector: dialogButtonSelector,\n      withCallback: this.didClickDialogButton,\n    })\n    handleEvent(\"keydown\", {\n      onElement: this.element,\n      matchingSelector: dialogInputSelector,\n      withCallback: this.didKeyDownDialogInput,\n    })\n  }\n\n  // Event handlers\n\n  didClickActionButton(event, element) {\n    this.delegate?.toolbarDidClickButton()\n    event.preventDefault()\n    const actionName = getActionName(element)\n\n    if (this.getDialog(actionName)) {\n      return this.toggleDialog(actionName)\n    } else {\n      return this.delegate?.toolbarDidInvokeAction(actionName, element)\n    }\n  }\n\n  didClickAttributeButton(event, element) {\n    this.delegate?.toolbarDidClickButton()\n    event.preventDefault()\n    const attributeName = getAttributeName(element)\n\n    if (this.getDialog(attributeName)) {\n      this.toggleDialog(attributeName)\n    } else {\n      this.delegate?.toolbarDidToggleAttribute(attributeName)\n    }\n\n    return this.refreshAttributeButtons()\n  }\n\n  didClickDialogButton(event, element) {\n    const dialogElement = findClosestElementFromNode(element, { matchingSelector: dialogSelector })\n    const method = element.getAttribute(\"data-trix-method\")\n    return this[method].call(this, dialogElement)\n  }\n\n  didKeyDownDialogInput(event, element) {\n    if (event.keyCode === 13) {\n      // Enter key\n      event.preventDefault()\n      const attribute = element.getAttribute(\"name\")\n      const dialog = this.getDialog(attribute)\n      this.setAttribute(dialog)\n    }\n    if (event.keyCode === 27) {\n      // Escape key\n      event.preventDefault()\n      return this.hideDialog()\n    }\n  }\n\n  // Action buttons\n\n  updateActions(actions) {\n    this.actions = actions\n    return this.refreshActionButtons()\n  }\n\n  refreshActionButtons() {\n    return this.eachActionButton((element, actionName) => {\n      element.disabled = this.actions[actionName] === false\n    })\n  }\n\n  eachActionButton(callback) {\n    return Array.from(this.element.querySelectorAll(actionButtonSelector)).map((element) =>\n      callback(element, getActionName(element))\n    )\n  }\n\n  // Attribute buttons\n\n  updateAttributes(attributes) {\n    this.attributes = attributes\n    return this.refreshAttributeButtons()\n  }\n\n  refreshAttributeButtons() {\n    return this.eachAttributeButton((element, attributeName) => {\n      element.disabled = this.attributes[attributeName] === false\n      if (this.attributes[attributeName] || this.dialogIsVisible(attributeName)) {\n        element.setAttribute(\"data-trix-active\", \"\")\n        return element.classList.add(\"trix-active\")\n      } else {\n        element.removeAttribute(\"data-trix-active\")\n        return element.classList.remove(\"trix-active\")\n      }\n    })\n  }\n\n  eachAttributeButton(callback) {\n    return Array.from(this.element.querySelectorAll(attributeButtonSelector)).map((element) =>\n      callback(element, getAttributeName(element))\n    )\n  }\n\n  applyKeyboardCommand(keys) {\n    const keyString = JSON.stringify(keys.sort())\n    for (const button of Array.from(this.element.querySelectorAll(\"[data-trix-key]\"))) {\n      const buttonKeys = button.getAttribute(\"data-trix-key\").split(\"+\")\n      const buttonKeyString = JSON.stringify(buttonKeys.sort())\n      if (buttonKeyString === keyString) {\n        triggerEvent(\"mousedown\", { onElement: button })\n        return true\n      }\n    }\n    return false\n  }\n\n  // Dialogs\n\n  dialogIsVisible(dialogName) {\n    const element = this.getDialog(dialogName)\n    if (element) {\n      return element.hasAttribute(\"data-trix-active\")\n    }\n  }\n\n  toggleDialog(dialogName) {\n    if (this.dialogIsVisible(dialogName)) {\n      return this.hideDialog()\n    } else {\n      return this.showDialog(dialogName)\n    }\n  }\n\n  showDialog(dialogName) {\n    this.hideDialog()\n    this.delegate?.toolbarWillShowDialog()\n\n    const element = this.getDialog(dialogName)\n    element.setAttribute(\"data-trix-active\", \"\")\n    element.classList.add(\"trix-active\")\n\n    Array.from(element.querySelectorAll(\"input[disabled]\")).forEach((disabledInput) => {\n      disabledInput.removeAttribute(\"disabled\")\n    })\n\n    const attributeName = getAttributeName(element)\n    if (attributeName) {\n      const input = getInputForDialog(element, dialogName)\n      if (input) {\n        input.value = this.attributes[attributeName] || \"\"\n        input.select()\n      }\n    }\n\n    return this.delegate?.toolbarDidShowDialog(dialogName)\n  }\n\n  setAttribute(dialogElement) {\n    const attributeName = getAttributeName(dialogElement)\n    const input = getInputForDialog(dialogElement, attributeName)\n    if (input.willValidate && !input.checkValidity()) {\n      input.setAttribute(\"data-trix-validate\", \"\")\n      input.classList.add(\"trix-validate\")\n      return input.focus()\n    } else {\n      this.delegate?.toolbarDidUpdateAttribute(attributeName, input.value)\n      return this.hideDialog()\n    }\n  }\n\n  removeAttribute(dialogElement) {\n    const attributeName = getAttributeName(dialogElement)\n    this.delegate?.toolbarDidRemoveAttribute(attributeName)\n    return this.hideDialog()\n  }\n\n  hideDialog() {\n    const element = this.element.querySelector(activeDialogSelector)\n    if (element) {\n      element.removeAttribute(\"data-trix-active\")\n      element.classList.remove(\"trix-active\")\n      this.resetDialogInputs()\n      return this.delegate?.toolbarDidHideDialog(getDialogName(element))\n    }\n  }\n\n  resetDialogInputs() {\n    Array.from(this.element.querySelectorAll(dialogInputSelector)).forEach((input) => {\n      input.setAttribute(\"disabled\", \"disabled\")\n      input.removeAttribute(\"data-trix-validate\")\n      input.classList.remove(\"trix-validate\")\n    })\n  }\n\n  getDialog(dialogName) {\n    return this.element.querySelector(`[data-trix-dialog=${dialogName}]`)\n  }\n}\n", "/* eslint-disable\n    id-length,\n*/\nimport * as config from \"trix/config\"\n\nimport { serializeToContentType } from \"trix/core/serialization\"\n\nimport Controller from \"trix/controllers/controller\"\nimport Level0InputController from \"trix/controllers/level_0_input_controller\"\nimport Level2InputController from \"trix/controllers/level_2_input_controller\"\nimport CompositionController from \"trix/controllers/composition_controller\"\nimport ToolbarController from \"trix/controllers/toolbar_controller\"\nimport Composition from \"trix/models/composition\"\nimport Editor from \"trix/models/editor\"\nimport AttachmentManager from \"trix/models/attachment_manager\"\nimport SelectionManager from \"trix/models/selection_manager\"\n\nimport { getBlockConfig, objectsAreEqual, rangeIsCollapsed, rangesAreEqual } from \"trix/core/helpers\"\nimport { selectionChangeObserver } from \"trix/observers/selection_change_observer\"\n\nconst snapshotsAreEqual = (a, b) => rangesAreEqual(a.selectedRange, b.selectedRange) && a.document.isEqualTo(b.document)\n\nexport default class EditorController extends Controller {\n  static actions = {\n    undo: {\n      test() {\n        return this.editor.canUndo()\n      },\n      perform() {\n        return this.editor.undo()\n      },\n    },\n    redo: {\n      test() {\n        return this.editor.canRedo()\n      },\n      perform() {\n        return this.editor.redo()\n      },\n    },\n    link: {\n      test() {\n        return this.editor.canActivateAttribute(\"href\")\n      },\n    },\n    increaseNestingLevel: {\n      test() {\n        return this.editor.canIncreaseNestingLevel()\n      },\n      perform() {\n        return this.editor.increaseNestingLevel() && this.render()\n      },\n    },\n    decreaseNestingLevel: {\n      test() {\n        return this.editor.canDecreaseNestingLevel()\n      },\n      perform() {\n        return this.editor.decreaseNestingLevel() && this.render()\n      },\n    },\n    attachFiles: {\n      test() {\n        return true\n      },\n      perform() {\n        return config.input.pickFiles(this.editor.insertFiles)\n      },\n    },\n  }\n\n  constructor({ editorElement, document, html }) {\n    super(...arguments)\n    this.editorElement = editorElement\n    this.selectionManager = new SelectionManager(this.editorElement)\n    this.selectionManager.delegate = this\n\n    this.composition = new Composition()\n    this.composition.delegate = this\n\n    this.attachmentManager = new AttachmentManager(this.composition.getAttachments())\n    this.attachmentManager.delegate = this\n\n    this.inputController =\n      config.input.getLevel() === 2\n        ? new Level2InputController(this.editorElement)\n        : new Level0InputController(this.editorElement)\n\n    this.inputController.delegate = this\n    this.inputController.responder = this.composition\n\n    this.compositionController = new CompositionController(this.editorElement, this.composition)\n    this.compositionController.delegate = this\n\n    this.toolbarController = new ToolbarController(this.editorElement.toolbarElement)\n    this.toolbarController.delegate = this\n\n    this.editor = new Editor(this.composition, this.selectionManager, this.editorElement)\n    if (document) {\n      this.editor.loadDocument(document)\n    } else {\n      this.editor.loadHTML(html)\n    }\n  }\n\n  registerSelectionManager() {\n    return selectionChangeObserver.registerSelectionManager(this.selectionManager)\n  }\n\n  unregisterSelectionManager() {\n    return selectionChangeObserver.unregisterSelectionManager(this.selectionManager)\n  }\n\n  render() {\n    return this.compositionController.render()\n  }\n\n  reparse() {\n    return this.composition.replaceHTML(this.editorElement.innerHTML)\n  }\n\n  // Composition delegate\n\n  compositionDidChangeDocument(document) {\n    this.notifyEditorElement(\"document-change\")\n    if (!this.handlingInput) {\n      return this.render()\n    }\n  }\n\n  compositionDidChangeCurrentAttributes(currentAttributes) {\n    this.currentAttributes = currentAttributes\n    this.toolbarController.updateAttributes(this.currentAttributes)\n    this.updateCurrentActions()\n    return this.notifyEditorElement(\"attributes-change\", { attributes: this.currentAttributes })\n  }\n\n  compositionDidPerformInsertionAtRange(range) {\n    if (this.pasting) {\n      this.pastedRange = range\n    }\n  }\n\n  compositionShouldAcceptFile(file) {\n    return this.notifyEditorElement(\"file-accept\", { file })\n  }\n\n  compositionDidAddAttachment(attachment) {\n    const managedAttachment = this.attachmentManager.manageAttachment(attachment)\n    return this.notifyEditorElement(\"attachment-add\", { attachment: managedAttachment })\n  }\n\n  compositionDidEditAttachment(attachment) {\n    this.compositionController.rerenderViewForObject(attachment)\n    const managedAttachment = this.attachmentManager.manageAttachment(attachment)\n    this.notifyEditorElement(\"attachment-edit\", { attachment: managedAttachment })\n    return this.notifyEditorElement(\"change\")\n  }\n\n  compositionDidChangeAttachmentPreviewURL(attachment) {\n    this.compositionController.invalidateViewForObject(attachment)\n    return this.notifyEditorElement(\"change\")\n  }\n\n  compositionDidRemoveAttachment(attachment) {\n    const managedAttachment = this.attachmentManager.unmanageAttachment(attachment)\n    return this.notifyEditorElement(\"attachment-remove\", { attachment: managedAttachment })\n  }\n\n  compositionDidStartEditingAttachment(attachment, options) {\n    this.attachmentLocationRange = this.composition.document.getLocationRangeOfAttachment(attachment)\n    this.compositionController.installAttachmentEditorForAttachment(attachment, options)\n    return this.selectionManager.setLocationRange(this.attachmentLocationRange)\n  }\n\n  compositionDidStopEditingAttachment(attachment) {\n    this.compositionController.uninstallAttachmentEditor()\n    this.attachmentLocationRange = null\n  }\n\n  compositionDidRequestChangingSelectionToLocationRange(locationRange) {\n    if (this.loadingSnapshot && !this.isFocused()) return\n    this.requestedLocationRange = locationRange\n    this.compositionRevisionWhenLocationRangeRequested = this.composition.revision\n    if (!this.handlingInput) {\n      return this.render()\n    }\n  }\n\n  compositionWillLoadSnapshot() {\n    this.loadingSnapshot = true\n  }\n\n  compositionDidLoadSnapshot() {\n    this.compositionController.refreshViewCache()\n    this.render()\n    this.loadingSnapshot = false\n  }\n\n  getSelectionManager() {\n    return this.selectionManager\n  }\n\n  // Attachment manager delegate\n\n  attachmentManagerDidRequestRemovalOfAttachment(attachment) {\n    return this.removeAttachment(attachment)\n  }\n\n  // Document controller delegate\n\n  compositionControllerWillSyncDocumentView() {\n    this.inputController.editorWillSyncDocumentView()\n    this.selectionManager.lock()\n    return this.selectionManager.clearSelection()\n  }\n\n  compositionControllerDidSyncDocumentView() {\n    this.inputController.editorDidSyncDocumentView()\n    this.selectionManager.unlock()\n    this.updateCurrentActions()\n    return this.notifyEditorElement(\"sync\")\n  }\n\n  compositionControllerDidRender() {\n    if (this.requestedLocationRange) {\n      if (this.compositionRevisionWhenLocationRangeRequested === this.composition.revision) {\n        this.selectionManager.setLocationRange(this.requestedLocationRange)\n      }\n      this.requestedLocationRange = null\n      this.compositionRevisionWhenLocationRangeRequested = null\n    }\n\n    if (this.renderedCompositionRevision !== this.composition.revision) {\n      this.runEditorFilters()\n      this.composition.updateCurrentAttributes()\n      this.notifyEditorElement(\"render\")\n    }\n\n    this.renderedCompositionRevision = this.composition.revision\n  }\n\n  compositionControllerDidFocus() {\n    if (this.isFocusedInvisibly()) {\n      this.setLocationRange({ index: 0, offset: 0 })\n    }\n    this.toolbarController.hideDialog()\n    return this.notifyEditorElement(\"focus\")\n  }\n\n  compositionControllerDidBlur() {\n    return this.notifyEditorElement(\"blur\")\n  }\n\n  compositionControllerDidSelectAttachment(attachment, options) {\n    this.toolbarController.hideDialog()\n    return this.composition.editAttachment(attachment, options)\n  }\n\n  compositionControllerDidRequestDeselectingAttachment(attachment) {\n    const locationRange = this.attachmentLocationRange || this.composition.document.getLocationRangeOfAttachment(attachment)\n    return this.selectionManager.setLocationRange(locationRange[1])\n  }\n\n  compositionControllerWillUpdateAttachment(attachment) {\n    return this.editor.recordUndoEntry(\"Edit Attachment\", { context: attachment.id, consolidatable: true })\n  }\n\n  compositionControllerDidRequestRemovalOfAttachment(attachment) {\n    return this.removeAttachment(attachment)\n  }\n\n  // Input controller delegate\n\n  inputControllerWillHandleInput() {\n    this.handlingInput = true\n    this.requestedRender = false\n  }\n\n  inputControllerDidRequestRender() {\n    this.requestedRender = true\n  }\n\n  inputControllerDidHandleInput() {\n    this.handlingInput = false\n    if (this.requestedRender) {\n      this.requestedRender = false\n      return this.render()\n    }\n  }\n\n  inputControllerDidAllowUnhandledInput() {\n    return this.notifyEditorElement(\"change\")\n  }\n\n  inputControllerDidRequestReparse() {\n    return this.reparse()\n  }\n\n  inputControllerWillPerformTyping() {\n    return this.recordTypingUndoEntry()\n  }\n\n  inputControllerWillPerformFormatting(attributeName) {\n    return this.recordFormattingUndoEntry(attributeName)\n  }\n\n  inputControllerWillCutText() {\n    return this.editor.recordUndoEntry(\"Cut\")\n  }\n\n  inputControllerWillPaste(paste) {\n    this.editor.recordUndoEntry(\"Paste\")\n    this.pasting = true\n    return this.notifyEditorElement(\"before-paste\", { paste })\n  }\n\n  inputControllerDidPaste(paste) {\n    paste.range = this.pastedRange\n    this.pastedRange = null\n    this.pasting = null\n    return this.notifyEditorElement(\"paste\", { paste })\n  }\n\n  inputControllerWillMoveText() {\n    return this.editor.recordUndoEntry(\"Move\")\n  }\n\n  inputControllerWillAttachFiles() {\n    return this.editor.recordUndoEntry(\"Drop Files\")\n  }\n\n  inputControllerWillPerformUndo() {\n    return this.editor.undo()\n  }\n\n  inputControllerWillPerformRedo() {\n    return this.editor.redo()\n  }\n\n  inputControllerDidReceiveKeyboardCommand(keys) {\n    return this.toolbarController.applyKeyboardCommand(keys)\n  }\n\n  inputControllerDidStartDrag() {\n    this.locationRangeBeforeDrag = this.selectionManager.getLocationRange()\n  }\n\n  inputControllerDidReceiveDragOverPoint(point) {\n    return this.selectionManager.setLocationRangeFromPointRange(point)\n  }\n\n  inputControllerDidCancelDrag() {\n    this.selectionManager.setLocationRange(this.locationRangeBeforeDrag)\n    this.locationRangeBeforeDrag = null\n  }\n\n  // Selection manager delegate\n\n  locationRangeDidChange(locationRange) {\n    this.composition.updateCurrentAttributes()\n    this.updateCurrentActions()\n    if (this.attachmentLocationRange && !rangesAreEqual(this.attachmentLocationRange, locationRange)) {\n      this.composition.stopEditingAttachment()\n    }\n    return this.notifyEditorElement(\"selection-change\")\n  }\n\n  // Toolbar controller delegate\n\n  toolbarDidClickButton() {\n    if (!this.getLocationRange()) {\n      return this.setLocationRange({ index: 0, offset: 0 })\n    }\n  }\n\n  toolbarDidInvokeAction(actionName, invokingElement) {\n    return this.invokeAction(actionName, invokingElement)\n  }\n\n  toolbarDidToggleAttribute(attributeName) {\n    this.recordFormattingUndoEntry(attributeName)\n    this.composition.toggleCurrentAttribute(attributeName)\n    this.render()\n    if (!this.selectionFrozen) {\n      return this.editorElement.focus()\n    }\n  }\n\n  toolbarDidUpdateAttribute(attributeName, value) {\n    this.recordFormattingUndoEntry(attributeName)\n    this.composition.setCurrentAttribute(attributeName, value)\n    this.render()\n    if (!this.selectionFrozen) {\n      return this.editorElement.focus()\n    }\n  }\n\n  toolbarDidRemoveAttribute(attributeName) {\n    this.recordFormattingUndoEntry(attributeName)\n    this.composition.removeCurrentAttribute(attributeName)\n    this.render()\n    if (!this.selectionFrozen) {\n      return this.editorElement.focus()\n    }\n  }\n\n  toolbarWillShowDialog(dialogElement) {\n    this.composition.expandSelectionForEditing()\n    return this.freezeSelection()\n  }\n\n  toolbarDidShowDialog(dialogName) {\n    return this.notifyEditorElement(\"toolbar-dialog-show\", { dialogName })\n  }\n\n  toolbarDidHideDialog(dialogName) {\n    this.thawSelection()\n    this.editorElement.focus()\n    return this.notifyEditorElement(\"toolbar-dialog-hide\", { dialogName })\n  }\n\n  // Selection\n\n  freezeSelection() {\n    if (!this.selectionFrozen) {\n      this.selectionManager.lock()\n      this.composition.freezeSelection()\n      this.selectionFrozen = true\n      return this.render()\n    }\n  }\n\n  thawSelection() {\n    if (this.selectionFrozen) {\n      this.composition.thawSelection()\n      this.selectionManager.unlock()\n      this.selectionFrozen = false\n      return this.render()\n    }\n  }\n\n  canInvokeAction(actionName) {\n    if (this.actionIsExternal(actionName)) {\n      return true\n    } else {\n      return !!this.actions[actionName]?.test?.call(this)\n    }\n  }\n\n  invokeAction(actionName, invokingElement) {\n    if (this.actionIsExternal(actionName)) {\n      return this.notifyEditorElement(\"action-invoke\", { actionName, invokingElement })\n    } else {\n      return this.actions[actionName]?.perform?.call(this)\n    }\n  }\n\n  actionIsExternal(actionName) {\n    return /^x-./.test(actionName)\n  }\n\n  getCurrentActions() {\n    const result = {}\n    for (const actionName in this.actions) {\n      result[actionName] = this.canInvokeAction(actionName)\n    }\n    return result\n  }\n\n  updateCurrentActions() {\n    const currentActions = this.getCurrentActions()\n    if (!objectsAreEqual(currentActions, this.currentActions)) {\n      this.currentActions = currentActions\n      this.toolbarController.updateActions(this.currentActions)\n      return this.notifyEditorElement(\"actions-change\", { actions: this.currentActions })\n    }\n  }\n\n  // Editor filters\n\n  runEditorFilters() {\n    let snapshot = this.composition.getSnapshot()\n\n    Array.from(this.editor.filters).forEach((filter) => {\n      const { document, selectedRange } = snapshot\n      snapshot = filter.call(this.editor, snapshot) || {}\n      if (!snapshot.document) {\n        snapshot.document = document\n      }\n      if (!snapshot.selectedRange) {\n        snapshot.selectedRange = selectedRange\n      }\n    })\n\n    if (!snapshotsAreEqual(snapshot, this.composition.getSnapshot())) {\n      return this.composition.loadSnapshot(snapshot)\n    }\n  }\n\n  // Private\n\n  updateInputElement() {\n    const element = this.compositionController.getSerializableElement()\n    const value = serializeToContentType(element, \"text/html\")\n    return this.editorElement.setInputElementValue(value)\n  }\n\n  notifyEditorElement(message, data) {\n    switch (message) {\n      case \"document-change\":\n        this.documentChangedSinceLastRender = true\n        break\n      case \"render\":\n        if (this.documentChangedSinceLastRender) {\n          this.documentChangedSinceLastRender = false\n          this.notifyEditorElement(\"change\")\n        }\n        break\n      case \"change\":\n      case \"attachment-add\":\n      case \"attachment-edit\":\n      case \"attachment-remove\":\n        this.updateInputElement()\n        break\n    }\n\n    return this.editorElement.notify(message, data)\n  }\n\n  removeAttachment(attachment) {\n    this.editor.recordUndoEntry(\"Delete Attachment\")\n    this.composition.removeAttachment(attachment)\n    return this.render()\n  }\n\n  recordFormattingUndoEntry(attributeName) {\n    const blockConfig = getBlockConfig(attributeName)\n    const locationRange = this.selectionManager.getLocationRange()\n    if (blockConfig || !rangeIsCollapsed(locationRange)) {\n      return this.editor.recordUndoEntry(\"Formatting\", { context: this.getUndoContext(), consolidatable: true })\n    }\n  }\n\n  recordTypingUndoEntry() {\n    return this.editor.recordUndoEntry(\"Typing\", {\n      context: this.getUndoContext(this.currentAttributes),\n      consolidatable: true,\n    })\n  }\n\n  getUndoContext(...context) {\n    return [ this.getLocationContext(), this.getTimeContext(), ...Array.from(context) ]\n  }\n\n  getLocationContext() {\n    const locationRange = this.selectionManager.getLocationRange()\n    if (rangeIsCollapsed(locationRange)) {\n      return locationRange[0].index\n    } else {\n      return locationRange\n    }\n  }\n\n  getTimeContext() {\n    if (config.undo.interval > 0) {\n      return Math.floor(new Date().getTime() / config.undo.interval)\n    } else {\n      return 0\n    }\n  }\n\n  isFocused() {\n    return this.editorElement === this.editorElement.ownerDocument?.activeElement\n  }\n\n  // Detect \"Cursor disappears sporadically\" Firefox bug.\n  // - https://bugzilla.mozilla.org/show_bug.cgi?id=226301\n  isFocusedInvisibly() {\n    return this.isFocused() && !this.getLocationRange()\n  }\n\n  get actions() {\n    return this.constructor.actions\n  }\n}\n\nEditorController.proxyMethod(\"getSelectionManager().setLocationRange\")\nEditorController.proxyMethod(\"getSelectionManager().getLocationRange\")\n", "import * as config from \"trix/config\"\n\nimport { installDefaultCSSForTagName } from \"trix/core/helpers\"\n\ninstallDefaultCSSForTagName(\"trix-toolbar\", `\\\n%t {\n  display: block;\n}\n\n%t {\n  white-space: nowrap;\n}\n\n%t [data-trix-dialog] {\n  display: none;\n}\n\n%t [data-trix-dialog][data-trix-active] {\n  display: block;\n}\n\n%t [data-trix-dialog] [data-trix-validate]:invalid {\n  background-color: #ffdddd;\n}`)\n\nexport default class TrixToolbarElement extends HTMLElement {\n\n  // Element lifecycle\n\n  connectedCallback() {\n    if (this.innerHTML === \"\") {\n      this.innerHTML = config.toolbar.getDefaultHTML()\n    }\n  }\n}\n", "import * as config from \"trix/config\"\n\nimport {\n  findClosestElementFromNode,\n  handleEvent,\n  handleEventOnce,\n  installDefaultCSSForTagName,\n  makeElement,\n  triggerEvent,\n} from \"trix/core/helpers\"\n\nimport { attachmentSelector } from \"trix/config/attachments\"\nimport EditorController from \"trix/controllers/editor_controller\"\nimport \"trix/elements/trix_toolbar_element\"\n\nlet id = 0\n\n// Contenteditable support helpers\n\nconst autofocus = function(element) {\n  if (!document.querySelector(\":focus\")) {\n    if (element.hasAttribute(\"autofocus\") && document.querySelector(\"[autofocus]\") === element) {\n      return element.focus()\n    }\n  }\n}\n\nconst makeEditable = function(element) {\n  if (element.hasAttribute(\"contenteditable\")) {\n    return\n  }\n  element.setAttribute(\"contenteditable\", \"\")\n  return handleEventOnce(\"focus\", {\n    onElement: element,\n    withCallback() {\n      return configureContentEditable(element)\n    },\n  })\n}\n\nconst configureContentEditable = function(element) {\n  disableObjectResizing(element)\n  return setDefaultParagraphSeparator(element)\n}\n\nconst disableObjectResizing = function(element) {\n  if (document.queryCommandSupported?.(\"enableObjectResizing\")) {\n    document.execCommand(\"enableObjectResizing\", false, false)\n    return handleEvent(\"mscontrolselect\", { onElement: element, preventDefault: true })\n  }\n}\n\nconst setDefaultParagraphSeparator = function(element) {\n  if (document.queryCommandSupported?.(\"DefaultParagraphSeparator\")) {\n    const { tagName } = config.blockAttributes.default\n    if ([ \"div\", \"p\" ].includes(tagName)) {\n      return document.execCommand(\"DefaultParagraphSeparator\", false, tagName)\n    }\n  }\n}\n\n// Accessibility helpers\n\nconst addAccessibilityRole = function(element) {\n  if (element.hasAttribute(\"role\")) {\n    return\n  }\n  return element.setAttribute(\"role\", \"textbox\")\n}\n\nconst ensureAriaLabel = function(element) {\n  if (element.hasAttribute(\"aria-label\") || element.hasAttribute(\"aria-labelledby\")) {\n    return\n  }\n\n  const update = function() {\n    const texts = Array.from(element.labels).map((label) => {\n      if (!label.contains(element)) return label.textContent\n    }).filter(text => text)\n\n    const text = texts.join(\" \")\n    if (text) {\n      return element.setAttribute(\"aria-label\", text)\n    } else {\n      return element.removeAttribute(\"aria-label\")\n    }\n  }\n  update()\n  return handleEvent(\"focus\", { onElement: element, withCallback: update })\n}\n\n// Style\n\nconst cursorTargetStyles = (function() {\n  if (config.browser.forcesObjectResizing) {\n    return {\n      display: \"inline\",\n      width: \"auto\",\n    }\n  } else {\n    return {\n      display: \"inline-block\",\n      width: \"1px\",\n    }\n  }\n})()\n\ninstallDefaultCSSForTagName(\"trix-editor\", `\\\n%t {\n    display: block;\n}\n\n%t:empty::before {\n    content: attr(placeholder);\n    color: graytext;\n    cursor: text;\n    pointer-events: none;\n    white-space: pre-line;\n}\n\n%t a[contenteditable=false] {\n    cursor: text;\n}\n\n%t img {\n    max-width: 100%;\n    height: auto;\n}\n\n%t ${attachmentSelector} figcaption textarea {\n    resize: none;\n}\n\n%t ${attachmentSelector} figcaption textarea.trix-autoresize-clone {\n    position: absolute;\n    left: -9999px;\n    max-height: 0px;\n}\n\n%t ${attachmentSelector} figcaption[data-trix-placeholder]:empty::before {\n    content: attr(data-trix-placeholder);\n    color: graytext;\n}\n\n%t [data-trix-cursor-target] {\n    display: ${cursorTargetStyles.display} !important;\n    width: ${cursorTargetStyles.width} !important;\n    padding: 0 !important;\n    margin: 0 !important;\n    border: none !important;\n}\n\n%t [data-trix-cursor-target=left] {\n    vertical-align: top !important;\n    margin-left: -1px !important;\n}\n\n%t [data-trix-cursor-target=right] {\n    vertical-align: bottom !important;\n    margin-right: -1px !important;\n}`)\n\nexport default class TrixEditorElement extends HTMLElement {\n\n  // Properties\n\n  get trixId() {\n    if (this.hasAttribute(\"trix-id\")) {\n      return this.getAttribute(\"trix-id\")\n    } else {\n      this.setAttribute(\"trix-id\", ++id)\n      return this.trixId\n    }\n  }\n\n  get labels() {\n    const labels = []\n    if (this.id && this.ownerDocument) {\n      labels.push(...Array.from(this.ownerDocument.querySelectorAll(`label[for='${this.id}']`) || []))\n    }\n\n    const label = findClosestElementFromNode(this, { matchingSelector: \"label\" })\n    if (label) {\n      if ([ this, null ].includes(label.control)) {\n        labels.push(label)\n      }\n    }\n\n    return labels\n  }\n\n  get toolbarElement() {\n    if (this.hasAttribute(\"toolbar\")) {\n      return this.ownerDocument?.getElementById(this.getAttribute(\"toolbar\"))\n    } else if (this.parentNode) {\n      const toolbarId = `trix-toolbar-${this.trixId}`\n      this.setAttribute(\"toolbar\", toolbarId)\n      const element = makeElement(\"trix-toolbar\", { id: toolbarId })\n      this.parentNode.insertBefore(element, this)\n      return element\n    } else {\n      return undefined\n    }\n  }\n\n  get form() {\n    return this.inputElement?.form\n  }\n\n  get inputElement() {\n    if (this.hasAttribute(\"input\")) {\n      return this.ownerDocument?.getElementById(this.getAttribute(\"input\"))\n    } else if (this.parentNode) {\n      const inputId = `trix-input-${this.trixId}`\n      this.setAttribute(\"input\", inputId)\n      const element = makeElement(\"input\", { type: \"hidden\", id: inputId })\n      this.parentNode.insertBefore(element, this.nextElementSibling)\n      return element\n    } else {\n      return undefined\n    }\n  }\n\n  get editor() {\n    return this.editorController?.editor\n  }\n\n  get name() {\n    return this.inputElement?.name\n  }\n\n  get value() {\n    return this.inputElement?.value\n  }\n\n  set value(defaultValue) {\n    this.defaultValue = defaultValue\n    this.editor?.loadHTML(this.defaultValue)\n  }\n\n  // Controller delegate methods\n\n  notify(message, data) {\n    if (this.editorController) {\n      return triggerEvent(`trix-${message}`, { onElement: this, attributes: data })\n    }\n  }\n\n  setInputElementValue(value) {\n    if (this.inputElement) {\n      this.inputElement.value = value\n    }\n  }\n\n  // Element lifecycle\n\n  connectedCallback() {\n    if (!this.hasAttribute(\"data-trix-internal\")) {\n      makeEditable(this)\n      addAccessibilityRole(this)\n      ensureAriaLabel(this)\n\n      if (!this.editorController) {\n        triggerEvent(\"trix-before-initialize\", { onElement: this })\n        this.editorController = new EditorController({\n          editorElement: this,\n          html: this.defaultValue = this.value,\n        })\n        requestAnimationFrame(() => triggerEvent(\"trix-initialize\", { onElement: this }))\n      }\n      this.editorController.registerSelectionManager()\n      this.registerResetListener()\n      this.registerClickListener()\n      autofocus(this)\n    }\n  }\n\n  disconnectedCallback() {\n    this.editorController?.unregisterSelectionManager()\n    this.unregisterResetListener()\n    return this.unregisterClickListener()\n  }\n\n  // Form support\n\n  registerResetListener() {\n    this.resetListener = this.resetBubbled.bind(this)\n    return window.addEventListener(\"reset\", this.resetListener, false)\n  }\n\n  unregisterResetListener() {\n    return window.removeEventListener(\"reset\", this.resetListener, false)\n  }\n\n  registerClickListener() {\n    this.clickListener = this.clickBubbled.bind(this)\n    return window.addEventListener(\"click\", this.clickListener, false)\n  }\n\n  unregisterClickListener() {\n    return window.removeEventListener(\"click\", this.clickListener, false)\n  }\n\n  resetBubbled(event) {\n    if (event.defaultPrevented) return\n    if (event.target !== this.form) return\n    return this.reset()\n  }\n\n  clickBubbled(event) {\n    if (event.defaultPrevented) return\n    if (this.contains(event.target)) return\n\n    const label = findClosestElementFromNode(event.target, { matchingSelector: \"label\" })\n    if (!label) return\n\n    if (!Array.from(this.labels).includes(label)) return\n\n    return this.focus()\n  }\n\n  reset() {\n    this.value = this.defaultValue\n  }\n}\n", "import { version } from \"../../package.json\"\n\nimport * as config from \"trix/config\"\nimport * as core from \"trix/core\"\nimport * as models from \"trix/models\"\nimport * as views from \"trix/views\"\nimport * as controllers from \"trix/controllers\"\nimport * as observers from \"trix/observers\"\nimport * as operations from \"trix/operations\"\nimport * as elements from \"trix/elements\"\nimport * as filters from \"trix/filters\"\n\nconst Trix = {\n  VERSION: version,\n  config,\n  core,\n  models,\n  views,\n  controllers,\n  observers,\n  operations,\n  elements,\n  filters\n}\n\n// Expose models under the Trix constant for compatibility with v1\nObject.assign(Trix, models)\n\nfunction start() {\n  if (!customElements.get(\"trix-toolbar\")) {\n    customElements.define(\"trix-toolbar\", elements.TrixToolbarElement)\n  }\n\n  if (!customElements.get(\"trix-editor\")) {\n    customElements.define(\"trix-editor\", elements.TrixEditorElement)\n  }\n}\n\nwindow.Trix = Trix\nsetTimeout(start, 0)\n\nexport default Trix\n"],
  "mappings": "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",
  "names": ["attachmentSelector", "attachments", "preview", "presentation", "caption", "name", "size", "file", "attributes", "default", "tagName", "parse", "quote", "nestable", "heading1", "terminal", "breakOnReturn", "group", "code", "htmlAttributes", "text", "plaintext", "bulletList", "bullet", "listAttribute", "test", "element", "parentNode", "this", "numberList", "number", "attachmentGallery", "exclusive", "_element$tagName", "toLowerCase", "androidVersionMatch", "navigator", "userAgent", "match", "androidVersion", "parseInt", "browser$1", "composesExistingText", "recentAndroid", "samsungAndroid", "forcesObjectResizing", "supportsInputEvents", "InputEvent", "every", "prop", "prototype", "lang$1", "attachFiles", "bold", "bullets", "byte", "bytes", "captionPlaceholder", "indent", "italic", "link", "numbers", "outdent", "redo", "remove", "strike", "undo", "unlink", "url", "urlPlaceholder", "GB", "KB", "MB", "PB", "TB", "sizes", "lang", "file_size_formatting", "prefix", "precision", "formatter", "concat", "base", "exp", "Math", "floor", "log", "withoutInsignificantZeros", "pow", "toFixed", "replace", "ZERO_WIDTH_SPACE", "NON_BREAKING_SPACE", "extend", "properties", "key", "value", "html", "document", "documentElement", "matches", "handleEvent", "eventName", "onElement", "matchingSelector", "withCallback", "inPhase", "preventDefault", "times", "arguments", "length", "undefined", "selector", "useCapture", "handler", "event", "destroy", "target", "findClosestElementFromNode", "call", "removeEventListener", "addEventListener", "triggerEvent", "bubbles", "cancelable", "createEvent", "initEvent", "dispatchEvent", "elementMatchesSelector", "nodeType", "node", "untilNode", "Node", "ELEMENT_NODE", "closest", "innerElementIsActive", "activeElement", "elementContainsNode", "findChildIndexOfNode", "_node", "childIndex", "previousSibling", "removeNode", "_node$parentNode", "removeChild", "walkTree", "tree", "onlyNodesOfType", "usingFilter", "expandEntityReferences", "whatToShow", "NodeFilter", "SHOW_ELEMENT", "SHOW_TEXT", "SHOW_COMMENT", "SHOW_ALL", "createTreeWalker", "makeElement", "tag", "options", "createElement", "editable", "contenteditable", "setAttribute", "style", "data", "dataset", "className", "split", "forEach", "classList", "add", "textContent", "childNodes", "childNode", "appendChild", "blockTagNames", "getBlockTagNames", "blockAttributes", "push", "nodeIsBlockContainer", "nodeIsBlockStartComment", "firstChild", "nodeIsBlockStart", "strict", "includes", "nodeIsCommentNode", "COMMENT_NODE", "nodeIsCursorTarget", "nodeIsTextNode", "trixCursorTarget", "nodeIsAttachmentElement", "nodeIsEmptyTextNode", "TEXT_NODE", "input", "level2Enabled", "getLevel", "browser", "pickFiles", "callback", "type", "multiple", "hidden", "id", "fileInputId", "files", "getElementById", "body", "click", "parser", "removeBlankTableCells", "tableCellSeparator", "tableRowSeparator", "text_attributes", "inheritable", "window", "getComputedStyle", "fontWeight", "fontStyle", "href", "groupTagName", "getAttribute", "frozen", "backgroundColor", "toolbar", "getDefaultHTML", "interval", "attachment", "attachmentCaption", "attachmentCaptionEditor", "attachmentMetadata", "attachmentMetadataContainer", "attachmentName", "attachmentProgress", "attachmentSize", "attachmentToolbar", "BasicObject", "expression", "toMethod", "toProperty", "optional", "parseProxyMethodExpression", "subject", "object", "_this$toMethod", "_object", "apply", "proxyMethodExpressionPattern", "Error", "args", "Function", "RegExp", "UTF16String", "box", "fromUCS2String", "toString", "ucs2String", "ucs2decode", "codepoints", "ucs2encode", "constructor", "super", "ucs2Length", "offsetToUCS2Offset", "offset", "slice", "max", "offsetFromUCS2Offset", "ucs2Offset", "fromCodepoints", "charAt", "isEqualTo", "toJSON", "getCacheKey", "hasArrayFrom", "_Array$from", "Array", "from", "hasStringCodePointAt", "_$codePointAt", "codePointAt", "hasStringFromCodePoint", "_String$fromCodePoint", "String", "fromCodePoint", "string", "map", "char", "output", "counter", "charCodeAt", "extra", "array", "result", "fromCharCode", "join", "TrixObject", "jsonString", "fromJSON", "JSON", "hasSameConstructorAs", "inspect", "parts", "contents", "contentsForInspection", "toJSONString", "stringify", "toUTF16String", "arraysAreEqual", "a", "b", "index", "spliceArray", "_len", "_key", "splice", "RTL_PATTERN", "getDirection", "dir", "dirName", "textArea", "form", "supportsDirName", "FormData", "has", "error", "supportsDirSelector", "get", "trim", "allAttributeNames", "blockAttributeNames", "textAttributeNames", "listAttributeNames", "getAllAttributeNames", "getTextAttributeNames", "getBlockAttributeNames", "getBlockConfig", "attributeName", "config", "Object", "keys", "getTextConfig", "installDefaultCSSForTagName", "defaultCSS", "insertStyleElementForTagName", "nonce", "getCSPNonce", "head", "insertBefore", "getMetaElement", "querySelector", "testTransferData", "dataTransferIsPlainText", "dataTransfer", "getData", "DOMParser", "parseFromString", "keyEventIsKeyboardCommand", "platform", "metaKey", "ctrlKey", "defer", "fn", "setTimeout", "copyObject", "objectsAreEqual", "normalizeRange", "range", "isArray", "copyValue", "rangeIsCollapsed", "start", "end", "rangeValuesAreEqual", "rangesAreEqual", "leftRange", "rightRange", "leftStart", "leftEnd", "rightStart", "rightEnd", "left", "right", "SelectionChangeObserver", "update", "bind", "selectionManagers", "started", "stop", "registerSelectionManager", "selectionManager", "unregisterSelectionManager", "filter", "sm", "notifySelectionManagersOfSelectionChange", "selectionDidChange", "reset", "selectionChangeObserver", "getDOMSelection", "selection", "getSelection", "rangeCount", "getDOMRange", "_getDOMSelection", "domRange", "getRangeAt", "domRangeIsPrivate", "setDOMRange", "removeAllRanges", "addRange", "nodeIsPrivate", "startContainer", "endContainer", "getPrototypeOf", "normalizeSpaces", "breakableWhitespacePattern", "squishBreakableWhitespace", "source", "utf16StringDifferences", "diffA", "utf16StringDifference", "utf16String", "diffB", "leftIndex", "rightIndexA", "rightIndexB", "Hash", "fromCommonAttributesOfObjects", "objects", "hash", "getKeys", "getKeysCommonToHash", "values", "copy", "merge", "unbox", "toArray", "isEmpty", "toObject", "keyToRemove", "sort", "ObjectGroup", "groupObjects", "ungroupedObjects", "depth", "asTree", "_object$canBeGrouped2", "_object$canBeGrouped", "_group$canBeGroupedWi", "_group", "canBeGrouped", "canBeGroupedWith", "getObjects", "getDepth", "ObjectMap", "find", "ElementStore", "elements", "getKey", "trixStoreKey", "Operation", "isPerforming", "performing", "hasPerformed", "performed", "hasSucceeded", "succeeded", "hasFailed", "getPromise", "promise", "Promise", "resolve", "reject", "perform", "release", "_this$promise", "_this$promise$cancel", "cancel", "proxyMethod", "ObjectView", "childViews", "rootView", "getNodes", "nodes", "createNodes", "cloneNode", "invalidate", "_this$parentView", "parentView", "invalidateViewForObject", "_this$findViewForObje", "findViewForObject", "findOrCreateCachedChildView", "viewClass", "view", "getCachedViewForObject", "recordChildView", "createChildView", "cacheViewForObject", "ObjectGroupView", "getAllChildViews", "views", "childView", "findElement", "findElementForObject", "getViewCache", "isViewCachingEnabled", "viewCache", "shouldCacheViews", "enableViewCaching", "disableViewCaching", "_this$getViewCache", "cache", "garbageCollectCachedViews", "objectKeys", "objectGroup", "getChildViews", "createContainerElement", "DEFAULT_ALLOWED_ATTRIBUTES", "DEFAULT_FORBIDDEN_PROTOCOLS", "DEFAULT_FORBIDDEN_ELEMENTS", "HTMLSanitizer", "sanitizedElement", "sanitize", "sanitizedHtml", "getHTML", "outerHTML", "innerHTML", "sanitizer", "allowedAttributes", "forbiddenProtocols", "forbiddenElements", "createBodyElementForHTML", "sanitizeElements", "normalizeListElementNesting", "getBody", "walker", "nodesToRemove", "nextNode", "currentNode", "elementIsRemovable", "sanitizeElement", "hasAttribute", "protocol", "removeAttribute", "_ref", "indexOf", "querySelectorAll", "listElement", "previousElement", "previousElementSibling", "elementIsForbidden", "elementIsntSerializable", "doc", "implementation", "createHTMLDocument", "css", "AttachmentView", "uploadProgressDelegate", "attachmentPiece", "piece", "createContentNodes", "innerElement", "figure", "getClassName", "getHref", "tabindex", "hasContent", "setHTML", "getContent", "createCaptionElement", "isPending", "progressElement", "class", "getUploadProgress", "trixMutable", "createCursorTarget", "figcaption", "getCaption", "captionConfig", "getCaptionConfig", "getFilename", "getFormattedFilesize", "nameElement", "createTextNode", "sizeElement", "names", "getType", "extension", "getExtension", "trixAttachment", "trixContentType", "getContentType", "trixId", "trixAttributes", "trixSerialize", "htmlContainsTagName", "_config$attachments$t", "findProgressElement", "_this$findElement", "attachmentDidChangeUploadProgress", "div", "PreviewableAttachmentView", "previewDelegate", "image", "src", "refresh", "updateAttributesForImage", "getURL", "previewURL", "getPreviewURL", "serializedAttributes", "width", "getWidth", "height", "getHeight", "storeKey", "attachmentDidChangeAttributes", "PieceView", "getAttributes", "textConfig", "context", "createAttachmentNodes", "createStringNodes", "_element", "firstElementChild", "isPreviewable", "_this$textConfig", "iterable", "substring", "preserveSpaces", "styles", "pendingElement", "styleProperty", "isLast", "isFirst", "followsWhitespace", "TextView", "pieces", "getPieces", "lastIndex", "endsWithWhitespace", "previousPiece", "BlockView", "block", "createComment", "_getBlockConfig", "getLastAttribute", "textView", "shouldAddExtraNewlineElement", "isRTL", "assign", "getBlockBreakPosition", "entries", "DocumentView", "render", "sync", "elementStore", "setDocument", "shadowElement", "getBlocks", "isSynced", "elementsHaveEqualHTML", "fragment", "createDocumentFragmentForSync", "lastChild", "didSync", "findStoredElements", "createDocumentFragment", "storedElement", "replaceChild", "otherElement", "ignoreSpaces", "t", "e", "i", "n", "o", "s", "l", "r", "Piece", "types", "pieceJSON", "copyWithAttributes", "getValue", "copyWithAdditionalAttributes", "copyWithoutAttribute", "attribute", "getAttributesHash", "hasSameStringValueAsPiece", "hasSameAttributesAsPiece", "isBlockBreak", "isSerializable", "getLength", "canBeConsolidatedWith", "_defineProperty", "ImagePreloadOperation", "Image", "onload", "naturalWidth", "naturalHeight", "onerror", "Attachment", "attributesForFile", "setFile", "filename", "filesize", "contentType", "attachmentJSON", "releaseFile", "didChangeAttributes", "setAttributes", "newAttributes", "_this$previewDelegate", "_this$previewDelegate2", "_this$delegate", "_this$delegate$attach", "delegate", "preloadURL", "previewablePattern", "getFilesize", "_this$getFilename$mat", "getFile", "preloadFile", "releasePreloadedFile", "uploadProgress", "setUploadProgress", "_this$uploadProgressD", "_this$uploadProgressD2", "preloadingURL", "setPreviewURL", "_this$previewDelegate3", "_this$previewDelegate4", "_this$delegate2", "_this$delegate2$attac", "attachmentDidChangePreviewURL", "preload", "fileObjectURL", "URL", "createObjectURL", "revokeObjectURL", "then", "catch", "AttachmentPiece", "ensureAttachmentExclusivelyHasAttribute", "removeProhibitedAttributes", "permittedAttributes", "_piece$attachment", "json", "toConsole", "registerType", "StringPiece", "consolidateWith", "splitAtOffset", "SplittableList", "eachObject", "insertObjectAtIndex", "insertSplittableListAtIndex", "splittableList", "insertSplittableListAtPosition", "position", "splitObjectAtPosition", "editObjectAtIndex", "replaceObjectAtIndex", "removeObjectAtIndex", "getObjectAtIndex", "getSplittableListInRange", "rightIndex", "splitObjectsAtRange", "selectSplittableList", "removeObjectsInRange", "transformObjectsInRange", "transform", "transformedObjects", "rightOuterIndex", "leftInnerIndex", "startOfRange", "endOfRange", "getObjectAtPosition", "findIndexAndOffsetAtPosition", "splitIndex", "splitOffset", "leftObject", "rightObject", "consolidate", "pendingObject", "_pendingObject$canBeC", "_pendingObject", "consolidateFromIndexToIndex", "startIndex", "endIndex", "objectsInRange", "consolidatedInRange", "currentPosition", "nextPosition", "findPositionAtIndexAndOffset", "currentIndex", "getEndPosition", "endPosition", "objectArraysAreEqual", "Text", "textJSON", "notEmpty", "pieceList", "copyWithPieceList", "copyUsingObjectMap", "objectMap", "appendText", "insertTextAtPosition", "removeTextAtRange", "replaceTextAtRange", "moveTextFromRangeToPosition", "getTextAtRange", "addAttributeAtRange", "addAttributesAtRange", "removeAttributeAtRange", "setAttributesAtRange", "getAttributesAtPosition", "_this$pieceList$getOb", "getCommonAttributes", "getCommonAttributesAtRange", "getExpandedRangeForAttributeAtOffset", "getStringAtRange", "getStringAtPosition", "startsWithString", "endsWithString", "getAttachmentPieces", "getAttachments", "getAttachmentAndPositionById", "attachmentId", "getAttachmentById", "getRangeOfAttachment", "attachmentAndPosition", "updateAttributesForAttachment", "_text$pieceList", "eachPiece", "getPieceAtPosition", "toSerializableText", "Block", "blockJSON", "applyBlockBreakToText", "copyWithText", "copyWithoutText", "copyWithoutAttributes", "mappedText", "addAttribute", "expandAttribute", "addHTMLAttribute", "removeLastValue", "removeLastAttribute", "getLastElement", "getAttributeLevel", "getAttributeAtLevel", "level", "hasAttributes", "getLastNestableAttribute", "getNestableAttributes", "getNestingLevel", "decreaseNestingLevel", "increaseNestingLevel", "lastIndexOf", "getListItemAttributes", "isListItem", "isTerminalBlock", "_getBlockConfig2", "breaksOnReturn", "_getBlockConfig3", "findLineBreakInDirectionFromPosition", "direction", "newlineText", "textForStringWithAttributes", "getTextWithoutBlockBreak", "textEndsInBlockBreak", "otherBlock", "otherAttributes", "otherAttribute", "getListAttributeNames", "unmarkExistingInnerBlockBreaksInText", "addBlockBreakToText", "modified", "innerPieces", "lastPiece", "unmarkBlockBreakPiece", "blockBreakText", "blockBreak", "Document", "documentJSON", "textAttributes", "blocks", "blockList", "getBlockAtIndex", "consolidateBlocks", "copyUsingObjectsFromDocument", "sourceDocument", "copyWithBaseBlockAttributes", "replaceBlock", "oldBlock", "newBlock", "insertDocumentAtRange", "locationFromPosition", "getBlockAtPosition", "mergeDocumentAtRange", "formattedDocument", "startPosition", "startLocation", "baseBlockAttributes", "getBaseBlockAttributes", "trailingBlockAttributes", "leadingBlockAttributes", "blockCount", "getBlockCount", "firstBlock", "firstText", "insertTextAtRange", "leftPosition", "rightPosition", "leftLocation", "rightLocation", "locationRangeFromRange", "leftOffset", "leftBlock", "rightOffset", "rightBlock", "leftText", "rightText", "affectedBlockCount", "getDocumentAtRange", "movingRightward", "eachBlockAtRange", "textRange", "eachBlock", "getTextAtIndex", "removeAttributeForAttachment", "setHTMLAttributeAtPosition", "updatedBlock", "insertBlockBreakAtRange", "applyBlockAttributeAtRange", "expanded", "expandRangeToLineBreaksAndSplitBlocks", "blockConfig", "removeLastListAttributeAtRange", "exceptAttributeName", "converted", "convertLineBreaksToBlockBreaksInRange", "removeBlockAttributesAtRange", "removeLastTerminalAttributeAtRange", "consolidateBlocksAtRange", "lastAttributeName", "endLocation", "startBlock", "positionFromLocation", "endBlock", "_this$getBlockAtIndex", "getTextAtPosition", "getCharacterAtPosition", "getEditCount", "editCount", "getCommonAttributesAtPosition", "attributesForBlock", "commonAttributes", "attributesLeft", "inheritableAttributes", "getRangeOfCommonAttributeAtPosition", "startOffset", "endOffset", "blockIndex", "lastAttributeIndex", "min", "attachmentPieces", "getLocationRangeOfAttachment", "getAttachmentPieceForAttachment", "findRangesForBlockAttribute", "ranges", "findRangesForTextAttribute", "withValue", "location", "locationRangeFromPosition", "rangeFromLocationRange", "locationRange", "getTexts", "toSerializableDocument", "pieceForString", "parseTrixDataAttribute", "HTMLParser", "referenceElement", "blockElements", "processedElements", "getDocument", "createHiddenContainer", "containerElement", "nodeFilter", "processNode", "translateBlockElementMarginsToNewlines", "removeHiddenContainer", "display", "nextSibling", "isInsignificantTextNode", "appendBlockForTextNode", "processTextNode", "appendBlockForElement", "processElement", "currentBlockElement", "isBlockElement", "appendStringWithAttributes", "_this$currentBlock", "getBlockAttributes", "getBlockHTMLAttributes", "currentBlock", "appendBlockForAttributesWithElement", "elementIsBlockElement", "currentBlockContainsElement", "parentBlockElement", "findParentBlockElement", "appendEmptyBlock", "parentElement", "_node$previousSibling", "elementCanDisplayPreformattedText", "stringEndsWithWhitespace", "leftTrimBreakableWhitespace", "getTextAttributes", "appendAttachmentWithAttributes", "isExtraBR", "dimensions", "needsTableSeparator", "appendPiece", "appendStringToTextAtIndex", "prependStringToTextAtIndex", "unshift", "configAttr", "attributeInheritedFromBlock", "blockElement", "findBlockElementAncestors", "attrConfig", "_attrConfig$test", "reverse", "settings", "ancestors", "stringIsAllBreakableWhitespace", "nodeEndsWithNonWhitespace", "_element$previousSibl", "content", "defaultMargin", "getMarginOfDefaultBlockElement", "margin", "getMarginOfBlockElementAtIndex", "top", "bottom", "getBlockElementMargin", "whiteSpace", "marginTop", "marginBottom", "FILTER_REJECT", "FILTER_ACCEPT", "unserializableAttributeNames", "serializedAttributesAttribute", "serializedAttributesSelector", "blockCommentPattern", "serializers", "serializable", "HTMLElement", "el", "ManagedAttachment", "attachmentManager", "requestRemovalOfAttachment", "AttachmentManager", "managedAttachments", "manageAttachment", "attachmentIsManaged", "attachmentManagerDidRequestRemovalOfAttachment", "unmanageAttachment", "managedAttachment", "LineBreakInsertion", "composition", "selectedRange", "getSelectedRange", "previousCharacter", "nextCharacter", "shouldInsertBlockBreak", "shouldBreakFormattedBlock", "shouldDecreaseListLevel", "shouldPrependListItem", "shouldRemoveLastBlockAttribute", "Composition", "currentAttributes", "revision", "_this$delegate$compos", "refreshAttachments", "compositionDidChangeDocument", "getSnapshot", "loadSnapshot", "_this$delegate2$compo", "_this$delegate3", "_this$delegate3$compo", "compositionWillLoadSnapshot", "setSelection", "compositionDidLoadSnapshot", "insertText", "updatePosition", "notifyDelegateOfInsertionAtRange", "insertBlock", "insertDocument", "insertString", "getCurrentTextAttributes", "insertBlockBreak", "insertLineBreak", "insertion", "decreaseListLevel", "removeLastBlockAttribute", "breakFormattedBlock", "insertHTML", "replaceHTML", "getLocationRange", "insertFile", "insertFiles", "_this$delegate4", "compositionShouldAcceptFile", "attachmentForFile", "insertAttachments", "insertAttachment", "attachmentText", "textForAttachmentWithAttributes", "shouldManageDeletingInDirection", "shouldManageMovingCursorInDirection", "deleteInDirection", "deletingIntoPreviousBlock", "selectionSpansBlocks", "selectionIsCollapsed", "canDecreaseBlockAttributeLevel", "getBlock", "decreaseBlockAttributeLevel", "getExpandedRangeInDirection", "getAttachmentAtRange", "editAttachment", "moveTextFromRange", "removeAttachment", "stopEditingAttachment", "removeCurrentAttribute", "insertPlaceholder", "placeholderPosition", "getPosition", "selectPlaceholder", "setSelectedRange", "PLACEHOLDER", "forgetPlaceholder", "hasCurrentAttribute", "toggleCurrentAttribute", "setCurrentAttribute", "canSetCurrentAttribute", "canSetCurrentBlockAttribute", "canSetCurrentTextAttribute", "getSelectedDocument", "setBlockAttribute", "setTextAttribute", "notifyDelegateOfCurrentAttributesChange", "setHTMLAtributeAtPosition", "allowedHTMLAttributes", "newDocument", "removeBlockAttribute", "updateCurrentAttributes", "removeTextAttribute", "canDecreaseNestingLevel", "_this$getBlock", "canIncreaseNestingLevel", "previousBlock", "getPreviousBlock", "_this$getBlock2", "_this$getBlock3", "attributeLevel", "ignoreLock", "getCurrentAttributes", "freezeSelection", "thawSelection", "hasFrozenSelection", "_this$delegate5", "compositionDidRequestChangingSelectionToLocationRange", "getSelectionManager", "setLocationRange", "targetLocationRange", "withTargetLocationRange", "withTargetRange", "withTargetDOMRange", "createLocationRangeFromDOMRange", "translateUTF16PositionFromOffset", "editingAttachment", "moveCursorInDirection", "canEditAttachment", "expandSelectionInDirection", "expandSelectionForEditing", "expandSelectionAroundCommonAttribute", "selectionContainsAttachments", "_this$getSelectedAtta", "getSelectedAttachments", "selectionIsInCursorTarget", "positionIsCursorTarget", "locationIsCursorTarget", "positionIsBlockBreak", "_this$document$getPie", "_this$getSelectedDocu", "added", "removed", "oldArray", "newArray", "existingValues", "Set", "currentValues", "_this$delegate6", "_this$delegate6$compo", "compositionDidRemoveAttachment", "_this$delegate7", "_this$delegate7$compo", "compositionDidAddAttachment", "_this$delegate8", "_this$delegate8$compo", "compositionDidEditAttachment", "_this$delegate9", "_this$delegate9$compo", "compositionDidChangeAttachmentPreviewURL", "_this$delegate10", "_this$delegate10$comp", "compositionDidStartEditingAttachment", "_this$delegate11", "_this$delegate11$comp", "compositionDidStopEditingAttachment", "_this$delegate12", "_this$delegate12$comp", "compositionDidChangeCurrentAttributes", "_this$delegate13", "_this$delegate13$comp", "compositionDidPerformInsertionAtRange", "utf16string", "utf16position", "UndoManager", "undoEntries", "redoEntries", "recordUndoEntry", "description", "consolidatable", "previousEntry", "entryHasDescriptionAndContext", "undoEntry", "createEntry", "pop", "redoEntry", "snapshot", "canUndo", "canRedo", "entry", "BLOCK_ATTRIBUTE_NAME", "Filter", "applyBlockAttribute", "findRangesOfBlocks", "findRangesOfPieces", "moveSelectedRangeForward", "attachmentGalleryFilter", "DEFAULT_FILTERS", "Editor", "undoManager", "filters", "loadDocument", "loadHTML", "loadJSON", "getClientRectAtPosition", "getClientRectAtLocationRange", "activateAttribute", "attributeIsActive", "canActivateAttribute", "deactivateAttribute", "LocationMapper", "findLocationFromContainerAndOffset", "container", "foundBlock", "attachmentElement", "findAttachmentElementParentForNode", "rejectAttachmentContents", "nodeLength", "findContainerAndOffsetFromLocation", "nodeOffset", "findNodeAndOffsetFromLocation", "getSignificantNodesForIndex", "acceptSignificantNodes", "recordingNodes", "rejectEmptyTextNodes", "PointMapper", "createDOMRangeFromPoint", "x", "y", "caretPositionFromPoint", "offsetNode", "createRange", "setStart", "caretRangeFromPoint", "createTextRange", "originalDOMRange", "moveToPoint", "select", "getClientRectsForDOMRange", "getClientRects", "SelectionManager", "didMouseDown", "locationMapper", "pointMapper", "lockCount", "currentLocationRange", "lockedLocationRange", "createDOMRangeFromLocationRange", "updateCurrentLocationRange", "setLocationRangeFromPointRange", "pointRange", "getLocationAtPoint", "lock", "unlock", "clearSelection", "_getDOMRange", "collapsed", "selectionIsExpanded", "domRangeWithinElement", "pauseTemporarily", "resumeHandlers", "paused", "resume", "clearTimeout", "resumeTimeout", "_this$delegate$locati", "locationRangeDidChange", "rangeStart", "rangeEnd", "setEnd", "point", "_this$createLocationR", "keyNames", "undoable", "commands", "do", "undos", "AttachmentEditorController", "title", "trixAction", "didClickToolbar", "didClickActionButton", "textarea", "placeholder", "textareaClone", "tabIndex", "autoresize", "scrollHeight", "didInputCaption", "didKeyDownCaption", "didChangeCaption", "didBlurCaption", "editingFigcaption", "editCaption", "focus", "install", "makeElementMutable", "addToolbar", "installCaptionEditor", "uninstall", "savePendingCaption", "didUninstallAttachmentEditor", "pendingCaption", "_this$delegate3$attac", "attachmentEditorDidRequestUpdatingAttributesForAttachment", "attachmentEditorDidRequestRemovingAttributeForAttachment", "stopPropagation", "attachmentEditorDidRequestRemovalOfAttachment", "_this$delegate5$attac", "keyCode", "attachmentEditorDidRequestDeselectingAttachment", "CompositionController", "didFocus", "didBlur", "didClickAttachment", "documentView", "_this$blurPromise", "focused", "compositionControllerDidFocus", "blurPromise", "compositionControllerDidBlur", "findAttachmentForElement", "compositionControllerDidSelectAttachment", "getSerializableElement", "isEditingAttachment", "_this$delegate4$compo", "_this$delegate5$compo", "canSyncDocumentView", "compositionControllerWillSyncDocumentView", "compositionControllerDidSyncDocumentView", "compositionControllerDidRender", "rerenderViewForObject", "refreshViewCache", "attachmentEditor", "installAttachmentEditorForAttachment", "_this$attachmentEdito", "uninstallAttachmentEditor", "_this$attachmentEdito2", "compositionControllerWillUpdateAttachment", "compositionControllerDidRequestRemovalOfAttachment", "compositionControllerDidRequestDeselectingAttachment", "Controller", "mutableAttributeName", "mutableSelector", "childList", "characterData", "characterDataOldValue", "subtree", "MutationObserver", "didMutate", "observer", "observe", "disconnect", "mutations", "_this$delegate$elemen", "findSignificantMutations", "elementDidMutate", "getMutationSummary", "mutation", "mutationIsSignificant", "nodeIsMutable", "nodesModifiedByMutation", "nodeIsSignificant", "addedNodes", "removedNodes", "getTextMutationSummary", "additions", "deletions", "getTextChangesFromCharacterData", "textChanges", "getTextChangesFromChildList", "addition", "summary", "textAdded", "deleted", "textDeleted", "getMutationsByType", "textRemoved", "getTextForNodes", "characterMutations", "startMutation", "endMutation", "summarized", "oldString", "newString", "oldValue", "FileVerificationOperation", "reader", "FileReader", "abort", "readAsArrayBuffer", "FlakyAndroidKeyboardDetector", "shouldIgnore", "previousEvent", "checkSamsungKeyboardBuggyModeStart", "checkSamsungKeyboardBuggyModeEnd", "buggyMode", "insertingLongTextAfterUnidentifiedChar", "differsInWhitespace", "innerText", "inputType", "_this$event$data", "isBeforeInputInsertText", "previousEventWasUnidentifiedKeydown", "_this$previousEvent", "_this$previousEvent2", "text1", "text2", "normalize", "whiteSpaceNormalizerRegexp", "InputController", "mutationObserver", "flakyKeyboardDetector", "events", "handlerFor", "mutationSummary", "editorWillSyncDocumentView", "editorDidSyncDocumentView", "requestRender", "_this$delegate$inputC", "inputControllerDidRequestRender", "requestReparse", "_this$delegate2$input", "inputControllerDidRequestReparse", "operations", "all", "handleInput", "_this$responder", "inputControllerWillAttachFiles", "responder", "defaultPrevented", "inputControllerWillHandleInput", "inputControllerDidHandleInput", "createLinkHTML", "pastedFileCount", "Level0InputController", "resetInputSummary", "setInputSummary", "inputSummary", "isComposing", "inputControllerDidAllowUnhandledInput", "mutationIsExpected", "preferDocument", "mutationAdditionMatchesSummary", "mutationDeletionMatchesSummary", "didDelete", "unexpectedNewlineAddition", "unexpectedNewlineDeletion", "_this$compositionInpu", "textChanged", "composedEmptyString", "compositionInput", "getEndData", "getCompositionInput", "CompositionInput", "isEnded", "_this$responder2", "serializeSelectionToDataTransfer", "_this$responder3", "setData", "canAcceptDataTransfer", "Files", "getPastedHTMLUsingHiddenElement", "pageXOffset", "pageYOffset", "opacity", "requestAnimationFrame", "keydown", "didInput", "keyName", "_context2", "modifier", "_context", "character", "inputControllerDidReceiveKeyboardCommand", "keypress", "altKey", "stringFromKeyEvent", "_this$responder9", "inputControllerWillPerformTyping", "textInput", "toUpperCase", "_this$responder10", "dragenter", "dragstart", "_this$delegate5$input", "draggedRange", "inputControllerDidStartDrag", "dragover", "draggingPoint", "clientX", "clientY", "_this$delegate6$input", "inputControllerDidReceiveDragOverPoint", "dragend", "_this$delegate7$input", "inputControllerDidCancelDrag", "drop", "_event$dataTransfer", "_this$responder11", "_this$responder12", "inputControllerWillMoveText", "_this$responder13", "fromJSONString", "cut", "_this$responder14", "clipboardData", "inputControllerWillCutText", "_this$responder15", "paste", "clipboard", "testClipboardData", "pasteEventIsCrippledSafariHTMLPaste", "_this$responder16", "inputControllerWillPaste", "inputControllerDidPaste", "_this$responder17", "_this$delegate14", "_this$responder18", "_this$delegate15", "_this$delegate16", "_this$responder19", "_this$delegate17", "_clipboard$items", "_clipboard$items$getA", "items", "getAsFile", "_this$delegate18", "_this$responder20", "_this$delegate19", "extensionForFile", "compositionstart", "compositionupdate", "compositionend", "beforeinput", "backspace", "_this$delegate20", "delete", "_this$delegate21", "return", "_this$delegate22", "_this$responder21", "tab", "_this$responder22", "_this$responder23", "_this$responder24", "_this$responder25", "control", "d", "_this$delegate23", "h", "_this$delegate24", "_this$delegate25", "_this$responder26", "shift", "_this$delegate26", "_this$responder27", "_this$responder28", "_this$responder29", "alt", "_this$delegate27", "meta", "_this$delegate28", "_file$type", "which", "charCode", "hasPasteboardFlavor", "hasReadableDynamicData", "isExternalHTMLPaste", "isExternalRichTextPaste", "inputController", "isSignificant", "_this$responder5", "_this$responder4", "canApplyToDocument", "_this$responder6", "_this$responder7", "_this$responder8", "_this$data$start", "_this$data$end", "Level2InputController", "scheduledRender", "composing", "reparse", "scheduleRender", "_this$afterRender", "cancelAnimationFrame", "afterRender", "toggleAttributeIfSupported", "inputControllerWillPerformFormatting", "activateAttributeIfSupported", "getTargetDOMRange", "minLength", "_this$event$getTarget", "_this$event", "targetRanges", "getTargetRanges", "staticRangeToRange", "withEvent", "command", "keyboardCommandFromKeyEvent", "shiftKey", "_event$clipboardData", "pasteEventHasFilesOnly", "pasteEventHasPlainTextOnly", "inputTypes", "dragging", "pointFromEvent", "dragEventHasFiles", "ArrowLeft", "ArrowRight", "Backspace", "Tab", "deleteByComposition", "deleteByCut", "deleteByDrag", "deleteByDragRange", "deleteCompositionText", "deleteContent", "deleteContentBackward", "deleteContentForward", "deleteEntireSoftLine", "deleteHardLineBackward", "deleteHardLineForward", "deleteSoftLineBackward", "deleteSoftLineForward", "deleteWordBackward", "deleteWordForward", "formatBackColor", "formatBold", "formatFontColor", "formatFontName", "formatIndent", "formatItalic", "formatJustifyCenter", "formatJustifyFull", "formatJustifyLeft", "formatJustifyRight", "formatOutdent", "formatRemove", "_this$responder30", "formatSetBlockTextDirection", "formatSetInlineTextDirection", "formatStrikeThrough", "formatSubscript", "formatSuperscript", "formatUnderline", "historyRedo", "inputControllerWillPerformRedo", "historyUndo", "inputControllerWillPerformUndo", "insertCompositionText", "insertFromComposition", "insertFromDrop", "_this$responder31", "insertFromPaste", "_this$responder32", "_this$responder33", "processableFilePaste", "_this$responder34", "_this$responder35", "insertFromYank", "insertLink", "insertOrderedList", "insertParagraph", "_this$responder36", "insertReplacementText", "replacement", "_this$event$dataTrans", "insertTranspose", "insertUnorderedList", "staticRange", "_event$dataTransfer$f", "attributeButtonSelector", "actionButtonSelector", "toolbarButtonSelector", "dialogSelector", "activeDialogSelector", "dialogButtonSelector", "dialogInputSelector", "getInputForDialog", "getAttributeName", "getActionName", "ToolbarController", "didClickAttributeButton", "didClickDialogButton", "didKeyDownDialogInput", "actions", "resetDialogInputs", "toolbarDidClickButton", "actionName", "getDialog", "toggleDialog", "toolbarDidInvokeAction", "toolbarDidToggleAttribute", "refreshAttributeButtons", "dialogElement", "dialog", "hideDialog", "updateActions", "refreshActionButtons", "eachActionButton", "disabled", "updateAttributes", "eachAttributeButton", "dialogIsVisible", "applyKeyboardCommand", "keyString", "button", "buttonKeys", "dialogName", "showDialog", "toolbarWillShowDialog", "disabledInput", "toolbarDidShowDialog", "willValidate", "checkValidity", "toolbarDidUpdateAttribute", "toolbarDidRemoveAttribute", "toolbarDidHideDialog", "EditorController", "editorElement", "compositionController", "toolbarController", "toolbarElement", "editor", "notifyEditorElement", "handlingInput", "updateCurrentActions", "pasting", "pastedRange", "attachmentLocationRange", "loadingSnapshot", "isFocused", "requestedLocationRange", "compositionRevisionWhenLocationRangeRequested", "renderedCompositionRevision", "runEditorFilters", "isFocusedInvisibly", "requestedRender", "recordTypingUndoEntry", "recordFormattingUndoEntry", "locationRangeBeforeDrag", "invokingElement", "invokeAction", "selectionFrozen", "canInvokeAction", "actionIsExternal", "_this$actions$actionN", "_this$actions$actionN2", "getCurrentActions", "currentActions", "snapshotsAreEqual", "updateInputElement", "serializer", "setInputElementValue", "message", "documentChangedSinceLastRender", "notify", "getUndoContext", "getLocationContext", "getTimeContext", "Date", "getTime", "_this$editorElement$o", "ownerDocument", "TrixToolbarElement", "connectedCallback", "makeEditable", "configureContentEditable", "disableObjectResizing", "setDefaultParagraphSeparator", "_document$queryComman", "_document", "queryCommandSupported", "execCommand", "_document$queryComman2", "_document2", "cursorTargetStyles", "TrixEditorElement", "labels", "label", "_this$ownerDocument", "toolbarId", "_this$inputElement", "inputElement", "_this$ownerDocument2", "inputId", "nextElementSibling", "_this$editorControlle", "editorController", "_this$inputElement2", "_this$inputElement3", "defaultValue", "_this$editor", "texts", "contains", "registerResetListener", "registerClickListener", "disconnectedCallback", "_this$editorControlle2", "unregisterResetListener", "unregisterClickListener", "resetListener", "resetBubbled", "clickListener", "clickBubbled", "Trix", "VERSION", "version", "core", "models", "controllers", "observers", "customElements", "define"]
}
